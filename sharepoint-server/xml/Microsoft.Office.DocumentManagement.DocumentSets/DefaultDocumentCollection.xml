<Type Name="DefaultDocumentCollection" FullName="Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection">
  <TypeSignature Language="C#" Value="public class DefaultDocumentCollection : System.Collections.Generic.IEnumerable&lt;Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultDocumentCollection extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultDocumentCollection&#xA;Implements IEnumerable(Of DefaultDocument)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultDocumentCollection : System::Collections::Generic::IEnumerable&lt;Microsoft::Office::DocumentManagement::DocumentSets::DefaultDocument ^&gt;" />
  <TypeSignature Language="F#" Value="type DefaultDocumentCollection = class&#xA;    interface seq&lt;DefaultDocument&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a collection of <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument" /> objects.</summary>
    <remarks>
      <para>The set of documents that is provisioned by default in a new document set.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument Add (string name, Microsoft.SharePoint.SPContentTypeId ctId, byte[] content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument Add(string name, valuetype Microsoft.SharePoint.SPContentTypeId ctId, unsigned int8[] content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.Add(System.String,Microsoft.SharePoint.SPContentTypeId,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, ctId As SPContentTypeId, content As Byte()) As DefaultDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::DocumentManagement::DocumentSets::DefaultDocument ^ Add(System::String ^ name, Microsoft::SharePoint::SPContentTypeId ctId, cli::array &lt;System::Byte&gt; ^ content);" />
      <MemberSignature Language="F#" Value="member this.Add : string * Microsoft.SharePoint.SPContentTypeId * byte[] -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument" Usage="defaultDocumentCollection.Add (name, ctId, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ctId" Type="Microsoft.SharePoint.SPContentTypeId" />
        <Parameter Name="content" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">The name of the document to be added.</param>
        <param name="ctId">A struct that uniquely identifies the content type of the document to be added.</param>
        <param name="content">An array that contains the document contents.</param>
        <summary>Adds a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument" /> object to this <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" /> object.</summary>
        <returns>An instance of the new default document.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSetName">
      <MemberSignature Language="C#" Value="public bool AddSetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AddSetName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.AddSetName" />
      <MemberSignature Language="VB.NET" Value="Public Property AddSetName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AddSetName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AddSetName : bool with get, set" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.AddSetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether or not custom XML-based documents identified in the associated content type definition should be added to the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" /> list.</summary>
        <value>true to include the custom XML documents in the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" /> list; otherwise, false.</value>
        <remarks>
          <para>You can include custom information in content type definitions by adding special XML nodes. These XML nodes are represented by the XmlDocument Element (ContentType) element in the content type definition and you can access them programmatically through the object model.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeContentTypeForDocument">
      <MemberSignature Language="C#" Value="public bool ChangeContentTypeForDocument (string name, Microsoft.SharePoint.SPContentTypeId contentTypeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ChangeContentTypeForDocument(string name, valuetype Microsoft.SharePoint.SPContentTypeId contentTypeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.ChangeContentTypeForDocument(System.String,Microsoft.SharePoint.SPContentTypeId)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeContentTypeForDocument (name As String, contentTypeId As SPContentTypeId) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ChangeContentTypeForDocument(System::String ^ name, Microsoft::SharePoint::SPContentTypeId contentTypeId);" />
      <MemberSignature Language="F#" Value="member this.ChangeContentTypeForDocument : string * Microsoft.SharePoint.SPContentTypeId -&gt; bool" Usage="defaultDocumentCollection.ChangeContentTypeForDocument (name, contentTypeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="contentTypeId" Type="Microsoft.SharePoint.SPContentTypeId" />
      </Parameters>
      <Docs>
        <param name="name">The name of the default document to be altered.</param>
        <param name="contentTypeId">A struct that uniquely identifies the content type to apply to the named document.</param>
        <summary>Changes the content type of the named default document to the specified content type.</summary>
        <returns>true if the operation succeeded; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The number of <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument" /> objects represented in this <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" /> list.</summary>
        <value>An integer that specifies the number of <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument" /> objects represented in this <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" /> list.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="defaultDocumentCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that can be used to iterate through the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" /> instance.</summary>
        <returns>An enumerator that can be used to iterate through the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public DateTime LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastModified" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastModified As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastModified { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModified : DateTime" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the date and time that the current <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" /> object was last changed.</summary>
        <value>The date and time that the current <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" /> object was last changed.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="defaultDocumentCollection.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the document to be removed.</param>
        <summary>Deletes a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument" /> object from this <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument&gt; IEnumerable&lt;DefaultDocument&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument&gt; System.Collections.Generic.IEnumerable&lt;Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocumentCollection.System#Collections#Generic#IEnumerable&lt;Microsoft#Office#DocumentManagement#DocumentSets#DefaultDocument&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of DefaultDocument) Implements IEnumerable(Of DefaultDocument).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;Microsoft::Office::DocumentManagement::DocumentSets::DefaultDocument ^&gt; ^ System.Collections.Generic.IEnumerable&lt;Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;Microsoft::Office::DocumentManagement::DocumentSets::DefaultDocument ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.Office.DocumentManagement.DocumentSets.DefaultDocument&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>