<Type Name="SecureStoreService" FullName="Microsoft.Office.SecureStoreService.Server.SecureStoreService">
  <TypeSignature Language="C#" Value="public sealed class SecureStoreService : Microsoft.SharePoint.Administration.SPIisWebService, Microsoft.SharePoint.Administration.IServiceAdministration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecureStoreService extends Microsoft.SharePoint.Administration.SPIisWebService implements class Microsoft.SharePoint.Administration.IServiceAdministration" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.SecureStoreService.Server.SecureStoreService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureStoreService&#xA;Inherits SPIisWebService&#xA;Implements IServiceAdministration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureStoreService sealed : Microsoft::SharePoint::Administration::SPIisWebService, Microsoft::SharePoint::Administration::IServiceAdministration" />
  <TypeSignature Language="F#" Value="type SecureStoreService = class&#xA;    inherit SPIisWebService&#xA;    interface IServiceAdministration" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Administration.SPIisWebService</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SharePoint.Administration.IServiceAdministration</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("5787BB2F-87EF-4764-99F5-0DD20F87FEB5")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The class that represents the Secure Store Service.</summary>
    <remarks>
      <para>This class provides administration support for the SharePoint Secure Store Service and is a Web service hosted by Internet Information Services 7.0. It allows the caller to create an instance of the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication" /> class, or the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplicationProxy" /> class, or both classes.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureStoreService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureStoreService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreService" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureStoreService (string name, Microsoft.SharePoint.Administration.SPFarm farm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.SharePoint.Administration.SPFarm farm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreService.#ctor(System.String,Microsoft.SharePoint.Administration.SPFarm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, farm As SPFarm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureStoreService(System::String ^ name, Microsoft::SharePoint::Administration::SPFarm ^ farm);" />
      <MemberSignature Language="F#" Value="new Microsoft.Office.SecureStoreService.Server.SecureStoreService : string * Microsoft.SharePoint.Administration.SPFarm -&gt; Microsoft.Office.SecureStoreService.Server.SecureStoreService" Usage="new Microsoft.Office.SecureStoreService.Server.SecureStoreService (name, farm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="farm" Type="Microsoft.SharePoint.Administration.SPFarm" />
      </Parameters>
      <Docs>
        <param name="name">The name of the new Secure Store Service. This parameter is not used. </param>
        <param name="farm">The farm on which to install the Secure Store Service.</param>
        <summary>Invokes the base class method to create the Web service on the server farm. </summary>
        <remarks>
          <para>This method invokes the base class method to create the Web service on the server farm.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateApplication">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPServiceApplication CreateApplication (string name, Type serviceApplicationType, Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPServiceApplication CreateApplication(string name, class System.Type serviceApplicationType, class Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreService.CreateApplication(System.String,System.Type,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateApplication (name As String, serviceApplicationType As Type, provisioningContext As SPServiceProvisioningContext) As SPServiceApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPServiceApplication ^ CreateApplication(System::String ^ name, Type ^ serviceApplicationType, Microsoft::SharePoint::Administration::SPServiceProvisioningContext ^ provisioningContext);" />
      <MemberSignature Language="F#" Value="abstract member CreateApplication : string * Type * Microsoft.SharePoint.Administration.SPServiceProvisioningContext -&gt; Microsoft.SharePoint.Administration.SPServiceApplication&#xA;override this.CreateApplication : string * Type * Microsoft.SharePoint.Administration.SPServiceProvisioningContext -&gt; Microsoft.SharePoint.Administration.SPServiceApplication" Usage="secureStoreService.CreateApplication (name, serviceApplicationType, provisioningContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceAdministration.CreateApplication(System.String,System.Type,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPServiceApplication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceApplicationType" Type="System.Type" />
        <Parameter Name="provisioningContext" Type="Microsoft.SharePoint.Administration.SPServiceProvisioningContext" />
      </Parameters>
      <Docs>
        <param name="name">The name of the service application.</param>
        <param name="serviceApplicationType">The type of the service application.</param>
        <param name="provisioningContext">The context from which to get the Internet Information Services (IIS) application pool, which is used to execute the service application.</param>
        <summary>Creates a <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication" /> using the specified parameters.</summary>
        <returns>An object that represents a new service application on which the Secure Store Service runs.</returns>
        <remarks>
          <para>This method supports only <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication" /> objects.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProxy">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPServiceApplicationProxy CreateProxy (string name, Microsoft.SharePoint.Administration.SPServiceApplication serviceApplication, Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPServiceApplicationProxy CreateProxy(string name, class Microsoft.SharePoint.Administration.SPServiceApplication serviceApplication, class Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreService.CreateProxy(System.String,Microsoft.SharePoint.Administration.SPServiceApplication,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProxy (name As String, serviceApplication As SPServiceApplication, provisioningContext As SPServiceProvisioningContext) As SPServiceApplicationProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPServiceApplicationProxy ^ CreateProxy(System::String ^ name, Microsoft::SharePoint::Administration::SPServiceApplication ^ serviceApplication, Microsoft::SharePoint::Administration::SPServiceProvisioningContext ^ provisioningContext);" />
      <MemberSignature Language="F#" Value="abstract member CreateProxy : string * Microsoft.SharePoint.Administration.SPServiceApplication * Microsoft.SharePoint.Administration.SPServiceProvisioningContext -&gt; Microsoft.SharePoint.Administration.SPServiceApplicationProxy&#xA;override this.CreateProxy : string * Microsoft.SharePoint.Administration.SPServiceApplication * Microsoft.SharePoint.Administration.SPServiceProvisioningContext -&gt; Microsoft.SharePoint.Administration.SPServiceApplicationProxy" Usage="secureStoreService.CreateProxy (name, serviceApplication, provisioningContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceAdministration.CreateProxy(System.String,Microsoft.SharePoint.Administration.SPServiceApplication,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPServiceApplicationProxy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceApplication" Type="Microsoft.SharePoint.Administration.SPServiceApplication" />
        <Parameter Name="provisioningContext" Type="Microsoft.SharePoint.Administration.SPServiceProvisioningContext" />
      </Parameters>
      <Docs>
        <param name="name">The name of the new proxy.</param>
        <param name="serviceApplication">The service application to which the proxy refers.</param>
        <param name="provisioningContext">The context from which to extract the application pool that will run the proxy.</param>
        <summary>Creates a new <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplicationProxy" /> using the specified parameters.</summary>
        <returns>An object that represents the proxy of the specified service application.</returns>
        <remarks>
          <para>This method must be invoked only after the default <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy" /> has been created.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTypeDescription">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPPersistedTypeDescription GetApplicationTypeDescription (Type serviceApplicationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPPersistedTypeDescription GetApplicationTypeDescription(class System.Type serviceApplicationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreService.GetApplicationTypeDescription(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationTypeDescription (serviceApplicationType As Type) As SPPersistedTypeDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPPersistedTypeDescription ^ GetApplicationTypeDescription(Type ^ serviceApplicationType);" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationTypeDescription : Type -&gt; Microsoft.SharePoint.Administration.SPPersistedTypeDescription&#xA;override this.GetApplicationTypeDescription : Type -&gt; Microsoft.SharePoint.Administration.SPPersistedTypeDescription" Usage="secureStoreService.GetApplicationTypeDescription serviceApplicationType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceAdministration.GetApplicationTypeDescription(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPPersistedTypeDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationType">The type of the application.</param>
        <summary>Gets the application type description for the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication" />.</summary>
        <returns>The description of the specified type.</returns>
        <remarks>
          <para>This method creates and returns a new <see cref="T:Microsoft.SharePoint.Administration.SPPersistedTypeDescription" /> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTypes">
      <MemberSignature Language="C#" Value="public Type[] GetApplicationTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetApplicationTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreService.GetApplicationTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetApplicationTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationTypes : unit -&gt; Type[]&#xA;override this.GetApplicationTypes : unit -&gt; Type[]" Usage="secureStoreService.GetApplicationTypes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceAdministration.GetApplicationTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the list of application types supported by the service.</summary>
        <returns>The list of application types.</returns>
        <remarks>
          <para>Only <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication" /> objects are supported.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateApplicationLink">
      <MemberSignature Language="C#" Value="public override Microsoft.SharePoint.Administration.SPAdministrationLink GetCreateApplicationLink (Type serviceApplicationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.SharePoint.Administration.SPAdministrationLink GetCreateApplicationLink(class System.Type serviceApplicationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreService.GetCreateApplicationLink(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateApplicationLink (serviceApplicationType As Type) As SPAdministrationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::SharePoint::Administration::SPAdministrationLink ^ GetCreateApplicationLink(Type ^ serviceApplicationType);" />
      <MemberSignature Language="F#" Value="override this.GetCreateApplicationLink : Type -&gt; Microsoft.SharePoint.Administration.SPAdministrationLink" Usage="secureStoreService.GetCreateApplicationLink serviceApplicationType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceAdministration.GetCreateApplicationLink(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPAdministrationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationType">The type of the Secure Store Service application.</param>
        <summary>Gets the link to the Secure Store Service application creation page.</summary>
        <returns>An object that represents the link to the application creation page.</returns>
        <remarks>
          <para>Only <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication" /> objects are supported.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreService.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="Microsoft.Office.SecureStoreService.Server.SecureStoreService.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type name of the Secure Store Service.</summary>
        <value>The type name of the current Secure Store Service.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>