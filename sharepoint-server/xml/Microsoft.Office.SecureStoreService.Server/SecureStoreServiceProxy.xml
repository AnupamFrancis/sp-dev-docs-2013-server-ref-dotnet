<Type Name="SecureStoreServiceProxy" FullName="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy">
  <TypeSignature Language="C#" Value="public sealed class SecureStoreServiceProxy : Microsoft.SharePoint.Administration.SPIisWebServiceProxy, Microsoft.SharePoint.Administration.IServiceProxyAdministration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecureStoreServiceProxy extends Microsoft.SharePoint.Administration.SPIisWebServiceProxy implements class Microsoft.SharePoint.Administration.IServiceProxyAdministration" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureStoreServiceProxy&#xA;Inherits SPIisWebServiceProxy&#xA;Implements IServiceProxyAdministration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureStoreServiceProxy sealed : Microsoft::SharePoint::Administration::SPIisWebServiceProxy, Microsoft::SharePoint::Administration::IServiceProxyAdministration" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Administration.SPIisWebServiceProxy</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SharePoint.Administration.IServiceProxyAdministration</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Administration.SupportedServiceApplication("3B4573CC-A89D-458c-8AC1-3447531285CC", "1.0.0.0", typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplicationProxy))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("A95A4CA4-C6A8-43A5-B9B4-6C2298A103A4")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary> Represents a Web service proxy installed in a server farm.</summary>
    <remarks>
      <para>Derived classes can use this abstract class to represent a Web service proxy installed on a server farm.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureStoreServiceProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureStoreServiceProxy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProxy">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPServiceApplicationProxy CreateProxy (Type serviceApplicationProxyType, string name, Uri serviceApplicationAddress, Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPServiceApplicationProxy CreateProxy(class System.Type serviceApplicationProxyType, string name, class System.Uri serviceApplicationAddress, class Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy.CreateProxy(System.Type,System.String,System.Uri,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProxy (serviceApplicationProxyType As Type, name As String, serviceApplicationAddress As Uri, provisioningContext As SPServiceProvisioningContext) As SPServiceApplicationProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPServiceApplicationProxy ^ CreateProxy(Type ^ serviceApplicationProxyType, System::String ^ name, Uri ^ serviceApplicationAddress, Microsoft::SharePoint::Administration::SPServiceProvisioningContext ^ provisioningContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceProxyAdministration.CreateProxy(System.Type,System.String,System.Uri,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPServiceApplicationProxy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceApplicationAddress" Type="System.Uri" />
        <Parameter Name="provisioningContext" Type="Microsoft.SharePoint.Administration.SPServiceProvisioningContext" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxyType">The type of service application proxy to create.</param>
        <param name="name">The name of the new service application proxy.</param>
        <param name="serviceApplicationAddress">The address of the new service application proxy.</param>
        <param name="provisioningContext">The default provisioning parameters for the new service application proxy.</param>
        <summary>Creates an instance of the specified service application proxy type.</summary>
        <returns>Returns a new service application proxy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionSettingsUtility">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.IConnectionSettingsUtility GetConnectionSettingsUtility (Microsoft.SharePoint.SPServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.SecureStoreService.Server.IConnectionSettingsUtility GetConnectionSettingsUtility(class Microsoft.SharePoint.SPServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy.GetConnectionSettingsUtility(Microsoft.SharePoint.SPServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConnectionSettingsUtility (context As SPServiceContext) As IConnectionSettingsUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::SecureStoreService::Server::IConnectionSettingsUtility ^ GetConnectionSettingsUtility(Microsoft::SharePoint::SPServiceContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.IConnectionSettingsUtility</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
              Gets the ConnectionSettings utility object to select the right proxy and forward a call
              to the SSS proxy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyTypeDescription">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPPersistedTypeDescription GetProxyTypeDescription (Type serviceApplicationProxyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPPersistedTypeDescription GetProxyTypeDescription(class System.Type serviceApplicationProxyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy.GetProxyTypeDescription(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxyTypeDescription (serviceApplicationProxyType As Type) As SPPersistedTypeDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPPersistedTypeDescription ^ GetProxyTypeDescription(Type ^ serviceApplicationProxyType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceProxyAdministration.GetProxyTypeDescription(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPPersistedTypeDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxyType">The type of the service application proxy.</param>
        <summary>Gets a description of the specified service application proxy type.</summary>
        <returns>An <see cref="T:Microsoft.SharePoint.Administration.SPPersistedTypeDescription" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyTypes">
      <MemberSignature Language="C#" Value="public Type[] GetProxyTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetProxyTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy.GetProxyTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxyTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetProxyTypes();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceProxyAdministration.GetProxyTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an array of the service application proxy types supported by the shared service proxy.</summary>
        <returns>An array of service application proxy types supported by the shared service proxy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureStore">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.ISecureStore GetSecureStore (Microsoft.SharePoint.SPServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.SecureStoreService.Server.ISecureStore GetSecureStore(class Microsoft.SharePoint.SPServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy.GetSecureStore(Microsoft.SharePoint.SPServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSecureStore (context As SPServiceContext) As ISecureStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::SecureStoreService::Server::ISecureStore ^ GetSecureStore(Microsoft::SharePoint::SPServiceContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.ISecureStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
      </Parameters>
      <Docs>
        <param name="context">The service context for the currently executing Secure Store Service application.</param>
        <summary>Gets the <see cref="T:Microsoft.Office.SecureStoreService.Server.ISecureStore" /> object from the specified service context.</summary>
        <returns>The secure store object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureStore">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.ISecureStore GetSecureStore (Microsoft.SharePoint.SPServiceContext context, Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplicationProxy proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.SecureStoreService.Server.ISecureStore GetSecureStore(class Microsoft.SharePoint.SPServiceContext context, class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplicationProxy proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy.GetSecureStore(Microsoft.SharePoint.SPServiceContext,Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplicationProxy)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSecureStore (context As SPServiceContext, proxy As SecureStoreServiceApplicationProxy) As ISecureStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::SecureStoreService::Server::ISecureStore ^ GetSecureStore(Microsoft::SharePoint::SPServiceContext ^ context, Microsoft::Office::SecureStoreService::Server::SecureStoreServiceApplicationProxy ^ proxy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.ISecureStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
        <Parameter Name="proxy" Type="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplicationProxy" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="proxy">To be added.</param>
        <summary>
              Gets the secure store object to select the right proxy and forward a call
              to the SSS proxy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the display name that describes the secure store proxy type.</summary>
        <value>The display name that describes the secure store proxy type.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>