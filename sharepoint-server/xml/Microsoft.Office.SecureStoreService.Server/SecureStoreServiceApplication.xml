<Type Name="SecureStoreServiceApplication" FullName="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication">
  <TypeSignature Language="C#" Value="public sealed class SecureStoreServiceApplication : Microsoft.SharePoint.Administration.SPIisWebServiceApplication, IDisposable, Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecureStoreServiceApplication extends Microsoft.SharePoint.Administration.SPIisWebServiceApplication implements class Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureStoreServiceApplication&#xA;Inherits SPIisWebServiceApplication&#xA;Implements IDisposable, ISecureStoreServiceApplication" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureStoreServiceApplication sealed : Microsoft::SharePoint::Administration::SPIisWebServiceApplication, IDisposable, Microsoft::Office::SecureStoreService::Server::ISecureStoreServiceApplication" />
  <TypeSignature Language="F#" Value="type SecureStoreServiceApplication = class&#xA;    inherit SPIisWebServiceApplication&#xA;    interface ISecureStoreServiceApplication&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Administration.SPIisWebServiceApplication</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Administration.IisWebServiceApplicationBackupBehavior</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("B85F20D0-BDED-4aa9-9449-F0005B4A0482")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(IncludeExceptionDetailInFaults=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides the application programming interface (API) for the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplicationProxy" /> to execute the client’s method call, and implements services provided by the Secure Store Service.</summary>
    <remarks>
      <para>This is the only application that is supported by the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreService" /> object.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureStoreServiceApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureStoreServiceApplication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdministrationAccessRights">
      <MemberSignature Language="C#" Value="protected override Microsoft.SharePoint.Administration.AccessControl.SPNamedCentralAdministrationRights[] AdministrationAccessRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.Administration.AccessControl.SPNamedCentralAdministrationRights[] AdministrationAccessRights" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.AdministrationAccessRights" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property AdministrationAccessRights As SPNamedCentralAdministrationRights()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;Microsoft::SharePoint::Administration::AccessControl::SPNamedCentralAdministrationRights ^&gt; ^ AdministrationAccessRights { cli::array &lt;Microsoft::SharePoint::Administration::AccessControl::SPNamedCentralAdministrationRights ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdministrationAccessRights : Microsoft.SharePoint.Administration.AccessControl.SPNamedCentralAdministrationRights[]" Usage="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.AdministrationAccessRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.AccessControl.SPNamedCentralAdministrationRights[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the administration access rights.</summary>
        <value>An array of <see cref="T:Microsoft.SharePoint.Administration.AccessControl.SPNamedCentralAdministrationRights" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationClassId">
      <MemberSignature Language="C#" Value="public override Guid ApplicationClassId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ApplicationClassId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.ApplicationClassId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ApplicationClassId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid ApplicationClassId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationClassId : Guid" Usage="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.ApplicationClassId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the globally unique identifier (GUID) that represents the application class ID.</summary>
        <value>A GUID that represents the application class ID.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPoolChanged">
      <MemberSignature Language="C#" Value="public void ApplicationPoolChanged (Microsoft.SharePoint.Administration.SPIisWebServiceApplicationPool oldApplicationPool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplicationPoolChanged(class Microsoft.SharePoint.Administration.SPIisWebServiceApplicationPool oldApplicationPool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.ApplicationPoolChanged(Microsoft.SharePoint.Administration.SPIisWebServiceApplicationPool)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplicationPoolChanged (oldApplicationPool As SPIisWebServiceApplicationPool)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplicationPoolChanged(Microsoft::SharePoint::Administration::SPIisWebServiceApplicationPool ^ oldApplicationPool);" />
      <MemberSignature Language="F#" Value="member this.ApplicationPoolChanged : Microsoft.SharePoint.Administration.SPIisWebServiceApplicationPool -&gt; unit" Usage="secureStoreServiceApplication.ApplicationPoolChanged oldApplicationPool" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldApplicationPool" Type="Microsoft.SharePoint.Administration.SPIisWebServiceApplicationPool" />
      </Parameters>
      <Docs>
        <param name="oldApplicationPool">The old application pool.</param>
        <summary>Grants the Secure Store Service database access to the new application pool owner after the application pool has changed.</summary>
        <remarks>
          <para>This method must be called after the application pool has changed in the application. It does not revoke the old ownership of the application pool. The old account may be the account under which the provisioning of the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceDatabase" /> occurs. Hence, revoking the old ownership would break the provisioning of the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceDatabase" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationVersion">
      <MemberSignature Language="C#" Value="public override Version ApplicationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ApplicationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.ApplicationVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ApplicationVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ ApplicationVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationVersion : Version" Usage="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.ApplicationVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version of the current application.</summary>
        <value>The version of the current application.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeMasterSecretKey">
      <MemberSignature Language="C#" Value="public void ChangeMasterSecretKey (string token, byte[] passPhraseHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeMasterSecretKey(string token, unsigned int8[] passPhraseHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.ChangeMasterSecretKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMasterSecretKey (token As String, passPhraseHash As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ChangeMasterSecretKey(System::String ^ token, cli::array &lt;System::Byte&gt; ^ passPhraseHash);" />
      <MemberSignature Language="F#" Value="abstract member ChangeMasterSecretKey : string * byte[] -&gt; unit&#xA;override this.ChangeMasterSecretKey : string * byte[] -&gt; unit" Usage="secureStoreServiceApplication.ChangeMasterSecretKey (token, passPhraseHash)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.ChangeMasterSecretKey(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
        <Parameter Name="passPhraseHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="token">The token string. This token must be obtained by calling <see cref="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetChangeMasterSecretKeyToken" />.</param>
        <param name="passPhraseHash">The hash of the passphrase.</param>
        <summary>Changes the master key in the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceDatabase" /> for the current application.</summary>
        <remarks>
          <para>This method must be called with a valid token. The token is valid for one minute and must be obtained from the Secure Store database before it can be used.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateApplication">
      <MemberSignature Language="C#" Value="public void CreateApplication (Guid rawPartitionId, Microsoft.Office.SecureStoreService.Server.TargetApplication application, System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; applicationFields, Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims applicationClaims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateApplication(valuetype System.Guid rawPartitionId, class Microsoft.Office.SecureStoreService.Server.TargetApplication application, class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; applicationFields, class Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims applicationClaims) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.CreateApplication(System.Guid,Microsoft.Office.SecureStoreService.Server.TargetApplication,System.Collections.Generic.IList{Microsoft.Office.SecureStoreService.Server.TargetApplicationField},Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateApplication (rawPartitionId As Guid, application As TargetApplication, applicationFields As IList(Of TargetApplicationField), applicationClaims As TargetApplicationClaims)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateApplication(Guid rawPartitionId, Microsoft::Office::SecureStoreService::Server::TargetApplication ^ application, System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplicationField ^&gt; ^ applicationFields, Microsoft::Office::SecureStoreService::Server::TargetApplicationClaims ^ applicationClaims);" />
      <MemberSignature Language="F#" Value="abstract member CreateApplication : Guid * Microsoft.Office.SecureStoreService.Server.TargetApplication * System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; * Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims -&gt; unit&#xA;override this.CreateApplication : Guid * Microsoft.Office.SecureStoreService.Server.TargetApplication * System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; * Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims -&gt; unit" Usage="secureStoreServiceApplication.CreateApplication (rawPartitionId, application, applicationFields, applicationClaims)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.CreateApplication(System.Guid,Microsoft.Office.SecureStoreService.Server.TargetApplication,System.Collections.Generic.IList{Microsoft.Office.SecureStoreService.Server.TargetApplicationField},Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="application" Type="Microsoft.Office.SecureStoreService.Server.TargetApplication" />
        <Parameter Name="applicationFields" Type="System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;" />
        <Parameter Name="applicationClaims" Type="Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="application">The target application.</param>
        <param name="applicationFields">The target application fields.</param>
        <param name="applicationClaims">The target application claims.</param>
        <summary>Creates a target application.</summary>
        <remarks>
          <para>This method creates a new target application in the specified partition that is managed by the current Secure Store Service.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnectionSettings">
      <MemberSignature Language="C#" Value="public void CreateConnectionSettings (Guid rawPartitionId, Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings connectionSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateConnectionSettings(valuetype System.Guid rawPartitionId, class Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings connectionSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.CreateConnectionSettings(System.Guid,Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateConnectionSettings(Guid rawPartitionId, Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettings ^ connectionSettings);" />
      <MemberSignature Language="F#" Value="abstract member CreateConnectionSettings : Guid * Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings -&gt; unit&#xA;override this.CreateConnectionSettings : Guid * Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings -&gt; unit" Usage="secureStoreServiceApplication.CreateConnectionSettings (rawPartitionId, connectionSettings)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.CreateConnectionSettings(System.Guid,Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="connectionSettings" Type="Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partiton id</param>
        <param name="connectionSettings">ConnectionSettings object to be created.</param>
        <summary>
              Create a new instance of the ConnectionSettings.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEndpointName">
      <MemberSignature Language="C#" Value="protected override string DefaultEndpointName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultEndpointName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.DefaultEndpointName" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultEndpointName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ DefaultEndpointName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultEndpointName : string" Usage="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.DefaultEndpointName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default Windows Communication Foundation (WCF) endpoint name for the current application.</summary>
        <value>The endpoint name for the current application.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="secureStoreServiceApplication.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the current application.</summary>
        <remarks>
          <para>This method deletes the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceDatabase" /> along with the application.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAllUserCredentials">
      <MemberSignature Language="C#" Value="public void DeleteAllUserCredentials (Guid rawPartitionId, Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteAllUserCredentials(valuetype System.Guid rawPartitionId, class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.DeleteAllUserCredentials(System.Guid,Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteAllUserCredentials (rawPartitionId As Guid, claim As SecureStoreServiceClaim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteAllUserCredentials(Guid rawPartitionId, Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member DeleteAllUserCredentials : Guid * Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim -&gt; unit&#xA;override this.DeleteAllUserCredentials : Guid * Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim -&gt; unit" Usage="secureStoreServiceApplication.DeleteAllUserCredentials (rawPartitionId, claim)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.DeleteAllUserCredentials(System.Guid,Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="claim" Type="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="claim">The identity claim for the user whose credentials are being deleted.</param>
        <summary>Deletes the credentials for the specified user for all of the target applications in the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteApplication">
      <MemberSignature Language="C#" Value="public void DeleteApplication (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteApplication(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.DeleteApplication(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteApplication (rawPartitionId As Guid, applicationId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteApplication(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member DeleteApplication : Guid * string -&gt; unit&#xA;override this.DeleteApplication : Guid * string -&gt; unit" Usage="secureStoreServiceApplication.DeleteApplication (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.DeleteApplication(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Deletes the specified target application from the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteConnectionSettings">
      <MemberSignature Language="C#" Value="public void DeleteConnectionSettings (Guid rawPartitionId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteConnectionSettings(valuetype System.Guid rawPartitionId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.DeleteConnectionSettings(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteConnectionSettings (rawPartitionId As Guid, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteConnectionSettings(Guid rawPartitionId, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member DeleteConnectionSettings : Guid * string -&gt; unit&#xA;override this.DeleteConnectionSettings : Guid * string -&gt; unit" Usage="secureStoreServiceApplication.DeleteConnectionSettings (rawPartitionId, name)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.DeleteConnectionSettings(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partition Id</param>
        <param name="name">Unique Name to identify ConnectionSettings.</param>
        <summary>
              Delete the ConnectionSettings identified by the ConnectionSettings id.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCredentials">
      <MemberSignature Language="C#" Value="public void DeleteCredentials (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCredentials(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.DeleteCredentials(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCredentials (rawPartitionId As Guid, applicationId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteCredentials(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member DeleteCredentials : Guid * string -&gt; unit&#xA;override this.DeleteCredentials : Guid * string -&gt; unit" Usage="secureStoreServiceApplication.DeleteCredentials (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.DeleteCredentials(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Deletes the credentials of the current caller for the specified individual target application in the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUserCredentials">
      <MemberSignature Language="C#" Value="public void DeleteUserCredentials (Guid rawPartitionId, string applicationId, Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteUserCredentials(valuetype System.Guid rawPartitionId, string applicationId, class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.DeleteUserCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteUserCredentials (rawPartitionId As Guid, applicationId As String, claim As SecureStoreServiceClaim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteUserCredentials(Guid rawPartitionId, System::String ^ applicationId, Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^ claim);" />
      <MemberSignature Language="F#" Value="abstract member DeleteUserCredentials : Guid * string * Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim -&gt; unit&#xA;override this.DeleteUserCredentials : Guid * string * Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim -&gt; unit" Usage="secureStoreServiceApplication.DeleteUserCredentials (rawPartitionId, applicationId, claim)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.DeleteUserCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="claim" Type="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <param name="claim">The identity claim of the user whose credentials are being deleted.</param>
        <summary>Deletes the specified user credentials for the specified target application in the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secureStoreServiceApplication.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases all resources used by the current instance of the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication" /> class.</summary>
        <remarks>
          <para>This method allows the resources used by the current application to be reallocated.</para>
          <para>
    Call Dispose when you are finished using this class. The Dispose method leaves this class in an unusable state. After calling Dispose , you must release all references to this class so the garbage collector can reclaim the memory that the class was occupying. 
      For more information, see Cleaning Up Unmanaged Resources and Implementing a Dispose Method. For specific guidance on disposing SharePoint classes, see Best Practices with SharePoint Foundation: Disposing Objects.
    Note Always call Dispose before you release your last reference to this class. Otherwise, the resources it is using will not be freed until the garbage collector calls this object's Finalize method.
    </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SecureStoreServiceApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SecureStoreServiceApplication ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="secureStoreServiceApplication.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllConnectionSettings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings&gt; GetAllConnectionSettings (Guid rawPartitionId, Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings&gt; GetAllConnectionSettings(valuetype System.Guid rawPartitionId, valuetype Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetAllConnectionSettings(System.Guid,Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllConnectionSettings (rawPartitionId As Guid, type As ConnectionSettingsType) As IEnumerable(Of ConnectionSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettings ^&gt; ^ GetAllConnectionSettings(Guid rawPartitionId, Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettingsType type);" />
      <MemberSignature Language="F#" Value="abstract member GetAllConnectionSettings : Guid * Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType -&gt; seq&lt;Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings&gt;&#xA;override this.GetAllConnectionSettings : Guid * Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType -&gt; seq&lt;Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings&gt;" Usage="secureStoreServiceApplication.GetAllConnectionSettings (rawPartitionId, type)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetAllConnectionSettings(System.Guid,Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="type" Type="Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partition Id</param>
        <param name="type">Type of the ConnectionSettings to be fetched</param>
        <summary>
              Return all the ConnectionSettings in the secure store.
            </summary>
        <returns>Reference to the ConnectionSettings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplication">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.TargetApplication GetApplication (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.TargetApplication GetApplication(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetApplication(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplication (rawPartitionId As Guid, applicationId As String) As TargetApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Office::SecureStoreService::Server::TargetApplication ^ GetApplication(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member GetApplication : Guid * string -&gt; Microsoft.Office.SecureStoreService.Server.TargetApplication&#xA;override this.GetApplication : Guid * string -&gt; Microsoft.Office.SecureStoreService.Server.TargetApplication" Usage="secureStoreServiceApplication.GetApplication (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplication(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.TargetApplication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets the target application definition for the specified application in the specified partition.</summary>
        <returns>The target application.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationAdministratorClaims">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationAdministratorClaims (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationAdministratorClaims(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetApplicationAdministratorClaims(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationAdministratorClaims (rawPartitionId As Guid, applicationId As String) As IList(Of SecureStoreServiceClaim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^&gt; ^ GetApplicationAdministratorClaims(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationAdministratorClaims : Guid * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;&#xA;override this.GetApplicationAdministratorClaims : Guid * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;" Usage="secureStoreServiceApplication.GetApplicationAdministratorClaims (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplicationAdministratorClaims(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets the claims of the administrators for the specified target application.</summary>
        <returns>A list of the claims of the administrators for the specified target application in the specified partition.</returns>
        <remarks>
          <para>This method must be invoked by an administrator of the Secure Store Service.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationClaims">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims GetApplicationClaims (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims GetApplicationClaims(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetApplicationClaims(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationClaims (rawPartitionId As Guid, applicationId As String) As TargetApplicationClaims" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Office::SecureStoreService::Server::TargetApplicationClaims ^ GetApplicationClaims(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationClaims : Guid * string -&gt; Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims&#xA;override this.GetApplicationClaims : Guid * string -&gt; Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims" Usage="secureStoreServiceApplication.GetApplicationClaims (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplicationClaims(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets the collection of claims of the administrators, group members, and ticket redeemers for the specified target application in the specified partition.</summary>
        <returns>The collection of claims of the administrators, group members, and ticket redeemers for the specified target application.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationFields">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; GetApplicationFields (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; GetApplicationFields(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetApplicationFields(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationFields (rawPartitionId As Guid, applicationId As String) As IList(Of TargetApplicationField)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplicationField ^&gt; ^ GetApplicationFields(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationFields : Guid * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;&#xA;override this.GetApplicationFields : Guid * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;" Usage="secureStoreServiceApplication.GetApplicationFields (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplicationFields(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets all of the application fields for the specified target application and partition.</summary>
        <returns>A list of fields for the specified target application.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGroupClaims">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationGroupClaims (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationGroupClaims(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetApplicationGroupClaims(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationGroupClaims (rawPartitionId As Guid, applicationId As String) As IList(Of SecureStoreServiceClaim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^&gt; ^ GetApplicationGroupClaims(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGroupClaims : Guid * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;&#xA;override this.GetApplicationGroupClaims : Guid * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;" Usage="secureStoreServiceApplication.GetApplicationGroupClaims (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplicationGroupClaims(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets the claims of the group members of the specified group target application in the specified partition.</summary>
        <returns>A list of the claims of the group members of the specified group target application.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt; GetApplications (Guid rawPartitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplication&gt; GetApplications(valuetype System.Guid rawPartitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications (rawPartitionId As Guid) As IList(Of TargetApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplication ^&gt; ^ GetApplications(Guid rawPartitionId);" />
      <MemberSignature Language="F#" Value="abstract member GetApplications : Guid -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt;&#xA;override this.GetApplications : Guid -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt;" Usage="secureStoreServiceApplication.GetApplications rawPartitionId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplications(System.Guid)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <summary>Gets all the target application definitions in the specified partition.</summary>
        <returns>A list of target application definitions.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTicketRedeemerClaims">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationTicketRedeemerClaims (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationTicketRedeemerClaims(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetApplicationTicketRedeemerClaims(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationTicketRedeemerClaims (rawPartitionId As Guid, applicationId As String) As IList(Of SecureStoreServiceClaim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^&gt; ^ GetApplicationTicketRedeemerClaims(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationTicketRedeemerClaims : Guid * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;&#xA;override this.GetApplicationTicketRedeemerClaims : Guid * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;" Usage="secureStoreServiceApplication.GetApplicationTicketRedeemerClaims (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplicationTicketRedeemerClaims(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets all of the ticket redeemer claims for the specified partition in the specified target application.</summary>
        <returns>A list of the ticket redeemer claims for the specified target application in the specified partition.</returns>
        <remarks>
          <para>This method retrieves all of the target application ticket redeemer claims. The ticket redeemer claims determine who can call <see cref="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.RedeemTicket(System.Guid,System.String,System.String)" /> to redeem a ticket for a specified target application.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeMasterSecretKeyToken">
      <MemberSignature Language="C#" Value="public string GetChangeMasterSecretKeyToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChangeMasterSecretKeyToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetChangeMasterSecretKeyToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangeMasterSecretKeyToken () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChangeMasterSecretKeyToken();" />
      <MemberSignature Language="F#" Value="abstract member GetChangeMasterSecretKeyToken : unit -&gt; string&#xA;override this.GetChangeMasterSecretKeyToken : unit -&gt; string" Usage="secureStoreServiceApplication.GetChangeMasterSecretKeyToken " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetChangeMasterSecretKeyToken</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the token that is required to change the master secret key for the current application.</summary>
        <returns>The secret key token.</returns>
        <remarks>
          <para>This method gets the token that can be used with the <see cref="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.ChangeMasterSecretKey(System.String,System.Byte[])" /> method.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildConnectionSettings">
      <MemberSignature Language="C#" Value="public Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings GetChildConnectionSettings (Guid rawPartitionId, string parentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings GetChildConnectionSettings(valuetype System.Guid rawPartitionId, string parentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetChildConnectionSettings(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildConnectionSettings (rawPartitionId As Guid, parentName As String) As ConnectionSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettings ^ GetChildConnectionSettings(Guid rawPartitionId, System::String ^ parentName);" />
      <MemberSignature Language="F#" Value="abstract member GetChildConnectionSettings : Guid * string -&gt; Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings&#xA;override this.GetChildConnectionSettings : Guid * string -&gt; Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings" Usage="secureStoreServiceApplication.GetChildConnectionSettings (rawPartitionId, parentName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetChildConnectionSettings(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="parentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partition Id</param>
        <param name="parentName">Unique Name to identify ConnectionSettings's parent</param>
        <summary>
              Return the ConnectionSettings identified by the it's parent ConnectionSettings id
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionSettings">
      <MemberSignature Language="C#" Value="public Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings GetConnectionSettings (Guid rawPartitionId, string name, bool includeCredentials, out Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection targetCredentials, out Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection proxyCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings GetConnectionSettings(valuetype System.Guid rawPartitionId, string name, bool includeCredentials, [out] class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection&amp; targetCredentials, [out] class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection&amp; proxyCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetConnectionSettings(System.Guid,System.String,System.Boolean,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection@,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConnectionSettings (rawPartitionId As Guid, name As String, includeCredentials As Boolean, ByRef targetCredentials As SerializableSecureStoreCredentialCollection, ByRef proxyCredentials As SerializableSecureStoreCredentialCollection) As ConnectionSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettings ^ GetConnectionSettings(Guid rawPartitionId, System::String ^ name, bool includeCredentials, [Runtime::InteropServices::Out] Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ % targetCredentials, [Runtime::InteropServices::Out] Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ % proxyCredentials);" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionSettings : Guid * string * bool *  *  -&gt; Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings&#xA;override this.GetConnectionSettings : Guid * string * bool *  *  -&gt; Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings" Usage="secureStoreServiceApplication.GetConnectionSettings (rawPartitionId, name, includeCredentials, targetCredentials, proxyCredentials)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetConnectionSettings(System.Guid,System.String,System.Boolean,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection@,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeCredentials" Type="System.Boolean" />
        <Parameter Name="targetCredentials" Type="Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" RefType="out" />
        <Parameter Name="proxyCredentials" Type="Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partition Id</param>
        <param name="name">Unique Name to identify ConnectionSettings.</param>
        <param name="includeCredentials">Indicates whether the credentials should be fetched</param>
        <param name="targetCredentials">Returns the target credentials</param>
        <param name="proxyCredentials">Returns the proxy credentials</param>
        <summary>
              Return the ConnectionSettings identified by the ConnectionSettings id.
            </summary>
        <returns>Reference to IConnectionSettings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection GetCredentials (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection GetCredentials(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetCredentials(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredentials (rawPartitionId As Guid, applicationId As String) As SerializableSecureStoreCredentialCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ GetCredentials(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member GetCredentials : Guid * string -&gt; Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection&#xA;override this.GetCredentials : Guid * string -&gt; Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" Usage="secureStoreServiceApplication.GetCredentials (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetCredentials(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets the credentials for the specified target application in the specified partition.</summary>
        <returns>The credentials collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestrictedCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection GetRestrictedCredentials (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection GetRestrictedCredentials(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetRestrictedCredentials(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRestrictedCredentials (rawPartitionId As Guid, applicationId As String) As SerializableSecureStoreCredentialCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ GetRestrictedCredentials(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member GetRestrictedCredentials : Guid * string -&gt; Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection&#xA;override this.GetRestrictedCredentials : Guid * string -&gt; Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" Usage="secureStoreServiceApplication.GetRestrictedCredentials (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetRestrictedCredentials(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The ID of the restricted target application.</param>
        <summary>Gets the credentials for a restricted target application.</summary>
        <returns>A credentials collection for the restricted target application in the specified partition.</returns>
        <remarks>
          <para>This method can be called to return the credentials for restricted and non-restricted target applications.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserApplication">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.TargetApplication GetUserApplication (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.TargetApplication GetUserApplication(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetUserApplication(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserApplication (rawPartitionId As Guid, applicationId As String) As TargetApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Office::SecureStoreService::Server::TargetApplication ^ GetUserApplication(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member GetUserApplication : Guid * string -&gt; Microsoft.Office.SecureStoreService.Server.TargetApplication&#xA;override this.GetUserApplication : Guid * string -&gt; Microsoft.Office.SecureStoreService.Server.TargetApplication" Usage="secureStoreServiceApplication.GetUserApplication (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetUserApplication(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.TargetApplication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets all of the application definitions for the specified target application for the current caller.</summary>
        <returns>The application definition for the specified target application in the specified partition.</returns>
        <remarks>
          <para>This method can be called by a Secure Store user who does not have administrative permissions on the Secure Store.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserApplicationFields">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; GetUserApplicationFields (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; GetUserApplicationFields(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetUserApplicationFields(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserApplicationFields (rawPartitionId As Guid, applicationId As String) As IList(Of TargetApplicationField)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplicationField ^&gt; ^ GetUserApplicationFields(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberSignature Language="F#" Value="abstract member GetUserApplicationFields : Guid * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;&#xA;override this.GetUserApplicationFields : Guid * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;" Usage="secureStoreServiceApplication.GetUserApplicationFields (rawPartitionId, applicationId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetUserApplicationFields(System.Guid,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets all of the application fields information for the specified target application for the current caller.</summary>
        <returns>A list of the application fields of the target application in the specified partition.</returns>
        <remarks>
          <para>This method can be called by a Secure Store user who does not have administrative permissions on the Secure Store.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserApplications">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt; GetUserApplications (Guid rawPartitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplication&gt; GetUserApplications(valuetype System.Guid rawPartitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.GetUserApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserApplications (rawPartitionId As Guid) As IList(Of TargetApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplication ^&gt; ^ GetUserApplications(Guid rawPartitionId);" />
      <MemberSignature Language="F#" Value="abstract member GetUserApplications : Guid -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt;&#xA;override this.GetUserApplications : Guid -&gt; System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt;" Usage="secureStoreServiceApplication.GetUserApplications rawPartitionId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetUserApplications(System.Guid)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <summary>Gets all the target application definitions in the specified partition for the current caller.</summary>
        <returns>A list of the target applications.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallPath">
      <MemberSignature Language="C#" Value="protected override string InstallPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstallPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.InstallPath" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property InstallPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ InstallPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstallPath : string" Usage="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.InstallPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the fully qualified installation path for the current application.</summary>
        <value>The installation path.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMasterSecretKeyPopulated">
      <MemberSignature Language="C#" Value="public bool IsMasterSecretKeyPopulated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsMasterSecretKeyPopulated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.IsMasterSecretKeyPopulated" />
      <MemberSignature Language="VB.NET" Value="Public Function IsMasterSecretKeyPopulated () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsMasterSecretKeyPopulated();" />
      <MemberSignature Language="F#" Value="abstract member IsMasterSecretKeyPopulated : unit -&gt; bool&#xA;override this.IsMasterSecretKeyPopulated : unit -&gt; bool" Usage="secureStoreServiceApplication.IsMasterSecretKeyPopulated " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.IsMasterSecretKeyPopulated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value that indicates whether the master secret key has been populated for the Secure Store Service application.</summary>
        <returns>
          <b>true</b> if the master secret key has been populated; otherwise, <b>false</b>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IssueTicket">
      <MemberSignature Language="C#" Value="public string IssueTicket (Guid rawPartitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string IssueTicket(valuetype System.Guid rawPartitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.IssueTicket(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function IssueTicket (rawPartitionId As Guid) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ IssueTicket(Guid rawPartitionId);" />
      <MemberSignature Language="F#" Value="abstract member IssueTicket : Guid -&gt; string&#xA;override this.IssueTicket : Guid -&gt; string" Usage="secureStoreServiceApplication.IssueTicket rawPartitionId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.IssueTicket(System.Guid)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <summary>Issues a ticket to the current caller.</summary>
        <returns>The ticket that is a base64-encoded string.</returns>
        <remarks>
          <para>Another user can use this ticket to redeem the credentials of the original caller by calling the <see cref="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.RedeemTicket(System.Guid,System.String,System.String)" /> method.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManageLink">
      <MemberSignature Language="C#" Value="public override Microsoft.SharePoint.Administration.SPAdministrationLink ManageLink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.Administration.SPAdministrationLink ManageLink" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.ManageLink" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ManageLink As SPAdministrationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::SharePoint::Administration::SPAdministrationLink ^ ManageLink { Microsoft::SharePoint::Administration::SPAdministrationLink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManageLink : Microsoft.SharePoint.Administration.SPAdministrationLink" Usage="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.ManageLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPAdministrationLink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a SharePoint <see cref="T:Microsoft.SharePoint.Administration.SPAdministrationLink" /> object to the page that is used to manage the application.</summary>
        <value>The link that represents the Secure Store Service link to the service application page.</value>
        <remarks>
          <para>This method provides a link to a page to manage the application.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProcessIdentityChanged">
      <MemberSignature Language="C#" Value="protected override void OnProcessIdentityChanged (System.Security.Principal.SecurityIdentifier processSecurityIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnProcessIdentityChanged(class System.Security.Principal.SecurityIdentifier processSecurityIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.OnProcessIdentityChanged(System.Security.Principal.SecurityIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnProcessIdentityChanged (processSecurityIdentifier As SecurityIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnProcessIdentityChanged(System::Security::Principal::SecurityIdentifier ^ processSecurityIdentifier);" />
      <MemberSignature Language="F#" Value="override this.OnProcessIdentityChanged : System.Security.Principal.SecurityIdentifier -&gt; unit" Usage="secureStoreServiceApplication.OnProcessIdentityChanged processSecurityIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="processSecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="processSecurityIdentifier">To be added.</param>
        <summary>
            On AppPool account change, grant the account perms to the database.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertiesLink">
      <MemberSignature Language="C#" Value="public override Microsoft.SharePoint.Administration.SPAdministrationLink PropertiesLink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.Administration.SPAdministrationLink PropertiesLink" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.PropertiesLink" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertiesLink As SPAdministrationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::SharePoint::Administration::SPAdministrationLink ^ PropertiesLink { Microsoft::SharePoint::Administration::SPAdministrationLink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertiesLink : Microsoft.SharePoint.Administration.SPAdministrationLink" Usage="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.PropertiesLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPAdministrationLink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a link to edit the properties for the current application.</summary>
        <value>The <see cref="T:Microsoft.SharePoint.Administration.SPAdministrationLink" /> object that represents the link to the editing properties page for the current application.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provision">
      <MemberSignature Language="C#" Value="public override void Provision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Provision() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.Provision" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Provision ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Provision();" />
      <MemberSignature Language="F#" Value="override this.Provision : unit -&gt; unit" Usage="secureStoreServiceApplication.Provision " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Makes the changes to the local server that are needed before the <b>SecureStoreServiceApplication</b> object can be used.</summary>
        <remarks>
          <para>This method provisions the database.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisionLocal">
      <MemberSignature Language="C#" Value="protected override void ProvisionLocal (Microsoft.SharePoint.Administration.SPServiceInstance serviceInstance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProvisionLocal(class Microsoft.SharePoint.Administration.SPServiceInstance serviceInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.ProvisionLocal(Microsoft.SharePoint.Administration.SPServiceInstance)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProvisionLocal (serviceInstance As SPServiceInstance)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ProvisionLocal(Microsoft::SharePoint::Administration::SPServiceInstance ^ serviceInstance);" />
      <MemberSignature Language="F#" Value="override this.ProvisionLocal : Microsoft.SharePoint.Administration.SPServiceInstance -&gt; unit" Usage="secureStoreServiceApplication.ProvisionLocal serviceInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceInstance" Type="Microsoft.SharePoint.Administration.SPServiceInstance" />
      </Parameters>
      <Docs>
        <param name="serviceInstance">The instance of the service application.</param>
        <summary>Provisions the service application on the local machine.</summary>
        <remarks>
          <para>This method provisions the local registry for the specified service application.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedeemTicket">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection RedeemTicket (Guid rawPartitionId, string applicationId, string base64EncodedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection RedeemTicket(valuetype System.Guid rawPartitionId, string applicationId, string base64EncodedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.RedeemTicket(System.Guid,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RedeemTicket (rawPartitionId As Guid, applicationId As String, base64EncodedTicket As String) As SerializableSecureStoreCredentialCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ RedeemTicket(Guid rawPartitionId, System::String ^ applicationId, System::String ^ base64EncodedTicket);" />
      <MemberSignature Language="F#" Value="abstract member RedeemTicket : Guid * string * string -&gt; Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection&#xA;override this.RedeemTicket : Guid * string * string -&gt; Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" Usage="secureStoreServiceApplication.RedeemTicket (rawPartitionId, applicationId, base64EncodedTicket)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.RedeemTicket(System.Guid,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="base64EncodedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <param name="base64EncodedTicket">The base64-encoded string that represents the ticket.</param>
        <summary>Gets the credentials for the specified ticket and the specified target application.</summary>
        <returns>The credentials of the target application in the specified partition.</returns>
        <remarks>
          <para>The caller must be a ticket redeemer for the specified target application.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChangeKeyPassphrase">
      <MemberSignature Language="C#" Value="public void SetChangeKeyPassphrase (byte[] passPhraseHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChangeKeyPassphrase(unsigned int8[] passPhraseHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.SetChangeKeyPassphrase(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetChangeKeyPassphrase (passPhraseHash As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetChangeKeyPassphrase(cli::array &lt;System::Byte&gt; ^ passPhraseHash);" />
      <MemberSignature Language="F#" Value="abstract member SetChangeKeyPassphrase : byte[] -&gt; unit&#xA;override this.SetChangeKeyPassphrase : byte[] -&gt; unit" Usage="secureStoreServiceApplication.SetChangeKeyPassphrase passPhraseHash" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.SetChangeKeyPassphrase(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passPhraseHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="passPhraseHash">The passphrase hash to decrypt the key.</param>
        <summary>Sets the passphrase hash on the application server.</summary>
        <remarks>
          <para>This method is used before changing the master key.</para>
          <para>This method stores the passphrase hash in memory. If the key has changed in the database, this method will automatically retrieve the key from the Secure Store database and store it in the local registry.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCredentials">
      <MemberSignature Language="C#" Value="public void SetCredentials (Guid rawPartitionId, string applicationId, Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCredentials(valuetype System.Guid rawPartitionId, string applicationId, class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.SetCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCredentials (rawPartitionId As Guid, applicationId As String, credentials As SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCredentials(Guid rawPartitionId, System::String ^ applicationId, Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ credentials);" />
      <MemberSignature Language="F#" Value="abstract member SetCredentials : Guid * string * Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection -&gt; unit&#xA;override this.SetCredentials : Guid * string * Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection -&gt; unit" Usage="secureStoreServiceApplication.SetCredentials (rawPartitionId, applicationId, credentials)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.SetCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <param name="credentials">The credentials collection.</param>
        <summary>Sets the credentials for the current caller for the specified individual target application in the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGroupCredentials">
      <MemberSignature Language="C#" Value="public void SetGroupCredentials (Guid rawPartitionId, string applicationId, Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGroupCredentials(valuetype System.Guid rawPartitionId, string applicationId, class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.SetGroupCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGroupCredentials (rawPartitionId As Guid, applicationId As String, credentials As SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetGroupCredentials(Guid rawPartitionId, System::String ^ applicationId, Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ credentials);" />
      <MemberSignature Language="F#" Value="abstract member SetGroupCredentials : Guid * string * Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection -&gt; unit&#xA;override this.SetGroupCredentials : Guid * string * Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection -&gt; unit" Usage="secureStoreServiceApplication.SetGroupCredentials (rawPartitionId, applicationId, credentials)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.SetGroupCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The group target application ID.</param>
        <param name="credentials">The credentials collection.</param>
        <summary>Sets the credentials for the specified group target application in the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMasterSecretKey">
      <MemberSignature Language="C#" Value="public void SetMasterSecretKey (byte[] passPhraseHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMasterSecretKey(unsigned int8[] passPhraseHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.SetMasterSecretKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMasterSecretKey (passPhraseHash As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMasterSecretKey(cli::array &lt;System::Byte&gt; ^ passPhraseHash);" />
      <MemberSignature Language="F#" Value="abstract member SetMasterSecretKey : byte[] -&gt; unit&#xA;override this.SetMasterSecretKey : byte[] -&gt; unit" Usage="secureStoreServiceApplication.SetMasterSecretKey passPhraseHash" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.SetMasterSecretKey(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passPhraseHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="passPhraseHash">The passphrase hash that is used to decrypt the key.</param>
        <summary>Sets the master secret key of the application server.</summary>
        <remarks>
          <para>This method gets the encrypted key from the database and tries to decrypt the key with <paramref name="passPhraseHash" />. If the decryption is successful, the method saves the key in the local registry.</para>
          <para>This method can be invoked remotely through the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplicationProxy" /> class.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserCredentials">
      <MemberSignature Language="C#" Value="public void SetUserCredentials (Guid rawPartitionId, string applicationId, Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim, Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserCredentials(valuetype System.Guid rawPartitionId, string applicationId, class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim, class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.SetUserCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserCredentials (rawPartitionId As Guid, applicationId As String, claim As SecureStoreServiceClaim, credentials As SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUserCredentials(Guid rawPartitionId, System::String ^ applicationId, Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^ claim, Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ credentials);" />
      <MemberSignature Language="F#" Value="abstract member SetUserCredentials : Guid * string * Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim * Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection -&gt; unit&#xA;override this.SetUserCredentials : Guid * string * Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim * Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection -&gt; unit" Usage="secureStoreServiceApplication.SetUserCredentials (rawPartitionId, applicationId, claim, credentials)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.SetUserCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="claim" Type="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim" />
        <Parameter Name="credentials" Type="Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <param name="claim">The identity claim for the user whose credentials are to be set.</param>
        <param name="credentials">The collection of user credentials to set.</param>
        <summary>Sets the credentials for the specified user, target application, and partition.</summary>
        <remarks>
          <para>Administrators of the target application can call this method to set the credentials for the specified user.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type name that describes the current application.</summary>
        <value>The type name of the current application.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprovision">
      <MemberSignature Language="C#" Value="public override void Unprovision (bool deleteData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Unprovision(bool deleteData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.Unprovision(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Unprovision (deleteData As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Unprovision(bool deleteData);" />
      <MemberSignature Language="F#" Value="override this.Unprovision : bool -&gt; unit" Usage="secureStoreServiceApplication.Unprovision deleteData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deleteData">
          <b>true</b> if any user data associated with the application proxy should be deleted; otherwise, <b>false</b>.</param>
        <summary>Unprovisions the current application.</summary>
        <remarks>
          <para>This method unprovisions the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceDatabase" /></para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnprovisionLocal">
      <MemberSignature Language="C#" Value="protected override void UnprovisionLocal (Microsoft.SharePoint.Administration.SPServiceInstance serviceInstance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UnprovisionLocal(class Microsoft.SharePoint.Administration.SPServiceInstance serviceInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.UnprovisionLocal(Microsoft.SharePoint.Administration.SPServiceInstance)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UnprovisionLocal (serviceInstance As SPServiceInstance)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UnprovisionLocal(Microsoft::SharePoint::Administration::SPServiceInstance ^ serviceInstance);" />
      <MemberSignature Language="F#" Value="override this.UnprovisionLocal : Microsoft.SharePoint.Administration.SPServiceInstance -&gt; unit" Usage="secureStoreServiceApplication.UnprovisionLocal serviceInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceInstance" Type="Microsoft.SharePoint.Administration.SPServiceInstance" />
      </Parameters>
      <Docs>
        <param name="serviceInstance">The instance of a service.</param>
        <summary>Unprovisions the instance of the Secure Store Service application on a server in a server farm.</summary>
        <remarks>
          <para>This method deletes the key container from the registry.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateApplication">
      <MemberSignature Language="C#" Value="public void UpdateApplication (Guid rawPartitionId, Microsoft.Office.SecureStoreService.Server.TargetApplication application, System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; applicationFields, Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims applicationClaims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateApplication(valuetype System.Guid rawPartitionId, class Microsoft.Office.SecureStoreService.Server.TargetApplication application, class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; applicationFields, class Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims applicationClaims) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.UpdateApplication(System.Guid,Microsoft.Office.SecureStoreService.Server.TargetApplication,System.Collections.Generic.IList{Microsoft.Office.SecureStoreService.Server.TargetApplicationField},Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateApplication (rawPartitionId As Guid, application As TargetApplication, applicationFields As IList(Of TargetApplicationField), applicationClaims As TargetApplicationClaims)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateApplication(Guid rawPartitionId, Microsoft::Office::SecureStoreService::Server::TargetApplication ^ application, System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplicationField ^&gt; ^ applicationFields, Microsoft::Office::SecureStoreService::Server::TargetApplicationClaims ^ applicationClaims);" />
      <MemberSignature Language="F#" Value="abstract member UpdateApplication : Guid * Microsoft.Office.SecureStoreService.Server.TargetApplication * System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; * Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims -&gt; unit&#xA;override this.UpdateApplication : Guid * Microsoft.Office.SecureStoreService.Server.TargetApplication * System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; * Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims -&gt; unit" Usage="secureStoreServiceApplication.UpdateApplication (rawPartitionId, application, applicationFields, applicationClaims)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.UpdateApplication(System.Guid,Microsoft.Office.SecureStoreService.Server.TargetApplication,System.Collections.Generic.IList{Microsoft.Office.SecureStoreService.Server.TargetApplicationField},Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="application" Type="Microsoft.Office.SecureStoreService.Server.TargetApplication" />
        <Parameter Name="applicationFields" Type="System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;" />
        <Parameter Name="applicationClaims" Type="Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="application">The target application ID.</param>
        <param name="applicationFields">The target application fields.</param>
        <param name="applicationClaims">The target application claims.</param>
        <summary>Updates a target application definition.</summary>
        <remarks>
          <para>This method updates the target application definition. The target application ID cannot be changed. An individual target application cannot be changed to a group target application and vice versa. In the target application fields, only <see cref="P:Microsoft.Office.SecureStoreService.Server.TargetApplicationField.IsMasked" /> can be changed in the existing application fields. All other information in the application fields must exactly match the information that was set when the target application was created.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateConnectionSettings">
      <MemberSignature Language="C#" Value="public void UpdateConnectionSettings (Guid rawPartitionId, Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings connectionSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateConnectionSettings(valuetype System.Guid rawPartitionId, class Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings connectionSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.UpdateConnectionSettings(System.Guid,Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateConnectionSettings(Guid rawPartitionId, Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettings ^ connectionSettings);" />
      <MemberSignature Language="F#" Value="abstract member UpdateConnectionSettings : Guid * Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings -&gt; unit&#xA;override this.UpdateConnectionSettings : Guid * Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings -&gt; unit" Usage="secureStoreServiceApplication.UpdateConnectionSettings (rawPartitionId, connectionSettings)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.UpdateConnectionSettings(System.Guid,Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="connectionSettings" Type="Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partition Id</param>
        <param name="connectionSettings">To be added.</param>
        <summary>
              Update the ConnectionSettings object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected override string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplication.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the virtual path for the current application.</summary>
        <value>The virtual path of the service file name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>