<Type Name="ISecureStoreServiceApplication" FullName="Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication">
  <TypeSignature Language="C#" Value="public interface ISecureStoreServiceApplication" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISecureStoreServiceApplication" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISecureStoreServiceApplication" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISecureStoreServiceApplication" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://schemas.microsoft.com/sharepoint/2009/06/securestoreservice")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the signatures for methods that provide a Windows Communication Foundation (WCF) API so that the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceProxy" /> methods can be invoked from a local computer and executed on a remote computer.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ChangeMasterSecretKey">
      <MemberSignature Language="C#" Value="public void ChangeMasterSecretKey (string token, byte[] passPhraseHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeMasterSecretKey(string token, unsigned int8[] passPhraseHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.ChangeMasterSecretKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMasterSecretKey (token As String, passPhraseHash As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMasterSecretKey(System::String ^ token, cli::array &lt;System::Byte&gt; ^ passPhraseHash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract(IsOneWay=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
        <Parameter Name="passPhraseHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="token">The token string. This token must be obtained by calling <see cref="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetChangeMasterSecretKeyToken" />.</param>
        <param name="passPhraseHash">The hash of the new passphrase.</param>
        <summary>Changes the master secret key for the Secure Store Service.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateApplication">
      <MemberSignature Language="C#" Value="public void CreateApplication (Guid rawPartitionId, Microsoft.Office.SecureStoreService.Server.TargetApplication application, System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; applicationFields, Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims applicationClaims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateApplication(valuetype System.Guid rawPartitionId, class Microsoft.Office.SecureStoreService.Server.TargetApplication application, class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; applicationFields, class Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims applicationClaims) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.CreateApplication(System.Guid,Microsoft.Office.SecureStoreService.Server.TargetApplication,System.Collections.Generic.IList{Microsoft.Office.SecureStoreService.Server.TargetApplicationField},Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateApplication (rawPartitionId As Guid, application As TargetApplication, applicationFields As IList(Of TargetApplicationField), applicationClaims As TargetApplicationClaims)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateApplication(Guid rawPartitionId, Microsoft::Office::SecureStoreService::Server::TargetApplication ^ application, System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplicationField ^&gt; ^ applicationFields, Microsoft::Office::SecureStoreService::Server::TargetApplicationClaims ^ applicationClaims);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentOutOfRangeException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="application" Type="Microsoft.Office.SecureStoreService.Server.TargetApplication" />
        <Parameter Name="applicationFields" Type="System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;" />
        <Parameter Name="applicationClaims" Type="Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="application">The target application information.</param>
        <param name="applicationFields">The target application fields.</param>
        <param name="applicationClaims">The target application claims.</param>
        <summary>Creates a target application.</summary>
        <remarks>
          <para>This method creates a new target application in the specified partition that is managed by the current Secure Store Service.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnectionSettings">
      <MemberSignature Language="C#" Value="public void CreateConnectionSettings (Guid rawPartitionId, Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings connectionSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateConnectionSettings(valuetype System.Guid rawPartitionId, class Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings connectionSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.CreateConnectionSettings(System.Guid,Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateConnectionSettings(Guid rawPartitionId, Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettings ^ connectionSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceConnectionSettingsAlreadyExistFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="connectionSettings" Type="Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partiton id</param>
        <param name="connectionSettings">ConnectionSettings object to be created.</param>
        <summary>
              Create a new instance of the ConnectionSettings.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAllUserCredentials">
      <MemberSignature Language="C#" Value="public void DeleteAllUserCredentials (Guid rawPartitionId, Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteAllUserCredentials(valuetype System.Guid rawPartitionId, class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.DeleteAllUserCredentials(System.Guid,Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteAllUserCredentials (rawPartitionId As Guid, claim As SecureStoreServiceClaim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteAllUserCredentials(Guid rawPartitionId, Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^ claim);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="claim" Type="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="claim">The identity claim for the user whose credentials are being deleted.</param>
        <summary>Deletes the credentials for the specified user for all of the target applications in the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteApplication">
      <MemberSignature Language="C#" Value="public void DeleteApplication (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteApplication(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.DeleteApplication(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteApplication (rawPartitionId As Guid, applicationId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteApplication(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Deletes the specified target application from the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteConnectionSettings">
      <MemberSignature Language="C#" Value="public void DeleteConnectionSettings (Guid rawPartitionId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteConnectionSettings(valuetype System.Guid rawPartitionId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.DeleteConnectionSettings(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteConnectionSettings (rawPartitionId As Guid, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteConnectionSettings(Guid rawPartitionId, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.ConnectionSettingsNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partition Id</param>
        <param name="name">Unique Name to identify ConnectionSettings.</param>
        <summary>
              Delete the ConnectionSettings identified by the ConnectionSettings id.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCredentials">
      <MemberSignature Language="C#" Value="public void DeleteCredentials (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCredentials(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.DeleteCredentials(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCredentials (rawPartitionId As Guid, applicationId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteCredentials(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceCredentialsNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Deletes the credentials of the current caller for the specified individual target application in the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUserCredentials">
      <MemberSignature Language="C#" Value="public void DeleteUserCredentials (Guid rawPartitionId, string applicationId, Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteUserCredentials(valuetype System.Guid rawPartitionId, string applicationId, class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.DeleteUserCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteUserCredentials (rawPartitionId As Guid, applicationId As String, claim As SecureStoreServiceClaim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteUserCredentials(Guid rawPartitionId, System::String ^ applicationId, Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^ claim);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceCredentialsNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="claim" Type="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <param name="claim">The identity claim of the user whose credentials are being deleted.</param>
        <summary>Deletes the specified user credentials for the specified target application in the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllConnectionSettings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings&gt; GetAllConnectionSettings (Guid rawPartitionId, Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings&gt; GetAllConnectionSettings(valuetype System.Guid rawPartitionId, valuetype Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetAllConnectionSettings(System.Guid,Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllConnectionSettings (rawPartitionId As Guid, type As ConnectionSettingsType) As IEnumerable(Of ConnectionSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettings ^&gt; ^ GetAllConnectionSettings(Guid rawPartitionId, Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettingsType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="type" Type="Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettingsType" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partition Id</param>
        <param name="type">Type of the ConnectionSettings to be fetched</param>
        <summary>
              Return all the ConnectionSettings in the secure store.
            </summary>
        <returns>All the ConnectionSettings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplication">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.TargetApplication GetApplication (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.TargetApplication GetApplication(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplication(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplication (rawPartitionId As Guid, applicationId As String) As TargetApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::SecureStoreService::Server::TargetApplication ^ GetApplication(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.TargetApplication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets the target application definition for the specified application in the specified partition.</summary>
        <returns>The target application.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationAdministratorClaims">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationAdministratorClaims (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationAdministratorClaims(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplicationAdministratorClaims(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationAdministratorClaims (rawPartitionId As Guid, applicationId As String) As IList(Of SecureStoreServiceClaim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^&gt; ^ GetApplicationAdministratorClaims(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets the claims of the administrators for the specified target application.</summary>
        <returns>A list of the claims of the administrators for the specified target application in the specified partition.</returns>
        <remarks>
          <para>This method must be invoked by an administrator of the Secure Store Service.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationClaims">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims GetApplicationClaims (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims GetApplicationClaims(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplicationClaims(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationClaims (rawPartitionId As Guid, applicationId As String) As TargetApplicationClaims" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::SecureStoreService::Server::TargetApplicationClaims ^ GetApplicationClaims(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets the collection of claims of the administrators, group members, and ticket redeemers for the specified target application.</summary>
        <returns>The collection of claims of the administrators, group members, and ticket redeemers for the specified target application.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationFields">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; GetApplicationFields (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; GetApplicationFields(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplicationFields(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationFields (rawPartitionId As Guid, applicationId As String) As IList(Of TargetApplicationField)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplicationField ^&gt; ^ GetApplicationFields(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets all of the application fields for the specified target application and partition.</summary>
        <returns>A list of fields for the specified target application.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGroupClaims">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationGroupClaims (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationGroupClaims(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplicationGroupClaims(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationGroupClaims (rawPartitionId As Guid, applicationId As String) As IList(Of SecureStoreServiceClaim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^&gt; ^ GetApplicationGroupClaims(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets the claims of the group members of the specified group target application in the specified partition.</summary>
        <returns>A list of the claims of the group members of the specified group target application.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt; GetApplications (Guid rawPartitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplication&gt; GetApplications(valuetype System.Guid rawPartitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications (rawPartitionId As Guid) As IList(Of TargetApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplication ^&gt; ^ GetApplications(Guid rawPartitionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <summary>Gets all the target application definitions in the specified partition.</summary>
        <returns>A list of target application definitions.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTicketRedeemerClaims">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationTicketRedeemerClaims (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt; GetApplicationTicketRedeemerClaims(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetApplicationTicketRedeemerClaims(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationTicketRedeemerClaims (rawPartitionId As Guid, applicationId As String) As IList(Of SecureStoreServiceClaim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^&gt; ^ GetApplicationTicketRedeemerClaims(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets all of the ticket redeemer claims for the specified partition in the specified target application.</summary>
        <returns>A list of the ticket redeemer claims for the specified target application in the specified partition.</returns>
        <remarks>
          <para>This method retrieves all of the target application ticket redeemer claims. The ticket redeemer claims determine who can call <see cref="M:Microsoft.Office.SecureStoreService.Server.ISecureStore.RedeemTicket(System.String,System.String)" /> to redeem a ticket for a specified target application.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeMasterSecretKeyToken">
      <MemberSignature Language="C#" Value="public string GetChangeMasterSecretKeyToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChangeMasterSecretKeyToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetChangeMasterSecretKeyToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangeMasterSecretKeyToken () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetChangeMasterSecretKeyToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the token that is required to change the master secret key for the current application.</summary>
        <returns>The secret key token.</returns>
        <remarks>
          <para>This method gets the token that can be used with the <see cref="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.ChangeMasterSecretKey(System.String,System.Byte[])" /> method.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildConnectionSettings">
      <MemberSignature Language="C#" Value="public Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings GetChildConnectionSettings (Guid rawPartitionId, string parentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings GetChildConnectionSettings(valuetype System.Guid rawPartitionId, string parentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetChildConnectionSettings(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildConnectionSettings (rawPartitionId As Guid, parentName As String) As ConnectionSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettings ^ GetChildConnectionSettings(Guid rawPartitionId, System::String ^ parentName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.ConnectionSettingsNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="parentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw partition Id</param>
        <param name="parentName">Unique Name to identify ConnectionSettings's parent</param>
        <summary>
              Return the ConnectionSettings identified by the it's parent ConnectionSettings id.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionSettings">
      <MemberSignature Language="C#" Value="public Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings GetConnectionSettings (Guid rawPartitionId, string name, bool includeCredentials, out Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection targetCredentials, out Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection proxyCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings GetConnectionSettings(valuetype System.Guid rawPartitionId, string name, bool includeCredentials, [out] class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection&amp; targetCredentials, [out] class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection&amp; proxyCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetConnectionSettings(System.Guid,System.String,System.Boolean,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection@,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConnectionSettings (rawPartitionId As Guid, name As String, includeCredentials As Boolean, ByRef targetCredentials As SerializableSecureStoreCredentialCollection, ByRef proxyCredentials As SerializableSecureStoreCredentialCollection) As ConnectionSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettings ^ GetConnectionSettings(Guid rawPartitionId, System::String ^ name, bool includeCredentials, [Runtime::InteropServices::Out] Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ % targetCredentials, [Runtime::InteropServices::Out] Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ % proxyCredentials);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.ConnectionSettingsNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeCredentials" Type="System.Boolean" />
        <Parameter Name="targetCredentials" Type="Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection&amp;" RefType="out" />
        <Parameter Name="proxyCredentials" Type="Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partition Id</param>
        <param name="name">Unique Name to identify ConnectionSettings.</param>
        <param name="includeCredentials">Indicates whether the credentials should be fetched</param>
        <param name="targetCredentials">Returns the target credentials</param>
        <param name="proxyCredentials">Returns the proxy credentials</param>
        <summary>
              Return the ConnectionSettings identified by the ConnectionSettings id.
            </summary>
        <returns>Reference to IConnectionSettings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection GetCredentials (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection GetCredentials(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetCredentials(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredentials (rawPartitionId As Guid, applicationId As String) As SerializableSecureStoreCredentialCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ GetCredentials(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceCredentialsNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets the credentials for the specified target application in the specified partition.</summary>
        <returns>The credentials collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestrictedCredentials">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection GetRestrictedCredentials (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection GetRestrictedCredentials(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetRestrictedCredentials(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRestrictedCredentials (rawPartitionId As Guid, applicationId As String) As SerializableSecureStoreCredentialCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ GetRestrictedCredentials(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceCredentialsNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The ID of the restricted target application.</param>
        <summary>Gets the credentials for a restricted application using the specified partition ID and application ID.</summary>
        <returns>A credentials collection for the restricted target application in the specified partition.</returns>
        <remarks>
          <para>This method can be called to return the credentials for restricted and non-restricted target applications.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserApplication">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.TargetApplication GetUserApplication (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.TargetApplication GetUserApplication(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetUserApplication(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserApplication (rawPartitionId As Guid, applicationId As String) As TargetApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::SecureStoreService::Server::TargetApplication ^ GetUserApplication(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.TargetApplication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets all of the application definitions for the specified target application and partition for the current caller.</summary>
        <returns>The application definition for the specified target application and partition for the current caller.</returns>
        <remarks>
          <para>This method can be called by a Secure Store user who does not have administrative permissions on the Secure Store.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserApplicationFields">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; GetUserApplicationFields (Guid rawPartitionId, string applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; GetUserApplicationFields(valuetype System.Guid rawPartitionId, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetUserApplicationFields(System.Guid,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserApplicationFields (rawPartitionId As Guid, applicationId As String) As IList(Of TargetApplicationField)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplicationField ^&gt; ^ GetUserApplicationFields(Guid rawPartitionId, System::String ^ applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">The GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <summary>Gets all of the application fields information for the specified target application for the current caller.</summary>
        <returns>A list of the application fields of the target application in the specified partition.</returns>
        <remarks>
          <para>This method can be called by a Secure Store user who does not have administrative permissions on the Secure Store.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserApplications">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt; GetUserApplications (Guid rawPartitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplication&gt; GetUserApplications(valuetype System.Guid rawPartitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.GetUserApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserApplications (rawPartitionId As Guid) As IList(Of TargetApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplication ^&gt; ^ GetUserApplications(Guid rawPartitionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplication&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <summary>Gets all the target application definitions in the specified partition for the current caller.</summary>
        <returns>A list of the target applications.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMasterSecretKeyPopulated">
      <MemberSignature Language="C#" Value="public bool IsMasterSecretKeyPopulated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsMasterSecretKeyPopulated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.IsMasterSecretKeyPopulated" />
      <MemberSignature Language="VB.NET" Value="Public Function IsMasterSecretKeyPopulated () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsMasterSecretKeyPopulated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value that indicates whether the master secret key has been populated for the Secure Store Service application.</summary>
        <returns>
          <b>true</b> if the master secret key has been populated; otherwise, <b>false</b>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IssueTicket">
      <MemberSignature Language="C#" Value="public string IssueTicket (Guid rawPartitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string IssueTicket(valuetype System.Guid rawPartitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.IssueTicket(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function IssueTicket (rawPartitionId As Guid) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ IssueTicket(Guid rawPartitionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <summary>Issues a ticket to the current caller.</summary>
        <returns>The ticket that is a base64-encoded string.</returns>
        <remarks>
          <para>Another user can use this ticket to redeem the credentials of the original caller by calling the <see cref="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.RedeemTicket(System.Guid,System.String,System.String)" /> method.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedeemTicket">
      <MemberSignature Language="C#" Value="public Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection RedeemTicket (Guid rawPartitionId, string applicationId, string base64EncodedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection RedeemTicket(valuetype System.Guid rawPartitionId, string applicationId, string base64EncodedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.RedeemTicket(System.Guid,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RedeemTicket (rawPartitionId As Guid, applicationId As String, base64EncodedTicket As String) As SerializableSecureStoreCredentialCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ RedeemTicket(Guid rawPartitionId, System::String ^ applicationId, System::String ^ base64EncodedTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceCredentialsNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="base64EncodedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <param name="base64EncodedTicket">The base64-encoded string that represents the ticket.</param>
        <summary>Gets the credentials for the specified ticket and the specified target application.</summary>
        <returns>The credentials of the target application in the specified partition.</returns>
        <remarks>
          <para>The caller must be a ticket redeemer for the specified target application.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChangeKeyPassphrase">
      <MemberSignature Language="C#" Value="public void SetChangeKeyPassphrase (byte[] passPhraseHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChangeKeyPassphrase(unsigned int8[] passPhraseHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.SetChangeKeyPassphrase(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetChangeKeyPassphrase (passPhraseHash As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetChangeKeyPassphrase(cli::array &lt;System::Byte&gt; ^ passPhraseHash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passPhraseHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="passPhraseHash">The passphrase hash to decrypt the key.</param>
        <summary>Sets the passphrase hash on the application server.</summary>
        <remarks>
          <para>This method is used before changing the master key.</para>
          <para>This method stores the passphrase hash in memory. If the key has changed in the database, this method will automatically retrieve the key from the Secure Store database and store it in the local registry.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCredentials">
      <MemberSignature Language="C#" Value="public void SetCredentials (Guid rawPartitionId, string applicationId, Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCredentials(valuetype System.Guid rawPartitionId, string applicationId, class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.SetCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCredentials (rawPartitionId As Guid, applicationId As String, credentials As SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCredentials(Guid rawPartitionId, System::String ^ applicationId, Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ credentials);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <param name="credentials">The credentials collection.</param>
        <summary>Sets the credentials for the current caller for the specified individual target application in the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGroupCredentials">
      <MemberSignature Language="C#" Value="public void SetGroupCredentials (Guid rawPartitionId, string applicationId, Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGroupCredentials(valuetype System.Guid rawPartitionId, string applicationId, class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.SetGroupCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGroupCredentials (rawPartitionId As Guid, applicationId As String, credentials As SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGroupCredentials(Guid rawPartitionId, System::String ^ applicationId, Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ credentials);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The group target application ID.</param>
        <param name="credentials">The credentials collection.</param>
        <summary>Sets the credentials for a group target application in the specified partition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMasterSecretKey">
      <MemberSignature Language="C#" Value="public void SetMasterSecretKey (byte[] passPhraseHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMasterSecretKey(unsigned int8[] passPhraseHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.SetMasterSecretKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMasterSecretKey (passPhraseHash As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMasterSecretKey(cli::array &lt;System::Byte&gt; ^ passPhraseHash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passPhraseHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="passPhraseHash">The passphrase hash that is used to decrypt the key.</param>
        <summary>Sets the master secret key of the application server.</summary>
        <remarks>
          <para>This method can be invoked remotely through the <see cref="T:Microsoft.Office.SecureStoreService.Server.SecureStoreServiceApplicationProxy" /> class.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserCredentials">
      <MemberSignature Language="C#" Value="public void SetUserCredentials (Guid rawPartitionId, string applicationId, Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim, Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserCredentials(valuetype System.Guid rawPartitionId, string applicationId, class Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim claim, class Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.SetUserCredentials(System.Guid,System.String,Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim,Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserCredentials (rawPartitionId As Guid, applicationId As String, claim As SecureStoreServiceClaim, credentials As SerializableSecureStoreCredentialCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserCredentials(Guid rawPartitionId, System::String ^ applicationId, Microsoft::Office::SecureStoreService::Server::SecureStoreServiceClaim ^ claim, Microsoft::Office::SecureStoreService::Server::SerializableSecureStoreCredentialCollection ^ credentials);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="claim" Type="Microsoft.Office.SecureStoreService.Server.SecureStoreServiceClaim" />
        <Parameter Name="credentials" Type="Microsoft.Office.SecureStoreService.Server.SerializableSecureStoreCredentialCollection" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="applicationId">The target application ID.</param>
        <param name="claim">The identity claim for the user whose credentials are to be set.</param>
        <param name="credentials">The collection of user credentials to set.</param>
        <summary>Sets the credentials for the specified user, target application, and partition.</summary>
        <remarks>
          <para>Administrators of the target application can call this method to set the credentials for the specified user.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateApplication">
      <MemberSignature Language="C#" Value="public void UpdateApplication (Guid rawPartitionId, Microsoft.Office.SecureStoreService.Server.TargetApplication application, System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; applicationFields, Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims applicationClaims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateApplication(valuetype System.Guid rawPartitionId, class Microsoft.Office.SecureStoreService.Server.TargetApplication application, class System.Collections.Generic.IList`1&lt;class Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt; applicationFields, class Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims applicationClaims) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.UpdateApplication(System.Guid,Microsoft.Office.SecureStoreService.Server.TargetApplication,System.Collections.Generic.IList{Microsoft.Office.SecureStoreService.Server.TargetApplicationField},Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateApplication (rawPartitionId As Guid, application As TargetApplication, applicationFields As IList(Of TargetApplicationField), applicationClaims As TargetApplicationClaims)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateApplication(Guid rawPartitionId, Microsoft::Office::SecureStoreService::Server::TargetApplication ^ application, System::Collections::Generic::IList&lt;Microsoft::Office::SecureStoreService::Server::TargetApplicationField ^&gt; ^ applicationFields, Microsoft::Office::SecureStoreService::Server::TargetApplicationClaims ^ applicationClaims);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceTargetApplicationNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="application" Type="Microsoft.Office.SecureStoreService.Server.TargetApplication" />
        <Parameter Name="applicationFields" Type="System.Collections.Generic.IList&lt;Microsoft.Office.SecureStoreService.Server.TargetApplicationField&gt;" />
        <Parameter Name="applicationClaims" Type="Microsoft.Office.SecureStoreService.Server.TargetApplicationClaims" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">A GUID that represents the partition ID.</param>
        <param name="application">The target application ID.</param>
        <param name="applicationFields">The target application fields.</param>
        <param name="applicationClaims">The target application claims.</param>
        <summary>Updates a target application definition.</summary>
        <remarks>
          <para>This method updates the target application definition. The target application ID cannot be changed. An individual target application cannot be changed to a group target application and vice versa. In the target application fields, only <see cref="P:Microsoft.Office.SecureStoreService.Server.TargetApplicationField.IsMasked" /> can be changed in the existing application fields. All other information in the application fields must exactly match the information that was set when the target application was created.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateConnectionSettings">
      <MemberSignature Language="C#" Value="public void UpdateConnectionSettings (Guid rawPartitionId, Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings connectionSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateConnectionSettings(valuetype System.Guid rawPartitionId, class Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings connectionSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SecureStoreService.Server.ISecureStoreServiceApplication.UpdateConnectionSettings(System.Guid,Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateConnectionSettings(Guid rawPartitionId, Microsoft::BusinessData::Infrastructure::SecureStore::ConnectionSettings ^ connectionSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SecureStoreService</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.SecureStoreServiceFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(System.ArgumentNullException))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.FaultContract(typeof(Microsoft.Office.SecureStoreService.Server.ConnectionSettingsNotFoundFault))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPartitionId" Type="System.Guid" />
        <Parameter Name="connectionSettings" Type="Microsoft.BusinessData.Infrastructure.SecureStore.ConnectionSettings" />
      </Parameters>
      <Docs>
        <param name="rawPartitionId">Raw Partition Id</param>
        <param name="connectionSettings">ConnectionSettings object to be updated</param>
        <summary>
              Update the ConnectionSettings object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>