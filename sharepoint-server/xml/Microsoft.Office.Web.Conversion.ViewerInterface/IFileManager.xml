<Type Name="IFileManager" FullName="Microsoft.Office.Web.Conversion.ViewerInterface.IFileManager">
  <TypeSignature Language="C#" Value="public interface IFileManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFileManager" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Web.Conversion.ViewerInterface.IFileManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFileManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFileManager" />
  <TypeSignature Language="F#" Value="type IFileManager = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Server.Conversion.ViewerInterface</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface Applications will talk to for file create, open and close
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseHandle">
      <MemberSignature Language="C#" Value="public void CloseHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Web.Conversion.ViewerInterface.IFileManager.CloseHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseHandle (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="abstract member CloseHandle : nativeint -&gt; unit" Usage="iFileManager.CloseHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.Conversion.ViewerInterface</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReadHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Web.Conversion.ViewerInterface.FileManagerResult GetReadHandle (string fileName, out IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Web.Conversion.ViewerInterface.FileManagerResult GetReadHandle(string fileName, [out] native int&amp; handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Web.Conversion.ViewerInterface.IFileManager.GetReadHandle(System.String,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadHandle (fileName As String, ByRef handle As IntPtr) As FileManagerResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Web::Conversion::ViewerInterface::FileManagerResult GetReadHandle(System::String ^ fileName, [Runtime::InteropServices::Out] IntPtr % handle);" />
      <MemberSignature Language="F#" Value="abstract member GetReadHandle : string *  -&gt; Microsoft.Office.Web.Conversion.ViewerInterface.FileManagerResult" Usage="iFileManager.GetReadHandle (fileName, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.Conversion.ViewerInterface</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Web.Conversion.ViewerInterface.FileManagerResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="handle" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWriteHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Web.Conversion.ViewerInterface.FileManagerResult GetWriteHandle (string fileName, out IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Web.Conversion.ViewerInterface.FileManagerResult GetWriteHandle(string fileName, [out] native int&amp; handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Web.Conversion.ViewerInterface.IFileManager.GetWriteHandle(System.String,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWriteHandle (fileName As String, ByRef handle As IntPtr) As FileManagerResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Web::Conversion::ViewerInterface::FileManagerResult GetWriteHandle(System::String ^ fileName, [Runtime::InteropServices::Out] IntPtr % handle);" />
      <MemberSignature Language="F#" Value="abstract member GetWriteHandle : string *  -&gt; Microsoft.Office.Web.Conversion.ViewerInterface.FileManagerResult" Usage="iFileManager.GetWriteHandle (fileName, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.Conversion.ViewerInterface</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Web.Conversion.ViewerInterface.FileManagerResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="handle" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>