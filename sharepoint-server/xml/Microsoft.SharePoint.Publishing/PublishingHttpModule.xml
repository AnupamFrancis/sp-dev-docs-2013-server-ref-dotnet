<Type Name="PublishingHttpModule" FullName="Microsoft.SharePoint.Publishing.PublishingHttpModule">
  <TypeSignature Language="C#" Value="public sealed class PublishingHttpModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PublishingHttpModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.Publishing.PublishingHttpModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PublishingHttpModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class PublishingHttpModule sealed : System::Web::IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>This member is reserved for internal use and is not intended to be used directly from your code.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PublishingHttpModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.PublishingHttpModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PublishingHttpModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of a <see cref="T:Microsoft.SharePoint.Publishing.PublishingHttpModule" /> object.</summary>
        <remarks>
          <para>Creates a new <b>CacheModule</b> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRequestHandler">
      <MemberSignature Language="C#" Value="public void BeginRequestHandler (object sender, EventArgs ea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginRequestHandler(object sender, class System.EventArgs ea) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.PublishingHttpModule.BeginRequestHandler(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginRequestHandler (sender As Object, ea As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginRequestHandler(System::Object ^ sender, EventArgs ^ ea);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ea" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <param name="ea">To be added.</param>
        <summary>Handles the event fired at the beginning of every request.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.PublishingHttpModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases any resources that the ASP.NET<b>IHttpModule</b> interface is holding.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DontChangeCacheHeadersForRequest">
      <MemberSignature Language="C#" Value="public static void DontChangeCacheHeadersForRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DontChangeCacheHeadersForRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.PublishingHttpModule.DontChangeCacheHeadersForRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DontChangeCacheHeadersForRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DontChangeCacheHeadersForRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current HTTP context.</param>
        <summary>Prevents the caching mechanism from changing cache headers for a specific request.</summary>
        <remarks>
          <para>By default, Microsoft SharePoint Foundation sets a variety of cache headers to disallow caching from occurring on ASPX pages. By calling this method and passing the current context, you can bypass this default behavior. You can bypass the default behavior by setting HttpContext.Items["DontSetCacheHeaders"]=1.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DontEnableCachingForRequest">
      <MemberSignature Language="C#" Value="public static void DontEnableCachingForRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DontEnableCachingForRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.PublishingHttpModule.DontEnableCachingForRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DontEnableCachingForRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DontEnableCachingForRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current HTTP context.</param>
        <summary>Prevents the current page output from being cached. </summary>
        <remarks>
          <para>Use this method if you do not want the current page to be output cached.</para>
          <para>This method is useful if you create a Web Part or control that displays personal information that you never want to cache. Even if output caching is enabled, the current page is not cached.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.PublishingHttpModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">An object representing the current <b>HttpApplication</b> object.</param>
        <summary>Initializes the ASP.NET<b>IHttpModule</b> interface and registers it to handle the last event before ASP.NET determines whether to place the response in the cache.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateCache">
      <MemberSignature Language="C#" Value="public static void ValidateCache (System.Web.HttpContext context, object data, ref System.Web.HttpValidationStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateCache(class System.Web.HttpContext context, object data, valuetype System.Web.HttpValidationStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.PublishingHttpModule.ValidateCache(System.Web.HttpContext,System.Object,System.Web.HttpValidationStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidateCache (context As HttpContext, data As Object, ByRef status As HttpValidationStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateCache(System::Web::HttpContext ^ context, System::Object ^ data, System::Web::HttpValidationStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.HttpValidationStatus&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="context">Current <b>HttpContext</b>.</param>
        <param name="data">User-specified object; <b>ChangeSettings</b> in this case.</param>
        <param name="status">
          <paramref name="Out" /> When this method returns, it contains a &lt;Type&gt; that represents the status. The parameter is passed uninitialized.</param>
        <summary>Cache validation callback function that is used by the ASP.NET output cache to determine if a cache entry is still valid.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>