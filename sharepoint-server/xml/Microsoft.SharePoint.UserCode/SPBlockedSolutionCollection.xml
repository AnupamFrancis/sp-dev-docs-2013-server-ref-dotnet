<Type Name="SPBlockedSolutionCollection" FullName="Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection">
  <TypeSignature Language="C#" Value="public sealed class SPBlockedSolutionCollection : System.Collections.Generic.ICollection&lt;Microsoft.SharePoint.UserCode.SPBlockedSolution&gt;, System.Collections.Generic.IEnumerable&lt;Microsoft.SharePoint.UserCode.SPBlockedSolution&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SPBlockedSolutionCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class Microsoft.SharePoint.UserCode.SPBlockedSolution&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.SharePoint.UserCode.SPBlockedSolution&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SPBlockedSolutionCollection&#xA;Implements ICollection(Of SPBlockedSolution), IEnumerable(Of SPBlockedSolution)" />
  <TypeSignature Language="C++ CLI" Value="public ref class SPBlockedSolutionCollection sealed : System::Collections::Generic::ICollection&lt;Microsoft::SharePoint::UserCode::SPBlockedSolution ^&gt;, System::Collections::Generic::IEnumerable&lt;Microsoft::SharePoint::UserCode::SPBlockedSolution ^&gt;" />
  <TypeSignature Language="F#" Value="type SPBlockedSolutionCollection = class&#xA;    interface ICollection&lt;SPBlockedSolution&gt;&#xA;    interface seq&lt;SPBlockedSolution&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;Microsoft.SharePoint.UserCode.SPBlockedSolution&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.SharePoint.UserCode.SPBlockedSolution&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.SharePoint.UserCode.SPBlockedSolution solution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class Microsoft.SharePoint.UserCode.SPBlockedSolution solution) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.Add(Microsoft.SharePoint.UserCode.SPBlockedSolution)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (solution As SPBlockedSolution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(Microsoft::SharePoint::UserCode::SPBlockedSolution ^ solution);" />
      <MemberSignature Language="F#" Value="abstract member Add : Microsoft.SharePoint.UserCode.SPBlockedSolution -&gt; unit&#xA;override this.Add : Microsoft.SharePoint.UserCode.SPBlockedSolution -&gt; unit" Usage="sPBlockedSolutionCollection.Add solution" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solution" Type="Microsoft.SharePoint.UserCode.SPBlockedSolution" />
      </Parameters>
      <Docs>
        <param name="solution">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="sPBlockedSolutionCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Microsoft.SharePoint.UserCode.SPBlockedSolution solution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class Microsoft.SharePoint.UserCode.SPBlockedSolution solution) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.Contains(Microsoft.SharePoint.UserCode.SPBlockedSolution)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (solution As SPBlockedSolution) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(Microsoft::SharePoint::UserCode::SPBlockedSolution ^ solution);" />
      <MemberSignature Language="F#" Value="abstract member Contains : Microsoft.SharePoint.UserCode.SPBlockedSolution -&gt; bool&#xA;override this.Contains : Microsoft.SharePoint.UserCode.SPBlockedSolution -&gt; bool" Usage="sPBlockedSolutionCollection.Contains solution" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solution" Type="Microsoft.SharePoint.UserCode.SPBlockedSolution" />
      </Parameters>
      <Docs>
        <param name="solution">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Microsoft.SharePoint.UserCode.SPBlockedSolution[] array, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class Microsoft.SharePoint.UserCode.SPBlockedSolution[] array, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.CopyTo(Microsoft.SharePoint.UserCode.SPBlockedSolution[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As SPBlockedSolution(), count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;Microsoft::SharePoint::UserCode::SPBlockedSolution ^&gt; ^ array, int count);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Microsoft.SharePoint.UserCode.SPBlockedSolution[] * int -&gt; unit&#xA;override this.CopyTo : Microsoft.SharePoint.UserCode.SPBlockedSolution[] * int -&gt; unit" Usage="sPBlockedSolutionCollection.CopyTo (array, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Microsoft.SharePoint.UserCode.SPBlockedSolution[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Microsoft.SharePoint.UserCode.SPBlockedSolution&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Microsoft.SharePoint.UserCode.SPBlockedSolution&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of SPBlockedSolution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;Microsoft::SharePoint::UserCode::SPBlockedSolution ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.SharePoint.UserCode.SPBlockedSolution&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.SharePoint.UserCode.SPBlockedSolution&gt;" Usage="sPBlockedSolutionCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.SharePoint.UserCode.SPBlockedSolution&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (Microsoft.SharePoint.UserCode.SPBlockedSolution solution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class Microsoft.SharePoint.UserCode.SPBlockedSolution solution) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.Remove(Microsoft.SharePoint.UserCode.SPBlockedSolution)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (solution As SPBlockedSolution) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(Microsoft::SharePoint::UserCode::SPBlockedSolution ^ solution);" />
      <MemberSignature Language="F#" Value="abstract member Remove : Microsoft.SharePoint.UserCode.SPBlockedSolution -&gt; bool&#xA;override this.Remove : Microsoft.SharePoint.UserCode.SPBlockedSolution -&gt; bool" Usage="sPBlockedSolutionCollection.Remove solution" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solution" Type="Microsoft.SharePoint.UserCode.SPBlockedSolution" />
      </Parameters>
      <Docs>
        <param name="solution">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.UserCode.SPBlockedSolutionCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>