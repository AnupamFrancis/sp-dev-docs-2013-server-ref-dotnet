<Type Name="DocumentCrawlLog" FullName="Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog">
  <TypeSignature Language="C#" Value="public class DocumentCrawlLog : Microsoft.SharePoint.Client.ClientObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DocumentCrawlLog extends Microsoft.SharePoint.Client.ClientObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog" />
  <TypeSignature Language="VB.NET" Value="Public Class DocumentCrawlLog&#xA;Inherits ClientObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DocumentCrawlLog : Microsoft::SharePoint::Client::ClientObject" />
  <TypeSignature Language="F#" Value="type DocumentCrawlLog = class&#xA;    inherit ClientObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
    <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Client.ClientObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Client.ScriptType("Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog", ServerTypeId="{5c5cfd42-0712-4c00-ae49-23b33ba34ecc}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocumentCrawlLog (Microsoft.SharePoint.Client.ClientRuntimeContext context, Microsoft.SharePoint.Client.ObjectPath objectPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.Client.ClientRuntimeContext context, class Microsoft.SharePoint.Client.ObjectPath objectPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog.#ctor(Microsoft.SharePoint.Client.ClientRuntimeContext,Microsoft.SharePoint.Client.ObjectPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DocumentCrawlLog(Microsoft::SharePoint::Client::ClientRuntimeContext ^ context, Microsoft::SharePoint::Client::ObjectPath ^ objectPath);" />
      <MemberSignature Language="F#" Value="new Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog : Microsoft.SharePoint.Client.ClientRuntimeContext * Microsoft.SharePoint.Client.ObjectPath -&gt; Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog" Usage="new Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog (context, objectPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
        <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.Client.ClientRuntimeContext" />
        <Parameter Name="objectPath" Type="Microsoft.SharePoint.Client.ObjectPath" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="objectPath">To be added.</param>
        <summary>Initializes a new instance of the DocumentCrawlLog object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocumentCrawlLog (Microsoft.SharePoint.Client.ClientRuntimeContext context, Microsoft.SharePoint.Client.Site site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.Client.ClientRuntimeContext context, class Microsoft.SharePoint.Client.Site site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog.#ctor(Microsoft.SharePoint.Client.ClientRuntimeContext,Microsoft.SharePoint.Client.Site)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DocumentCrawlLog(Microsoft::SharePoint::Client::ClientRuntimeContext ^ context, Microsoft::SharePoint::Client::Site ^ site);" />
      <MemberSignature Language="F#" Value="new Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog : Microsoft.SharePoint.Client.ClientRuntimeContext * Microsoft.SharePoint.Client.Site -&gt; Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog" Usage="new Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog (context, site)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
        <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.Client.ClientRuntimeContext" />
        <Parameter Name="site" Type="Microsoft.SharePoint.Client.Site" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="site">To be added.</param>
        <summary>Initializes a new instance of the DocumentCrawlLog object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCrawledUrls">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Client.ClientResult&lt;Microsoft.SharePoint.Client.SimpleDataTable&gt; GetCrawledUrls (bool getCountOnly, long maxRows, string queryString, bool isLike, int contentSourceID, int errorLevel, int errorID, DateTime startDateTime, DateTime endDateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SharePoint.Client.ClientResult`1&lt;class Microsoft.SharePoint.Client.SimpleDataTable&gt; GetCrawledUrls(bool getCountOnly, int64 maxRows, string queryString, bool isLike, int32 contentSourceID, int32 errorLevel, int32 errorID, valuetype System.DateTime startDateTime, valuetype System.DateTime endDateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Client.Search.Administration.DocumentCrawlLog.GetCrawledUrls(System.Boolean,System.Int64,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCrawledUrls (getCountOnly As Boolean, maxRows As Long, queryString As String, isLike As Boolean, contentSourceID As Integer, errorLevel As Integer, errorID As Integer, startDateTime As DateTime, endDateTime As DateTime) As ClientResult(Of SimpleDataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::SharePoint::Client::ClientResult&lt;Microsoft::SharePoint::Client::SimpleDataTable ^&gt; ^ GetCrawledUrls(bool getCountOnly, long maxRows, System::String ^ queryString, bool isLike, int contentSourceID, int errorLevel, int errorID, DateTime startDateTime, DateTime endDateTime);" />
      <MemberSignature Language="F#" Value="member this.GetCrawledUrls : bool * int64 * string * bool * int * int * int * DateTime * DateTime -&gt; Microsoft.SharePoint.Client.ClientResult&lt;Microsoft.SharePoint.Client.SimpleDataTable&gt;" Usage="documentCrawlLog.GetCrawledUrls (getCountOnly, maxRows, queryString, isLike, contentSourceID, errorLevel, errorID, startDateTime, endDateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
        <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Client.ClientResult&lt;Microsoft.SharePoint.Client.SimpleDataTable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getCountOnly" Type="System.Boolean" />
        <Parameter Name="maxRows" Type="System.Int64" />
        <Parameter Name="queryString" Type="System.String" />
        <Parameter Name="isLike" Type="System.Boolean" />
        <Parameter Name="contentSourceID" Type="System.Int32" />
        <Parameter Name="errorLevel" Type="System.Int32" />
        <Parameter Name="errorID" Type="System.Int32" />
        <Parameter Name="startDateTime" Type="System.DateTime" />
        <Parameter Name="endDateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="getCountOnly">If <b>true</b>, gets the count of the contents crawled. If <b>false</b>, gets all the information about the crawled contents.</param>
        <param name="maxRows">Maximum number of rows to be returned. If 0 is specified, all the rows are returned. The number of rows returned will not exceed the number specified by the <paramref name="maxRows" /> parameter, if it is not 0.</param>
        <param name="queryString">Specifies the URL pattern for which crawled documents are returned.</param>
        <param name="isLike">If <b>true</b>, the pattern specified in <paramref name="queryString" /> is used as the prefix while matching the URLs of the crawled content. If <b>false</b>, the pattern specified in <paramref name="queryString" /> exactly matches the URLs of the crawled content.</param>
        <param name="contentSourceID">Unique identifier of the content source. If specified, only the crawled contents that are associated with the content source are returned.</param>
        <param name="errorLevel">To be added.</param>
        <param name="errorID">To be added.</param>
        <param name="startDateTime">If set to <b>DateTime.MinValue</b>, returns information about all of the crawled contents. Otherwise, returns information about contents that were crawled after the specified DateTime.</param>
        <param name="endDateTime">If set to <b>DateTime.MaxValue</b>, returns information about all of the crawled contents. Otherwise, returns information about contents that were crawled before the specified <b>DateTime</b>.</param>
        <summary>Retrieves information about all the contents that were crawled. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>