<Type Name="TaxonomyFieldValueCollection" FullName="Microsoft.SharePoint.Taxonomy.TaxonomyFieldValueCollection">
  <TypeSignature Language="C#" Value="public class TaxonomyFieldValueCollection : System.Collections.Generic.List&lt;Microsoft.SharePoint.Taxonomy.TaxonomyFieldValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaxonomyFieldValueCollection extends System.Collections.Generic.List`1&lt;class Microsoft.SharePoint.Taxonomy.TaxonomyFieldValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.Taxonomy.TaxonomyFieldValueCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TaxonomyFieldValueCollection&#xA;Inherits List(Of TaxonomyFieldValue)" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaxonomyFieldValueCollection : System::Collections::Generic::List&lt;Microsoft::SharePoint::Taxonomy::TaxonomyFieldValue ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint.Taxonomy</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Generic.List&lt;Microsoft.SharePoint.Taxonomy.TaxonomyFieldValue&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.SharePoint.Taxonomy.TaxonomyFieldValue</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Client.ClientCallableType(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful, CollectionChildItemType=typeof(Microsoft.SharePoint.Taxonomy.TaxonomyFieldValue), ServerTypeId="C3DFAE10-F3BF-4894-9012-BB60665B6D91")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the multi-value object for the taxonomy column.
</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaxonomyFieldValueCollection (Microsoft.SharePoint.SPField creatingField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.SPField creatingField) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Taxonomy.TaxonomyFieldValueCollection.#ctor(Microsoft.SharePoint.SPField)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creatingField As SPField)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaxonomyFieldValueCollection(Microsoft::SharePoint::SPField ^ creatingField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Taxonomy</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creatingField" Type="Microsoft.SharePoint.SPField" />
      </Parameters>
      <Docs>
        <param name="creatingField">Field that this value is bound to</param>
        <summary>Initializes a new instance of a <see cref="T:Microsoft.SharePoint.Taxonomy.TaxonomyFieldValueCollection" /> object that is bound to the <paramref name="creatingField" /> parameter.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaxonomyFieldValueCollection (string fieldValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fieldValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Taxonomy.TaxonomyFieldValueCollection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fieldValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaxonomyFieldValueCollection(System::String ^ fieldValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Taxonomy</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fieldValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fieldValue">String to parse for value</param>
        <summary>Initializes a new instance of a <see cref="T:Microsoft.SharePoint.Taxonomy.TaxonomyFieldValueCollection" /> that is not bound to a field.</summary>
        <remarks>
          <para>The <paramref name="fieldValue" /> must be in the <b>SPLookup</b> format, which requires wss Id;#Label|Guid. You can repeat this entry for multiple values by repeating the ;# characters.
</para>
          <para>This value is not bound to a field, so some methods may throw a <b>MemberAccessException</b>.
</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaxonomyFieldValueCollection (string fieldValue, Microsoft.SharePoint.SPField creatingField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fieldValue, class Microsoft.SharePoint.SPField creatingField) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Taxonomy.TaxonomyFieldValueCollection.#ctor(System.String,Microsoft.SharePoint.SPField)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fieldValue As String, creatingField As SPField)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaxonomyFieldValueCollection(System::String ^ fieldValue, Microsoft::SharePoint::SPField ^ creatingField);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Taxonomy</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fieldValue" Type="System.String" />
        <Parameter Name="creatingField" Type="Microsoft.SharePoint.SPField" />
      </Parameters>
      <Docs>
        <param name="fieldValue">Field that this value is bound to</param>
        <param name="creatingField">String to parse for the value</param>
        <summary>Initializes a new instance of a <see cref="T:Microsoft.SharePoint.Taxonomy.TaxonomyFieldValueCollection" /> that is bound to the <paramref name="creatingField" /> parameter.</summary>
        <remarks>
          <para>The <paramref name="fieldValue" /> must be in the <b>SPLookup</b> format, which requires wss Id;#Label|Guid. You can repeat this entry for multiple values by repeating the ;# characters.
This value is not bound to a field, so some methods may throw a <b>MemberAccessException</b></para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateFromLabelGuidPairs">
      <MemberSignature Language="C#" Value="public void PopulateFromLabelGuidPairs (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopulateFromLabelGuidPairs(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Taxonomy.TaxonomyFieldValueCollection.PopulateFromLabelGuidPairs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopulateFromLabelGuidPairs (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PopulateFromLabelGuidPairs(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Taxonomy</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Values to add as a string</param>
        <summary>
This method adds TaxonomyFieldValue's based on the parsing of the text
</summary>
        <remarks>
          <para>
Values must be added as label/Guid pairs.  The format is as follows:
label|Guid
This can be repeated multiple times delimited by a ;.  All WssId's will be set to -1.
</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Taxonomy.TaxonomyFieldValueCollection.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Taxonomy</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emits taxonomy data without the WssId value.
</summary>
        <returns>Returns <see cref="T:System.String" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>