<Type Name="WorkflowCodeTypeReferenceExpression" FullName="Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression">
  <TypeSignature Language="C#" Value="public class WorkflowCodeTypeReferenceExpression : System.CodeDom.CodeTypeReferenceExpression, System.Workflow.Activities.Rules.IRuleExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowCodeTypeReferenceExpression extends System.CodeDom.CodeTypeReferenceExpression implements class System.Workflow.Activities.Rules.IRuleExpression" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowCodeTypeReferenceExpression&#xA;Inherits CodeTypeReferenceExpression&#xA;Implements IRuleExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowCodeTypeReferenceExpression : System::CodeDom::CodeTypeReferenceExpression, System::Workflow::Activities::Rules::IRuleExpression" />
  <TypeSignature Language="F#" Value="type WorkflowCodeTypeReferenceExpression = class&#xA;    inherit CodeTypeReferenceExpression&#xA;    interface IRuleExpression" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeReferenceExpression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Activities.Rules.IRuleExpression</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowCodeTypeReferenceExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowCodeTypeReferenceExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowCodeTypeReferenceExpression (string qualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowCodeTypeReferenceExpression(System::String ^ qualifiedName);" />
      <MemberSignature Language="F#" Value="new Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression : string -&gt; Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression" Usage="new Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression qualifiedName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowCodeTypeReferenceExpression (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowCodeTypeReferenceExpression(Type ^ type);" />
      <MemberSignature Language="F#" Value="new Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression : Type -&gt; Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression" Usage="new Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeUsage">
      <MemberSignature Language="C#" Value="public void AnalyzeUsage (System.Workflow.Activities.Rules.RuleAnalysis analysis, bool isRead, bool isWritten, System.Workflow.Activities.Rules.RulePathQualifier qualifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AnalyzeUsage(class System.Workflow.Activities.Rules.RuleAnalysis analysis, bool isRead, bool isWritten, class System.Workflow.Activities.Rules.RulePathQualifier qualifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AnalyzeUsage (analysis As RuleAnalysis, isRead As Boolean, isWritten As Boolean, qualifier As RulePathQualifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AnalyzeUsage(System::Workflow::Activities::Rules::RuleAnalysis ^ analysis, bool isRead, bool isWritten, System::Workflow::Activities::Rules::RulePathQualifier ^ qualifier);" />
      <MemberSignature Language="F#" Value="abstract member AnalyzeUsage : System.Workflow.Activities.Rules.RuleAnalysis * bool * bool * System.Workflow.Activities.Rules.RulePathQualifier -&gt; unit&#xA;override this.AnalyzeUsage : System.Workflow.Activities.Rules.RuleAnalysis * bool * bool * System.Workflow.Activities.Rules.RulePathQualifier -&gt; unit" Usage="workflowCodeTypeReferenceExpression.AnalyzeUsage (analysis, isRead, isWritten, qualifier)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.Rules.IRuleExpression.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="analysis" Type="System.Workflow.Activities.Rules.RuleAnalysis" />
        <Parameter Name="isRead" Type="System.Boolean" />
        <Parameter Name="isWritten" Type="System.Boolean" />
        <Parameter Name="qualifier" Type="System.Workflow.Activities.Rules.RulePathQualifier" />
      </Parameters>
      <Docs>
        <param name="analysis">To be added.</param>
        <param name="isRead">To be added.</param>
        <param name="isWritten">To be added.</param>
        <param name="qualifier">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeExpression ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.CodeDom.CodeExpression&#xA;override this.Clone : unit -&gt; System.CodeDom.CodeExpression" Usage="workflowCodeTypeReferenceExpression.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.Rules.IRuleExpression.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decompile">
      <MemberSignature Language="C#" Value="public void Decompile (System.Text.StringBuilder stringBuilder, System.CodeDom.CodeExpression parentExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Decompile(class System.Text.StringBuilder stringBuilder, class System.CodeDom.CodeExpression parentExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Decompile(System::Text::StringBuilder ^ stringBuilder, System::CodeDom::CodeExpression ^ parentExpression);" />
      <MemberSignature Language="F#" Value="abstract member Decompile : System.Text.StringBuilder * System.CodeDom.CodeExpression -&gt; unit&#xA;override this.Decompile : System.Text.StringBuilder * System.CodeDom.CodeExpression -&gt; unit" Usage="workflowCodeTypeReferenceExpression.Decompile (stringBuilder, parentExpression)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.Rules.IRuleExpression.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringBuilder" Type="System.Text.StringBuilder" />
        <Parameter Name="parentExpression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="stringBuilder">To be added.</param>
        <param name="parentExpression">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.Rules.RuleExpressionResult Evaluate (System.Workflow.Activities.Rules.RuleExecution execution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.Activities.Rules.RuleExpressionResult Evaluate(class System.Workflow.Activities.Rules.RuleExecution execution) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.Evaluate(System.Workflow.Activities.Rules.RuleExecution)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (execution As RuleExecution) As RuleExpressionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::Activities::Rules::RuleExpressionResult ^ Evaluate(System::Workflow::Activities::Rules::RuleExecution ^ execution);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Workflow.Activities.Rules.RuleExecution -&gt; System.Workflow.Activities.Rules.RuleExpressionResult&#xA;override this.Evaluate : System.Workflow.Activities.Rules.RuleExecution -&gt; System.Workflow.Activities.Rules.RuleExpressionResult" Usage="workflowCodeTypeReferenceExpression.Evaluate execution" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.Rules.IRuleExpression.Evaluate(System.Workflow.Activities.Rules.RuleExecution)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleExpressionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="execution" Type="System.Workflow.Activities.Rules.RuleExecution" />
      </Parameters>
      <Docs>
        <param name="execution">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.Match(System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (expression As CodeExpression) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Match(System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.CodeDom.CodeExpression -&gt; bool&#xA;override this.Match : System.CodeDom.CodeExpression -&gt; bool" Usage="workflowCodeTypeReferenceExpression.Match expression" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.Rules.IRuleExpression.Match(System.CodeDom.CodeExpression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QualifiedName">
      <MemberSignature Language="C#" Value="public string QualifiedName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QualifiedName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.QualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Property QualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QualifiedName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QualifiedName : string with get, set" Usage="Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.QualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.Rules.RuleExpressionInfo Validate (System.Workflow.Activities.Rules.RuleValidation validation, bool isWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.Activities.Rules.RuleExpressionInfo Validate(class System.Workflow.Activities.Rules.RuleValidation validation, bool isWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.WorkflowActions.WorkflowCodeTypeReferenceExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate (validation As RuleValidation, isWritten As Boolean) As RuleExpressionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::Activities::Rules::RuleExpressionInfo ^ Validate(System::Workflow::Activities::Rules::RuleValidation ^ validation, bool isWritten);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Workflow.Activities.Rules.RuleValidation * bool -&gt; System.Workflow.Activities.Rules.RuleExpressionInfo&#xA;override this.Validate : System.Workflow.Activities.Rules.RuleValidation * bool -&gt; System.Workflow.Activities.Rules.RuleExpressionInfo" Usage="workflowCodeTypeReferenceExpression.Validate (validation, isWritten)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.WorkflowActions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleExpressionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validation" Type="System.Workflow.Activities.Rules.RuleValidation" />
        <Parameter Name="isWritten" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validation">To be added.</param>
        <param name="isWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>