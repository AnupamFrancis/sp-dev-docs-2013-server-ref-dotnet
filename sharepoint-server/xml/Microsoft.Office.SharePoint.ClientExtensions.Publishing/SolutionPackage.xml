<Type Name="SolutionPackage" FullName="Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage">
  <TypeSignature Language="C#" Value="public class SolutionPackage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SolutionPackage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage" />
  <TypeSignature Language="VB.NET" Value="Public Class SolutionPackage" />
  <TypeSignature Language="C++ CLI" Value="public ref class SolutionPackage" />
  <TypeSignature Language="F#" Value="type SolutionPackage = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.SharePoint.ClientExtensions</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a class that is used to generate a solution package.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SolutionPackage (Uri webUrl, string srcDocLibRelativePath, string solutionName, string solutionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri webUrl, string srcDocLibRelativePath, string solutionName, string solutionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage.#ctor(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (webUrl As Uri, srcDocLibRelativePath As String, solutionName As String, solutionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SolutionPackage(Uri ^ webUrl, System::String ^ srcDocLibRelativePath, System::String ^ solutionName, System::String ^ solutionId);" />
      <MemberSignature Language="F#" Value="new Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage : Uri * string * string * string -&gt; Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage" Usage="new Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage (webUrl, srcDocLibRelativePath, solutionName, solutionId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SharePoint.ClientExtensions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="webUrl" Type="System.Uri" />
        <Parameter Name="srcDocLibRelativePath" Type="System.String" />
        <Parameter Name="solutionName" Type="System.String" />
        <Parameter Name="solutionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="webUrl">The URL of the site that contains the solution and where the package is to be published. </param>
        <param name="srcDocLibRelativePath">The relative URL of the document library containing the client-ready artifacts. The artifacts should contain a file named oir.config.</param>
        <param name="solutionName">The name of the solution.</param>
        <param name="solutionId">The solution identifier (ID). This should be the same as the solution ID in the oir.config file.</param>
        <summary>Initializes a new instance of the class with the specified site URL, source document library path, solution name, and solution ID.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SolutionPackage (Uri webUrl, string srcDocLibRelativePath, string solutionName, string solutionId, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri webUrl, string srcDocLibRelativePath, string solutionName, string solutionId, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage.#ctor(System.Uri,System.String,System.String,System.String,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SolutionPackage(Uri ^ webUrl, System::String ^ srcDocLibRelativePath, System::String ^ solutionName, System::String ^ solutionId, Version ^ version);" />
      <MemberSignature Language="F#" Value="new Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage : Uri * string * string * string * Version -&gt; Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage" Usage="new Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage (webUrl, srcDocLibRelativePath, solutionName, solutionId, version)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SharePoint.ClientExtensions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="webUrl" Type="System.Uri" />
        <Parameter Name="srcDocLibRelativePath" Type="System.String" />
        <Parameter Name="solutionName" Type="System.String" />
        <Parameter Name="solutionId" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="webUrl">The URL of the site containing the solution and where the package is to be published. </param>
        <param name="srcDocLibRelativePath">The relative URL of the document library containing the client-ready artifacts. The artifacts should contain a file named oir.config.</param>
        <param name="solutionName">The name of the solution.</param>
        <param name="solutionId">The solution identifier (ID). This should be the same as the solution ID in the oir.config file.</param>
        <param name="version">The version of the solution.</param>
        <summary>Initializes a new instance of the class with the specified site URL, source document library path, solution name, solution ID, and solution version.</summary>
        <remarks>To be added.</remarks>
        <example>
          <para>Code Snippet: Create a BCS Solution Package for a Declarative Solution</para>
        </example>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SolutionPackage (Version clientVersion, Uri webUrl, string srcDocLibRelativePath, string solutionName, string solutionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Version clientVersion, class System.Uri webUrl, string srcDocLibRelativePath, string solutionName, string solutionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage.#ctor(System.Version,System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientVersion As Version, webUrl As Uri, srcDocLibRelativePath As String, solutionName As String, solutionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SolutionPackage(Version ^ clientVersion, Uri ^ webUrl, System::String ^ srcDocLibRelativePath, System::String ^ solutionName, System::String ^ solutionId);" />
      <MemberSignature Language="F#" Value="new Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage : Version * Uri * string * string * string -&gt; Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage" Usage="new Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage (clientVersion, webUrl, srcDocLibRelativePath, solutionName, solutionId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SharePoint.ClientExtensions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientVersion" Type="System.Version" />
        <Parameter Name="webUrl" Type="System.Uri" />
        <Parameter Name="srcDocLibRelativePath" Type="System.String" />
        <Parameter Name="solutionName" Type="System.String" />
        <Parameter Name="solutionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientVersion">the version of office client</param>
        <param name="webUrl">The url of the site containing the solution. It is also the site where the package is to be published</param>
        <param name="srcDocLibRelativePath">The relative url of the document library containing the client-ready artifacts</param>
        <param name="solutionName">The name of the solution</param>
        <param name="solutionId">The solution ID</param>
        <summary>
            Constructor
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SolutionPackage (Version clientVersion, Uri webUrl, string srcDocLibRelativePath, string solutionName, string solutionId, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Version clientVersion, class System.Uri webUrl, string srcDocLibRelativePath, string solutionName, string solutionId, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage.#ctor(System.Version,System.Uri,System.String,System.String,System.String,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SolutionPackage(Version ^ clientVersion, Uri ^ webUrl, System::String ^ srcDocLibRelativePath, System::String ^ solutionName, System::String ^ solutionId, Version ^ version);" />
      <MemberSignature Language="F#" Value="new Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage : Version * Uri * string * string * string * Version -&gt; Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage" Usage="new Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage (clientVersion, webUrl, srcDocLibRelativePath, solutionName, solutionId, version)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SharePoint.ClientExtensions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientVersion" Type="System.Version" />
        <Parameter Name="webUrl" Type="System.Uri" />
        <Parameter Name="srcDocLibRelativePath" Type="System.String" />
        <Parameter Name="solutionName" Type="System.String" />
        <Parameter Name="solutionId" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="clientVersion">To be added.</param>
        <param name="webUrl">The url of the site containing the solution. It is also the site where the package is to be published</param>
        <param name="srcDocLibRelativePath">The relative url of the document library containing the client-ready artifacts</param>
        <param name="solutionName">The name of the solution</param>
        <param name="solutionId">The solution ID</param>
        <param name="version">The version of the solution</param>
        <summary>
            Constructor
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public string Generate (System.Security.Cryptography.X509Certificates.X509Certificate2 cert, string targetDocLibRelativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Generate(class System.Security.Cryptography.X509Certificates.X509Certificate2 cert, string targetDocLibRelativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage.Generate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Generate (cert As X509Certificate2, targetDocLibRelativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Generate(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ cert, System::String ^ targetDocLibRelativePath);" />
      <MemberSignature Language="F#" Value="member this.Generate : System.Security.Cryptography.X509Certificates.X509Certificate2 * string -&gt; string" Usage="solutionPackage.Generate (cert, targetDocLibRelativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SharePoint.ClientExtensions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cert" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="targetDocLibRelativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cert">The X509 certificate used to sign the package.</param>
        <param name="targetDocLibRelativePath">The path of the document library where the package should be published. This path is relative to the site URL.</param>
        <summary>Generates the package and signs it with the given certificate.</summary>
        <returns>The solution package URL string.</returns>
        <remarks>To be added.</remarks>
        <example>
          <para>Code Snippet: Create a BCS Solution Package for a Declarative Solution</para>
        </example>
        <exception cref="T:Microsoft.Office.SharePoint.ClientExtensions.Publishing.PublishException">This exception is thrown if any of the following conditions applies:The certificate chain for the specified certificate is in error, e.g. the root certificate of the specified certificate is not trusted or the specified certificate has expired. For details about the chain status, see <a href="T:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags">X509ChainStatusFlags Enumeration</a>The site, which was provided in the constructor, does not exist.The "Offline Synchronization for External Lists" SharePoint feature is not active for the SharePoint site.The source document library path specified in the constructor or the target document library path specified in this method is a null reference (Nothing in Visual Basic).The source document library specified in the constructor or the target document library does not exist on the SharePoint site.The source document library is the same as the target document library.The oir.config file is not included in the source document library.</exception>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public string Generate (System.Security.Cryptography.X509Certificates.X509Certificate2 cert, string targetDocLibRelativePath, bool selfSigned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Generate(class System.Security.Cryptography.X509Certificates.X509Certificate2 cert, string targetDocLibRelativePath, bool selfSigned) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage.Generate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Generate (cert As X509Certificate2, targetDocLibRelativePath As String, selfSigned As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Generate(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ cert, System::String ^ targetDocLibRelativePath, bool selfSigned);" />
      <MemberSignature Language="F#" Value="member this.Generate : System.Security.Cryptography.X509Certificates.X509Certificate2 * string * bool -&gt; string" Usage="solutionPackage.Generate (cert, targetDocLibRelativePath, selfSigned)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SharePoint.ClientExtensions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cert" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="targetDocLibRelativePath" Type="System.String" />
        <Parameter Name="selfSigned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cert">The X509 certificate used to sign the package.</param>
        <param name="targetDocLibRelativePath">The path of the document library where the package should be published. This path is relative to the site URL.</param>
        <param name="selfSigned">
          <b>true</b> to indicate that the specified certificate is self-signed and to bypass checking whether the root certificate is trusted; <b>false</b> to indicate that the specified certificate is not self-signed and to check whether the root certificate is trusted.</param>
        <summary>Generates the package and signs it with the given certificate.</summary>
        <returns>The solution package URL string.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Office.SharePoint.ClientExtensions.Publishing.PublishException">This exception is thrown if any of the following conditions applies:The certificate chain for the specified certificate is in error (except for the error that occurs when the root certificate of the specified certificate is not trusted.) An example of such an error is when the specified certificate has expired. For details about the chain status, see <a href="T:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags">X509ChainStatusFlags Enumeration</a><paramref name="selfSigned" /> is <b>false</b> and the root certificate of the specified certificate is not trusted.The site, which was provided in the constructor, does not exist.The "Offline Synchronization for External Lists" SharePoint feature is not active for the SharePoint site.The source document library path specified in the constructor or the target document library path specified in this method is a null reference (Nothing in Visual Basic).The source document library specified in the constructor or the target document library does not exist on the SharePoint site.The source document library is the same as the target document library.The oir.config file is not included in the source document library.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateUnsigned">
      <MemberSignature Language="C#" Value="public string GenerateUnsigned (string targetDocLibRelativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateUnsigned(string targetDocLibRelativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.SharePoint.ClientExtensions.Publishing.SolutionPackage.GenerateUnsigned(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateUnsigned (targetDocLibRelativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateUnsigned(System::String ^ targetDocLibRelativePath);" />
      <MemberSignature Language="F#" Value="member this.GenerateUnsigned : string -&gt; string" Usage="solutionPackage.GenerateUnsigned targetDocLibRelativePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.SharePoint.ClientExtensions</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDocLibRelativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDocLibRelativePath">The path of the document library where the package should be published. This path is relative to the site URL.</param>
        <summary>Generates the package without signing.</summary>
        <returns>The solution package URL string.</returns>
        <remarks>To be added.</remarks>
        <example>
          <para>Code Snippet: Create a BCS Solution Package for a Declarative Solution</para>
        </example>
        <exception cref="T:Microsoft.Office.SharePoint.ClientExtensions.Publishing.PublishException">This exception is thrown if any of the following conditions applies:The site, which was provided in the constructor, does not exist.The "Offline Synchronization for External Lists" SharePoint feature is not active for the SharePoint site.The source document library path specified in the constructor or the target document library path specified in this method is a null reference (Nothing in Visual Basic).The source document library specified in the constructor or the target document library does not exist on the SharePoint site.The source document library is the same as the target document library.The oir.config file is not included in the source document library.</exception>
      </Docs>
    </Member>
  </Members>
</Type>