<Type Name="DocumentLibraryFileExistValidator" FullName="Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator">
  <TypeSignature Language="C#" Value="public sealed class DocumentLibraryFileExistValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DocumentLibraryFileExistValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DocumentLibraryFileExistValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class DocumentLibraryFileExistValidator sealed : System::Web::UI::WebControls::BaseValidator" />
  <TypeSignature Language="F#" Value="type DocumentLibraryFileExistValidator = class&#xA;    inherit BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verifies whether a file exists in the document library.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocumentLibraryFileExistValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DocumentLibraryFileExistValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the DocumentLibraryFileExistValidator object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileExtension">
      <MemberSignature Language="C#" Value="public string AppendFileExtension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppendFileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.AppendFileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendFileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppendFileExtension { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppendFileExtension : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.AppendFileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the file name extension of the target file.</summary>
        <value>A string that specifies the file name extension.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentLibrary">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.SPDocumentLibrary DocumentLibrary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.SPDocumentLibrary DocumentLibrary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.DocumentLibrary" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentLibrary As SPDocumentLibrary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::SPDocumentLibrary ^ DocumentLibrary { Microsoft::SharePoint::SPDocumentLibrary ^ get(); void set(Microsoft::SharePoint::SPDocumentLibrary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentLibrary : Microsoft.SharePoint.SPDocumentLibrary with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.DocumentLibrary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.SPDocumentLibrary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the document library to search for the file.</summary>
        <value>An SPDocumentLibrary object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="abstract member EvaluateIsValid : unit -&gt; bool&#xA;override this.EvaluateIsValid : unit -&gt; bool" Usage="documentLibraryFileExistValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether the evaluation is valid.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FireIfSecondary">
      <MemberSignature Language="C#" Value="public bool FireIfSecondary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireIfSecondary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.FireIfSecondary" />
      <MemberSignature Language="VB.NET" Value="Public Property FireIfSecondary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireIfSecondary { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireIfSecondary : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.FireIfSecondary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the library validator should be raised if other validators are already raised. </summary>
        <value>To be added.</value>
        <remarks>
          <para>This property can be useful if there are multiple validators (such as a required field validator) and you do not want more than one error message.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FolderUrlPart">
      <MemberSignature Language="C#" Value="public string FolderUrlPart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FolderUrlPart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.FolderUrlPart" />
      <MemberSignature Language="VB.NET" Value="Public Property FolderUrlPart As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FolderUrlPart { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FolderUrlPart : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.FolderUrlPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets folder URL part of the URL of the document library file.</summary>
        <value>A string that specifies the folder URL part of the URL of the document library file.</value>
        <remarks>
          <para>For example, if the file named "page1.aspx" is in the page library of a SharePoint site "http://MyServer/MySite"and the file is in the sub folder named "folder1", and the full url of the file is "http://MyServer/Mysite/Pages/folder1/page1.aspx", then the FolderUrlPart will be "/folder1". </para>
          <para>Similarly, if the full url of the file is "http://MyServer/Mysite/Pages/folder1/subfolder1/page1.aspx", then the FolderUrlPart will be "/folder1/subfolder1".</para>
          <para>If the file is in the root folder of a document library, then the FolderUrlPart is an empty string.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="documentLibraryFileExistValidator.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Event arguments.</param>
        <summary>Represents the <b>OnLoad</b> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidIfExists">
      <MemberSignature Language="C#" Value="public bool ValidIfExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidIfExists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.ValidIfExists" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidIfExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidIfExists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidIfExists : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.DocumentLibraryFileExistValidator.ValidIfExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("true")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines if the file will be checked for itsexistence or absence.</summary>
        <value>A Boolean value.</value>
        <remarks>
          <para>
            <b>true</b> if the file's existence will be confirmed; <b>false</b> if the file's absence will be confirmed.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>