<Type Name="RichHtmlField" FullName="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField">
  <TypeSignature Language="C#" Value="public class RichHtmlField : Microsoft.SharePoint.Publishing.WebControls.BaseRichField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RichHtmlField extends Microsoft.SharePoint.Publishing.WebControls.BaseRichField" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField" />
  <TypeSignature Language="VB.NET" Value="Public Class RichHtmlField&#xA;Inherits BaseRichField" />
  <TypeSignature Language="C++ CLI" Value="public ref class RichHtmlField : Microsoft::SharePoint::Publishing::WebControls::BaseRichField" />
  <TypeSignature Language="F#" Value="type RichHtmlField = class&#xA;    inherit BaseRichField" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Publishing.WebControls.BaseRichField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a field control used to edit data in the <b>HtmlField</b> type fields.</summary>
    <remarks>
      <para>Use the <b>RichHtmlField</b> controls in page layouts and on list edit forms to display and modify the item values of any <b>SPListItem.Fields</b> objects of the publishing <b>HtmlField</b> type.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RichHtmlField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RichHtmlField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new default instance of a <b>RichHtmlField</b> control object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDragDrop">
      <MemberSignature Language="C#" Value="public bool AllowDragDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDragDrop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowDragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDragDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDragDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDragDrop : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowDragDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates if the drag and drop of elements is supported for the field.</summary>
        <value>The default value is <b>true</b>.</value>
        <remarks>
          <para>When set to <b>false</b>, the image field does not allow users to drag and drop elements into the HTML field.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEmbedding">
      <MemberSignature Language="C#" Value="public bool AllowEmbedding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEmbedding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowEmbedding" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowEmbedding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEmbedding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowEmbedding : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowEmbedding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a constraint that enables embedding (IFrames) to be added when editing the field.</summary>
        <value>
          <b>true</b> if embedding is allowed; otherwise, <b>false</b>.</value>
        <remarks>
          <para>When this value is set to <b>true</b>, IFrame embedding is supported for this HTML field by following the HTML field security rules that are specified at the site collection level. This property also determines whether the editing user interface (UI) enables these operations.</para>
          <para>
            <b>Note</b>: Embedding is only supported in fields where <b>RichTextMode</b> is set to <b>FullHtml</b>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowExternalUrls">
      <MemberSignature Language="C#" Value="public bool AllowExternalUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowExternalUrls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowExternalUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowExternalUrls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowExternalUrls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowExternalUrls : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowExternalUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the constraint that allows external URLs in the HTML when validating the value in this <b>RichHtmlField</b> object.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If this property is set to <b>true</b>, during validation, it sets the <see cref="P:Microsoft.SharePoint.Publishing.Fields.HtmlValidationContext.RestrictUrlsToSiteCollection" /> property to <b>true</b> and sets the <see cref="P:Microsoft.SharePoint.Publishing.Fields.HtmlValidationContext.GuidOfThisSiteCollection" /> property to the <see cref="P:Microsoft.SharePoint.SPContext.Current.Site.ID" /> property of the current site collection. This means that only URLs in the HTML that are in the current site collection are accepted as valid.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFontColorsMenu">
      <MemberSignature Language="C#" Value="public bool AllowFontColorsMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFontColorsMenu" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontColorsMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowFontColorsMenu As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFontColorsMenu { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowFontColorsMenu : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontColorsMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates if a font colors menu is shown.</summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFontCustomColors">
      <MemberSignature Language="C#" Value="public bool AllowFontCustomColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFontCustomColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontCustomColors" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowFontCustomColors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFontCustomColors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowFontCustomColors : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontCustomColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates if font custom colors are shown.</summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFonts">
      <MemberSignature Language="C#" Value="public bool AllowFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFonts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFonts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowFonts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFonts { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowFonts : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the constraint that allows font element tags to be added to the HTML.</summary>
        <value>When this flag is set to <b>false</b>, <b>&lt;font&gt;</b> element tags are not allowed in the HTML.</value>
        <remarks>
          <para>If you set this flag to <b>false</b>, &lt;<b>font</b>&gt; and &lt;<b>basefont</b>&gt; tags are removed from the HTML. Default is <b>true</b>. This property also determines whether the editing user interface (UI) enables these operations.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFontSizesMenu">
      <MemberSignature Language="C#" Value="public bool AllowFontSizesMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFontSizesMenu" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontSizesMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowFontSizesMenu As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFontSizesMenu { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowFontSizesMenu : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontSizesMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates if a font size menu is enabled.</summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFontsMenu">
      <MemberSignature Language="C#" Value="public bool AllowFontsMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFontsMenu" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontsMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowFontsMenu As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFontsMenu { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowFontsMenu : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontsMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates if a fonts menu is enabled.</summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFontStandardColors">
      <MemberSignature Language="C#" Value="public bool AllowFontStandardColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFontStandardColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontStandardColors" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowFontStandardColors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFontStandardColors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowFontStandardColors : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontStandardColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates if font standard colors are shown.</summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFontStandardSizes">
      <MemberSignature Language="C#" Value="public bool AllowFontStandardSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFontStandardSizes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontStandardSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowFontStandardSizes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFontStandardSizes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowFontStandardSizes : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontStandardSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates if font standard sizes are enabled.</summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFontThemeColors">
      <MemberSignature Language="C#" Value="public bool AllowFontThemeColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFontThemeColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontThemeColors" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowFontThemeColors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFontThemeColors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowFontThemeColors : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowFontThemeColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates if font theme colors are shown. </summary>
        <value>Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowHeadings">
      <MemberSignature Language="C#" Value="public bool AllowHeadings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowHeadings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowHeadings" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowHeadings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowHeadings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowHeadings : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowHeadings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the constraint that allows heading tags to be added to the HTML.</summary>
        <value>When this flag is set to <b>false</b>, heading tags are not allowed in the HTML.</value>
        <remarks>
          <para>If this flag is set to <b>false</b>, &lt;<b>DIR</b>&gt;, &lt;<b>H1</b>&gt;, &lt;<b>H2</b>&gt;, &lt;<b>H3</b>&gt;, &lt;<b>H4</b>&gt;, &lt;<b>H5</b>&gt;, &lt;<b>H6</b>&gt;, &lt;<b>MARQUEE</b>&gt;, &lt;<b>ADDRESS</b>&gt; and &lt;<b>CENTER</b>&gt; tags are removed from the HTML. Default is <b>true</b>. This property also determines whether the editing user interface (UI) enables these operations.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowHtmlSourceEditing">
      <MemberSignature Language="C#" Value="public bool AllowHtmlSourceEditing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowHtmlSourceEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowHtmlSourceEditing" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowHtmlSourceEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowHtmlSourceEditing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowHtmlSourceEditing : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowHtmlSourceEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether you can switch the <b>HtmlEditor</b> object into a mode where the HTML can be edited directly.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowHyperlinks">
      <MemberSignature Language="C#" Value="public bool AllowHyperlinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowHyperlinks { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowHyperlinks : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowHyperlinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the constraint that allows hyperlinks to be added to the HTML.</summary>
        <value>When this flag is set to <b>false</b>, hyperlinks are not allowed in the HTML.</value>
        <remarks>
          <para>If this flag is set to <b>false</b>, &lt;<b>A</b>&gt;, &lt;<b>AREA</b>&gt; and &lt;<b>MAP</b>&gt; tags are removed from the HTML. Default is <b>true</b>. This property also determines whether the editing user interface (UI) enables these operations.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowImageFormatting">
      <MemberSignature Language="C#" Value="public bool AllowImageFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowImageFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowImageFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowImageFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowImageFormatting { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowImageFormatting : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowImageFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets image formatting items.</summary>
        <value>Specifies whether the menus are enabled.Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowImagePositioning">
      <MemberSignature Language="C#" Value="public bool AllowImagePositioning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowImagePositioning" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowImagePositioning" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowImagePositioning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowImagePositioning { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowImagePositioning : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowImagePositioning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the position of the image.</summary>
        <value>Specifies whether the menus are enabled.Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowImages">
      <MemberSignature Language="C#" Value="public bool AllowImages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowImages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowImages" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowImages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowImages { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowImages : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowImages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the constraint that allows image tags to be added to the HTML.</summary>
        <value>When this flag is set to <b>false</b>, image tags are not allowed in the HTML.</value>
        <remarks>
          <para>If this flag is set to <b>false</b>, &lt;<b>IMG</b>&gt; and &lt;<b>BGSOUND</b>&gt; tags are removed from the HTML. Default is <b>true</b>. This property also determines whether the editing user interface (UI) enables these operations.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowImageStyles">
      <MemberSignature Language="C#" Value="public bool AllowImageStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowImageStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowImageStyles" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowImageStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowImageStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowImageStyles : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowImageStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the Table Styles menu is enabled.</summary>
        <value>Specifies whether the menu is enabled.Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsert">
      <MemberSignature Language="C#" Value="public bool AllowInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowInsert : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether Insert options are shown.</summary>
        <value>Specifies whether the insertion of items is enabled.Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowLists">
      <MemberSignature Language="C#" Value="public bool AllowLists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowLists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowLists" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowLists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowLists : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the constraint that allows list tags to be added to the HTML.</summary>
        <value>When this flag is set to <b>false</b>, list tags are not allowed in the HTML.</value>
        <remarks>
          <para>If this flag is set to <b>false</b>, &lt;<b>LI</b>&gt;, &lt;<b>OL</b>&gt;, &lt;UL&gt;, &lt;<b>DD</b>&gt;, &lt;<b>DL</b>&gt;, &lt;<b>DT</b>&gt; and &lt;<b>MENU</b>&gt; tags will removed from the HTML. Default is <b>true</b>. This also determines whether the editing user interface (UI) enables these operations.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowParagraphFormatting">
      <MemberSignature Language="C#" Value="public bool AllowParagraphFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowParagraphFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowParagraphFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowParagraphFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowParagraphFormatting { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowParagraphFormatting : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowParagraphFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether paragraph formatting items are enabled. </summary>
        <value>Specifies whether menu items are enabled.Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReusableContent">
      <MemberSignature Language="C#" Value="public bool AllowReusableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReusableContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowReusableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowReusableContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowReusableContent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReusableContent : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowReusableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the flag that enables the reusable content picker button when editing this field.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowStandardFonts">
      <MemberSignature Language="C#" Value="public bool AllowStandardFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowStandardFonts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowStandardFonts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowStandardFonts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowStandardFonts { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowStandardFonts : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowStandardFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether standard fonts are enabled.</summary>
        <value>Specifies whether the menus are enabled.Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowStyles">
      <MemberSignature Language="C#" Value="public bool AllowStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowStyles" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowStyles : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the style menu is enabled.</summary>
        <value>Specifies whether the style menu is enabled.Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowTables">
      <MemberSignature Language="C#" Value="public bool AllowTables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowTables" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTables { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTables : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the constraint that allows table handling tags to be added to the HTML.</summary>
        <value>When this flag is set to <b>false</b>, table handling tags are not allowed in the HTML.</value>
        <remarks>
          <para>If this flag is set to <b>false</b>, &lt;<b>CAPTION</b>&gt;, &lt;<b>COL</b>&gt;, &lt;<b>COLGROUP</b>&gt;, &lt;<b>TABLE</b>&gt;, &lt;<b>TBODY</b>&gt;, &lt;<b>TD</b>&gt;, &lt;<b>TFOOT</b>&gt;, &lt;<b>TH</b>&gt;, &lt;<b>THEAD</b>&gt;, &lt;<b>TR</b>&gt;, &lt;<b>FIELDSET</b>&gt;, &lt;<b>LEGEND</b>&gt; and &lt;<b>HR</b>&gt; tags will removed from the HTML. Default is <b>true</b>. This property also determines whether the editing user interface (UI) enables these operations.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowTableStyles">
      <MemberSignature Language="C#" Value="public bool AllowTableStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTableStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowTableStyles" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTableStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTableStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTableStyles : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowTableStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the Table Styles menu is enabled.</summary>
        <value>Specifies whether the menu is enabled.Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowTextMarkup">
      <MemberSignature Language="C#" Value="public bool AllowTextMarkup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTextMarkup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowTextMarkup" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTextMarkup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTextMarkup { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTextMarkup : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowTextMarkup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the constraint that allows explicit text markup tags, such as bold and italic, to be added to the HTML.</summary>
        <value>When this flag is set to <b>false</b>, explicit text markup tags, such as bold and italic, are not allowed in the HTML.</value>
        <remarks>
          <para>If this flag is set to <b>false</b>, &lt;<b>B</b>&gt;, &lt;<b>EM</b>&gt;, &lt;<b>I</b>&gt;, &lt;<b>STRONG</b>&gt;, &lt;<b>S</b>&gt;, &lt;<b>STRIKE</b>&gt;, &lt;<b>TT</b>&gt;, &lt;<b>ABBR</b>&gt;, &lt;<b>ACRONYM</b>&gt;, &lt;<b>CITE</b>&gt;, &lt;<b>CODE</b>&gt;, &lt;<b>DEL</b>&gt;, &lt;<b>DFN</b>&gt;, &lt;<b>INS</b>&gt;, &lt;<b>SAMP</b>&gt;, &lt;<b>BDO</b>&gt;, &lt;<b>RT</b>&gt;, &lt;<b>RUBY</b>&gt;, &lt;<b>U</b>&gt;, &lt;<b>BIG</b>&gt;, &lt;<b>SMALL</b>&gt;, &lt;<b>SUB</b>&gt;, &lt;<b>SUP</b>&gt;, &lt;<b>PRE</b>&gt;, &lt;<b>PLAINTEXT</b>&gt;, &lt;<b>XMP</b>&gt;, &lt;<b>Q</b>&gt;, &lt;<b>LISTING</b>&gt;, &lt;<b>BLOCKQUOTE</b>&gt;, &lt;<b>NOBR</b>&gt; and &lt;<b>WBR</b>&gt; tags will removed from the HTML. Default is <b>true</b>. This property also determines whether the editing user interface (UI) enables these operations.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowThemeFonts">
      <MemberSignature Language="C#" Value="public bool AllowThemeFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowThemeFonts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowThemeFonts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowThemeFonts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowThemeFonts { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowThemeFonts : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.AllowThemeFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether theme fonts are enabled.</summary>
        <value>Specifies whether the menus are enabled.Returns <see cref="T:System.Boolean" />.</value>
        <remarks>
          <para>This restriction only disables the menus and does not force the content to adhere to this restriction.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildHtmlEditor">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.SharePoint.Publishing.WebControls.HtmlEditor ChildHtmlEditor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.Publishing.WebControls.HtmlEditor ChildHtmlEditor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.ChildHtmlEditor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ChildHtmlEditor As HtmlEditor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::SharePoint::Publishing::WebControls::HtmlEditor ^ ChildHtmlEditor { Microsoft::SharePoint::Publishing::WebControls::HtmlEditor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildHtmlEditor : Microsoft.SharePoint.Publishing.WebControls.HtmlEditor" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.ChildHtmlEditor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Publishing.WebControls.HtmlEditor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <b>HtmlEditor</b> control used in <b>ControlMode.Edit</b> that allows users to edit the content of this control.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAssetImageLocation">
      <MemberSignature Language="C#" Value="public string DefaultAssetImageLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAssetImageLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.DefaultAssetImageLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultAssetImageLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultAssetImageLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAssetImageLocation : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.DefaultAssetImageLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URL to a location in this site collection that will be added to the top of the Look In section of the Asset Picker dialog box when selecting an image source URL. </summary>
        <value>Defaults to <b>String.Empty</b>.</value>
        <remarks>
          <para>This URL should begin with either "~SiteCollection/" or "~Site/" followed by the relative URL to the desired Microsoft SharePoint Foundation location. If this URL refers to a valid SharePoint Foundation location and one to which the authoring user has access, the URL is displayed in the Look In section on the left side of the Asset Picker dialog box when it is launched to select an image source URL.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTemplateName">
      <MemberSignature Language="C#" Value="protected override string DefaultTemplateName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultTemplateName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.DefaultTemplateName" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultTemplateName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ DefaultTemplateName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTemplateName : string" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.DefaultTemplateName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default template name for this control.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableBasicFormattingButtons">
      <MemberSignature Language="C#" Value="public bool DisableBasicFormattingButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableBasicFormattingButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.DisableBasicFormattingButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableBasicFormattingButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableBasicFormattingButtons { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableBasicFormattingButtons : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.DisableBasicFormattingButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether basic formatting buttons are enabled or disabled.</summary>
        <value>Set the property to <b>true</b> if you do not want to make basic formatting buttons available.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCustomStyles">
      <MemberSignature Language="C#" Value="public bool DisableCustomStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableCustomStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.DisableCustomStyles" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableCustomStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableCustomStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableCustomStyles : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.DisableCustomStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether custom styles are enabled or disabled.</summary>
        <value>Set this property to <b>true</b> if you do not want custom styles.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditorBackgroundColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color EditorBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color EditorBackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.EditorBackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property EditorBackgroundColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color EditorBackgroundColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.EditorBackgroundColor : System.Drawing.Color with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.EditorBackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the HTML Editor control's editing mode background color.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableExtensions">
      <MemberSignature Language="C#" Value="public bool EnableExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.EnableExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableExtensions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableExtensions : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.EnableExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether extensions are enabled for this <b>RichHtmlField</b> object.  </summary>
        <value>If set to <b>false</b>, this property disables user-defined extensions to the HTML Editor, such as extra toolbar buttons and callbacks for the OK button.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedEditControlClassType">
      <MemberSignature Language="C#" Value="protected override Type ExpectedEditControlClassType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpectedEditControlClassType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.ExpectedEditControlClassType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ExpectedEditControlClassType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ExpectedEditControlClassType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpectedEditControlClassType : Type" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.ExpectedEditControlClassType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the expected class of the child control used in Edit mode with this field control.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedSPFieldClassType">
      <MemberSignature Language="C#" Value="protected override Type ExpectedSPFieldClassType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpectedSPFieldClassType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.ExpectedSPFieldClassType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ExpectedSPFieldClassType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ExpectedSPFieldClassType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpectedSPFieldClassType : Type" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.ExpectedSPFieldClassType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the expected derived class of the <b>SPField</b> object in the <b>SPListItem</b> object for the <b>FieldName</b> object.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInitialFocus">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; HasInitialFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; HasInitialFocus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.HasInitialFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property HasInitialFocus As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; HasInitialFocus { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.HasInitialFocus : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.HasInitialFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether this rich text field should have the initial focus.</summary>
        <value>Specifies that this rich text field should have the initial focus.Returns <see cref="T:System.Nullable`1" />.</value>
        <remarks>
          <para>When editing a page, the initial focus should be placed on this HTML editor. The first rich text field that is found in the order specified in the page layout that has this value set to <b>true</b> will get the initial focus when placing the page in edit mode. If no Rich Text field has this value set to <b>true</b>, then the first rich text field on the page will have the focus.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HiddenInput">
      <MemberSignature Language="C#" Value="public override System.Web.UI.HtmlControls.HtmlInputHidden HiddenInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlInputHidden HiddenInput" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.HiddenInput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HiddenInput As HtmlInputHidden" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::HtmlControls::HtmlInputHidden ^ HiddenInput { System::Web::UI::HtmlControls::HtmlInputHidden ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HiddenInput : System.Web.UI.HtmlControls.HtmlInputHidden" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.HiddenInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlInputHidden</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the hidden input form field where the field stores its data.</summary>
        <value>Returns <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Html">
      <MemberSignature Language="C#" Value="public virtual string Html { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Html" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.Html" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Html As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Html { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Html : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.Html" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current HTML value in the edit control of the field control.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This property is equivalent to the <b>Value</b> property used by the field control framework to get and set the value between the control and the <b>ItemFieldValue</b> interface.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemFieldValue">
      <MemberSignature Language="C#" Value="public override object ItemFieldValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ItemFieldValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.ItemFieldValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ItemFieldValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ ItemFieldValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemFieldValue : obj with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.ItemFieldValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value that the field will have after the next post back to the page.</summary>
        <value>The HTML contained in the field.</value>
        <remarks>
          <para>This override intercepts all reads and writes to the <see cref="T:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField" /> object, allowing the managed navigation logic to replace URLs.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumEditHeight">
      <MemberSignature Language="C#" Value="public string MinimumEditHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinimumEditHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.MinimumEditHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumEditHeight As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinimumEditHeight { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumEditHeight : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.MinimumEditHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the minimum height that the HTML editor should have when in edit mode.</summary>
        <value>Specifies the CSS minimum height for this field during edit mode.Returns <see cref="T:System.String" />.</value>
        <remarks>
          <para>Must include a valid CSS unit.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="richHtmlField.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <b>System.EventArgs</b> object that contains information about the event.</param>
        <summary>Overridden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="richHtmlField.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <b>System.EventArgs</b> object that contains information about the event.</param>
        <summary>Overridden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="richHtmlField.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <b>System.EventArgs</b> object that contains information about the event.</param>
        <summary>Overridden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateEditControlFields">
      <MemberSignature Language="C#" Value="protected override void PopulateEditControlFields (object editControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PopulateEditControlFields(object editControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.PopulateEditControlFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PopulateEditControlFields (editControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PopulateEditControlFields(System::Object ^ editControl);" />
      <MemberSignature Language="F#" Value="override this.PopulateEditControlFields : obj -&gt; unit" Usage="richHtmlField.PopulateEditControlFields editControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="editControl">The <b>EditControl</b> object to be populated.</param>
        <summary>Populates the properties of the child edit control based on properties of this control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopupEditorMode">
      <MemberSignature Language="C#" Value="public bool PopupEditorMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopupEditorMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.PopupEditorMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PopupEditorMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopupEditorMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopupEditorMode : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.PopupEditorMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a flag that determines whether to use the editor inline or open it in a pop-up window.</summary>
        <value>A flag that determines whether to use the editor inline or open it in a pop-up window.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixStyleSheet">
      <MemberSignature Language="C#" Value="public string PrefixStyleSheet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrefixStyleSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.PrefixStyleSheet" />
      <MemberSignature Language="VB.NET" Value="Public Property PrefixStyleSheet As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrefixStyleSheet { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrefixStyleSheet : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.PrefixStyleSheet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.String), "ms-rte")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <b>HtmlEditor</b> style sheet prefix.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewValueSize">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.SPPreviewValueSize PreviewValueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SharePoint.SPPreviewValueSize PreviewValueSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.PreviewValueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PreviewValueSize As SPPreviewValueSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::SPPreviewValueSize PreviewValueSize { Microsoft::SharePoint::SPPreviewValueSize get(); void set(Microsoft::SharePoint::SPPreviewValueSize value); };" />
      <MemberSignature Language="F#" Value="member this.PreviewValueSize : Microsoft.SharePoint.SPPreviewValueSize with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.PreviewValueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.SPPreviewValueSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the size of the preview value that is used for this field.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This value is one of the enumerations (Small, Medium, Large, or ExtraLarge) that affects how the field control appears in design previews.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="richHtmlField.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderFieldForDisplay">
      <MemberSignature Language="C#" Value="protected override void RenderFieldForDisplay (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderFieldForDisplay(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.RenderFieldForDisplay(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderFieldForDisplay (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderFieldForDisplay(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.RenderFieldForDisplay : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="richHtmlField.RenderFieldForDisplay output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">An <b>HtmlTextWriter</b> object to receive and render the output.</param>
        <summary>Override to allow render pattern to show a short message and to allow the field control to show the full HTML value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleSheet">
      <MemberSignature Language="C#" Value="public string StyleSheet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.StyleSheet" />
      <MemberSignature Language="VB.NET" Value="Public Property StyleSheet As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StyleSheet { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StyleSheet : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.StyleSheet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the prefix for the HTML style sheet.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current HTML field text.</summary>
        <value>The HTML content of this field.Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFieldValueInItem">
      <MemberSignature Language="C#" Value="public override void UpdateFieldValueInItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateFieldValueInItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.UpdateFieldValueInItem" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateFieldValueInItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateFieldValueInItem();" />
      <MemberSignature Language="F#" Value="override this.UpdateFieldValueInItem : unit -&gt; unit" Usage="richHtmlField.UpdateFieldValueInItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Overridden to handle additional tracking properties.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseInlineStyle">
      <MemberSignature Language="C#" Value="public bool UseInlineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseInlineStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.UseInlineStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property UseInlineStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseInlineStyle { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseInlineStyle : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.UseInlineStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether to use inline styles instead of classes.</summary>
        <value>Specifies whether the rich text field should apply inline styles instead of classes.Returns <see cref="T:System.Boolean" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="V4RTEClientId">
      <MemberSignature Language="C#" Value="public override string V4RTEClientId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string V4RTEClientId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.V4RTEClientId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property V4RTEClientId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ V4RTEClientId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.V4RTEClientId : string" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.V4RTEClientId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the client ID of the rich text editor area.</summary>
        <value>Returns the client ID of the rich text editor area.Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate();" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="richHtmlField.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Validates the content posted to this control.</summary>
        <remarks>
          <para>This method uses an <b>HtmlValidationContext.ValidateHtml</b> method to ensure that the content is safe and to validate that the content meets any constraints specified by the various constraint properties of this control that start with the word "Allow." It also ensures that there is a value if the <b>Field.Required</b> schema property is set to <b>true</b>. </para>
          <para>If any "Allow" constraints, violations, or "Required" violations occur, then it sets <b>IsValid</b> to <b>false</b> and its <b>ErrorMessage</b> property to a description of the validation problem.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.RichHtmlField.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Current string value of the HTML in this field control in Edit mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This field control framework property is used in the <b>SPControlMode.Edit</b> parameter to get and set the value between the edit controls and the <b>ItemFieldValue</b> property in the <b>SPListItem</b> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>