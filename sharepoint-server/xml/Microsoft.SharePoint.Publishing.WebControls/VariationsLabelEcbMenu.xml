<Type Name="VariationsLabelEcbMenu" FullName="Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu">
  <TypeSignature Language="C#" Value="public sealed class VariationsLabelEcbMenu : System.Web.UI.WebControls.HierarchicalDataBoundControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VariationsLabelEcbMenu extends System.Web.UI.WebControls.HierarchicalDataBoundControl" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VariationsLabelEcbMenu&#xA;Inherits HierarchicalDataBoundControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class VariationsLabelEcbMenu sealed : System::Web::UI::WebControls::HierarchicalDataBoundControl" />
  <TypeSignature Language="F#" Value="type VariationsLabelEcbMenu = class&#xA;    inherit HierarchicalDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(Microsoft.SharePoint.WebControls.HierarchicalDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("Use of this control is not recommended - use the Variations Client Side OM instead", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class or member is deprecated. When you upgrade or write new applications that use this class or member, use the new class or member instead. A sample UI control that shows how to connect to the control to display a drop-down menu of the Variation peer links to the current Page.</summary>
    <remarks>
      <para>You can modify the presentation of user interface (UI) links by substituting a different control and connecting that to the <see cref="T:Microsoft.SharePoint.Publishing.WebControls.VariationDataSource" />.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VariationsLabelEcbMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VariationsLabelEcbMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Constructor for the Label Menu control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="abstract member CreateChildControls : unit -&gt; unit&#xA;override this.CreateChildControls : unit -&gt; unit" Usage="variationsLabelEcbMenu.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create child controls.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayText">
      <MemberSignature Language="C#" Value="public string DisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.DisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayText : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.DisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Property that specifies the title that the menu displays.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverCellActiveCssClass">
      <MemberSignature Language="C#" Value="public string HoverCellActiveCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HoverCellActiveCssClass" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.HoverCellActiveCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Property HoverCellActiveCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HoverCellActiveCssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HoverCellActiveCssClass : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.HoverCellActiveCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the CSS class for styling an active cell on mouse hover.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverCellInActiveCssClass">
      <MemberSignature Language="C#" Value="public string HoverCellInActiveCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HoverCellInActiveCssClass" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.HoverCellInActiveCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Property HoverCellInActiveCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HoverCellInActiveCssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HoverCellInActiveCssClass : string with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.HoverCellInActiveCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the CSS class for styling an inactive cell on mouse hover.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCallbackMode">
      <MemberSignature Language="C#" Value="public bool IsCallbackMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCallbackMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.IsCallbackMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCallbackMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCallbackMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsCallbackMode : bool with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.IsCallbackMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Boolean value that determines if the control should execute in ASP.NET Callback mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Callback mode performs better when the Web page is initially rendered, because no server-side processing has been performed to calculate and populate the Variation peer links. Only when the drop-down is clicked, a callback request is made to the server to retrieve the list. </para>
          <para>The trade off is that the control responds more slowly when it is clicked the first time because it needs to make the Callback request. </para>
          <list type="bullet">
            <item>
              <description>The advantage is that the request incurs no unnecessary processing if the control is never clicked. </description>
            </item>
            <item>
              <description>The opposite behavior is that the initial control rendering calculates the Variation peer links as part of the initial control rendering. Peforming this calculation during rendering takes more processing time, but the response time on the client side when the control is clicked is much faster.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuFormat">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.WebControls.MenuFormat MenuFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SharePoint.WebControls.MenuFormat MenuFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.MenuFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property MenuFormat As MenuFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::WebControls::MenuFormat MenuFormat { Microsoft::SharePoint::WebControls::MenuFormat get(); void set(Microsoft::SharePoint::WebControls::MenuFormat value); };" />
      <MemberSignature Language="F#" Value="member this.MenuFormat : Microsoft.SharePoint.WebControls.MenuFormat with get, set" Usage="Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.MenuFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.WebControls.MenuFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the menu format value for the VariationsLabelEcbMenu object.</summary>
        <value>A value of the SharePoint.WebControls.MenuFormat enumeration that describes the menu format.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBinding : EventArgs -&gt; unit&#xA;override this.OnDataBinding : EventArgs -&gt; unit" Usage="variationsLabelEcbMenu.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Event arguments.</param>
        <summary>Raises the <b>OnDataBinding(System.EventArgs)</b> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBound">
      <MemberSignature Language="C#" Value="protected override void OnDataBound (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBound(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.OnDataBound(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBound (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBound(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBound : EventArgs -&gt; unit&#xA;override this.OnDataBound : EventArgs -&gt; unit" Usage="variationsLabelEcbMenu.OnDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Event arguments.</param>
        <summary>Raises the <b>OnDataBound(System.EventArgs)</b> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="variationsLabelEcbMenu.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Event arguments.</param>
        <summary>Raises the <b>OnInit(System.EventArgs)</b> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="variationsLabelEcbMenu.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Event arguments.</param>
        <summary>Raises the <b>OnLoad(System.EventArgs)</b> method.</summary>
        <remarks>
          <para>Initialize by testing if this control should be visible or not and registers the script that binds the label data to the contextual menu. Default visibility of the menu is set to <b>false</b>, unless this non-a null reference (Nothing in Visual Basic) area has a non-a null reference (Nothing in Visual Basic)<b>VariationGroupId</b>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.WebControls.VariationsLabelEcbMenu.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="abstract member PerformDataBinding : unit -&gt; unit&#xA;override this.PerformDataBinding : unit -&gt; unit" Usage="variationsLabelEcbMenu.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Binds data.</summary>
        <remarks>
          <para>Variations uses this method instead of the <b>DataBind</b> method because the code derives from the <b>HierarchicalDataBoundControl</b> class. Placing this control's data-binding logic in <b>PerformDataBinding</b> keeps the <b>DataBinding</b> and <b>DataBound</b> events from being raised in the wrong order. This is the Microsoft ASP.NET 2.0 approach for Hierarchical data sources.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>