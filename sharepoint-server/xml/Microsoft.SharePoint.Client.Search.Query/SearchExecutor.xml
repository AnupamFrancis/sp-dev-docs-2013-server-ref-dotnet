<Type Name="SearchExecutor" FullName="Microsoft.SharePoint.Client.Search.Query.SearchExecutor">
  <TypeSignature Language="C#" Value="public sealed class SearchExecutor : Microsoft.SharePoint.Client.ClientObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SearchExecutor extends Microsoft.SharePoint.Client.ClientObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.Client.Search.Query.SearchExecutor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SearchExecutor&#xA;Inherits ClientObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchExecutor sealed : Microsoft::SharePoint::Client::ClientObject" />
  <TypeSignature Language="F#" Value="type SearchExecutor = class&#xA;    inherit ClientObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
    <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Client.ClientObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Client.ScriptType("Microsoft.SharePoint.Client.Search.Query.SearchExecutor", ServerTypeId="{8d2ac302-db2f-46fe-9015-872b35f15098}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Executes queries against a search server.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchExecutor (Microsoft.SharePoint.Client.ClientRuntimeContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.Client.ClientRuntimeContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Client.Search.Query.SearchExecutor.#ctor(Microsoft.SharePoint.Client.ClientRuntimeContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As ClientRuntimeContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchExecutor(Microsoft::SharePoint::Client::ClientRuntimeContext ^ context);" />
      <MemberSignature Language="F#" Value="new Microsoft.SharePoint.Client.Search.Query.SearchExecutor : Microsoft.SharePoint.Client.ClientRuntimeContext -&gt; Microsoft.SharePoint.Client.Search.Query.SearchExecutor" Usage="new Microsoft.SharePoint.Client.Search.Query.SearchExecutor context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
        <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.Client.ClientRuntimeContext" />
      </Parameters>
      <Docs>
        <param name="context">Represents the context for server objects and operations.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.SharePoint.Client.Search.Query.SearchExecutor" /> class using the given client runtime context.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchExecutor (Microsoft.SharePoint.Client.ClientRuntimeContext context, Microsoft.SharePoint.Client.ObjectPath objectPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.Client.ClientRuntimeContext context, class Microsoft.SharePoint.Client.ObjectPath objectPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Client.Search.Query.SearchExecutor.#ctor(Microsoft.SharePoint.Client.ClientRuntimeContext,Microsoft.SharePoint.Client.ObjectPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchExecutor(Microsoft::SharePoint::Client::ClientRuntimeContext ^ context, Microsoft::SharePoint::Client::ObjectPath ^ objectPath);" />
      <MemberSignature Language="F#" Value="new Microsoft.SharePoint.Client.Search.Query.SearchExecutor : Microsoft.SharePoint.Client.ClientRuntimeContext * Microsoft.SharePoint.Client.ObjectPath -&gt; Microsoft.SharePoint.Client.Search.Query.SearchExecutor" Usage="new Microsoft.SharePoint.Client.Search.Query.SearchExecutor (context, objectPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
        <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.Client.ClientRuntimeContext" />
        <Parameter Name="objectPath" Type="Microsoft.SharePoint.Client.ObjectPath" />
      </Parameters>
      <Docs>
        <param name="context">Represents the client runtime context for server objects and operations.</param>
        <param name="objectPath">Tracks how a client object is created in the <see cref="T:Microsoft.SharePoint.Client.ClientRuntimeContext" /> class, so that the object can be recreated on the server.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.SharePoint.Client.Search.Query.SearchExecutor" /> class using the given client runtime context and object path.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQueries">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Client.ClientResult&lt;System.Collections.Generic.IDictionary&lt;string,Microsoft.SharePoint.Client.Search.Query.ResultTableCollection&gt;&gt; ExecuteQueries (string[] queryIds, Microsoft.SharePoint.Client.Search.Query.Query[] queries, bool handleExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SharePoint.Client.ClientResult`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.SharePoint.Client.Search.Query.ResultTableCollection&gt;&gt; ExecuteQueries(string[] queryIds, class Microsoft.SharePoint.Client.Search.Query.Query[] queries, bool handleExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Client.Search.Query.SearchExecutor.ExecuteQueries(System.String[],Microsoft.SharePoint.Client.Search.Query.Query[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQueries (queryIds As String(), queries As Query(), handleExceptions As Boolean) As ClientResult(Of IDictionary(Of String, ResultTableCollection))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::SharePoint::Client::ClientResult&lt;System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::SharePoint::Client::Search::Query::ResultTableCollection ^&gt; ^&gt; ^ ExecuteQueries(cli::array &lt;System::String ^&gt; ^ queryIds, cli::array &lt;Microsoft::SharePoint::Client::Search::Query::Query ^&gt; ^ queries, bool handleExceptions);" />
      <MemberSignature Language="F#" Value="member this.ExecuteQueries : string[] * Microsoft.SharePoint.Client.Search.Query.Query[] * bool -&gt; Microsoft.SharePoint.Client.ClientResult&lt;System.Collections.Generic.IDictionary&lt;string, Microsoft.SharePoint.Client.Search.Query.ResultTableCollection&gt;&gt;" Usage="searchExecutor.ExecuteQueries (queryIds, queries, handleExceptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
        <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Client.ClientResult&lt;System.Collections.Generic.IDictionary&lt;System.String,Microsoft.SharePoint.Client.Search.Query.ResultTableCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryIds" Type="System.String[]" />
        <Parameter Name="queries" Type="Microsoft.SharePoint.Client.Search.Query.Query[]" />
        <Parameter Name="handleExceptions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="queryIds">An array with the queries to execute.</param>
        <param name="queries">An array with the identifiers for the queries. This array must be of the same length as <paramref name="queries" /> and  its members must be non-null and unique among themselves. The string at position i is the ID for the ith query in the <paramref name="queries" /> array.</param>
        <param name="handleExceptions">Specify if exceptions are handled.</param>
        <summary>Reserved for internal use. Use this method only through client-side object model. </summary>
        <returns>A <b>Dictionary&lt;Guid,ResultTableCollection&gt;</b>. Each item represents results for one of the search queries passed; its key is the corresponding query ID passed in <paramref name="queryIds" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Client.ClientResult&lt;Microsoft.SharePoint.Client.Search.Query.ResultTableCollection&gt; ExecuteQuery (Microsoft.SharePoint.Client.Search.Query.Query query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.SharePoint.Client.ClientResult`1&lt;class Microsoft.SharePoint.Client.Search.Query.ResultTableCollection&gt; ExecuteQuery(class Microsoft.SharePoint.Client.Search.Query.Query query) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Client.Search.Query.SearchExecutor.ExecuteQuery(Microsoft.SharePoint.Client.Search.Query.Query)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::SharePoint::Client::ClientResult&lt;Microsoft::SharePoint::Client::Search::Query::ResultTableCollection ^&gt; ^ ExecuteQuery(Microsoft::SharePoint::Client::Search::Query::Query ^ query);" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : Microsoft.SharePoint.Client.Search.Query.Query -&gt; Microsoft.SharePoint.Client.ClientResult&lt;Microsoft.SharePoint.Client.Search.Query.ResultTableCollection&gt;" Usage="searchExecutor.ExecuteQuery query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
        <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Client.ClientResult&lt;Microsoft.SharePoint.Client.Search.Query.ResultTableCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="Microsoft.SharePoint.Client.Search.Query.Query" />
      </Parameters>
      <Docs>
        <param name="query">The query to run.</param>
        <summary>Runs a query.</summary>
        <returns>The results of the query.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="query" /> parameter is 
    null
  .</exception>
      </Docs>
    </Member>
    <Member MemberName="ExportPopularQueries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.SharePoint.Client.Search.Query.PopularQuery&gt; ExportPopularQueries (Microsoft.SharePoint.Client.Web web, Guid sourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.SharePoint.Client.Search.Query.PopularQuery&gt; ExportPopularQueries(class Microsoft.SharePoint.Client.Web web, valuetype System.Guid sourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Client.Search.Query.SearchExecutor.ExportPopularQueries(Microsoft.SharePoint.Client.Web,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::SharePoint::Client::Search::Query::PopularQuery ^&gt; ^ ExportPopularQueries(Microsoft::SharePoint::Client::Web ^ web, Guid sourceId);" />
      <MemberSignature Language="F#" Value="member this.ExportPopularQueries : Microsoft.SharePoint.Client.Web * Guid -&gt; System.Collections.Generic.IList&lt;Microsoft.SharePoint.Client.Search.Query.PopularQuery&gt;" Usage="searchExecutor.ExportPopularQueries (web, sourceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
        <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.SharePoint.Client.Search.Query.PopularQuery&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="web" Type="Microsoft.SharePoint.Client.Web" />
        <Parameter Name="sourceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="web">The website to query.</param>
        <param name="sourceId">The ID of the identified source of the query.</param>
        <summary>Export the popular queries. </summary>
        <returns>A list of the popular queries based on the defined parameters.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordPageClick">
      <MemberSignature Language="C#" Value="public void RecordPageClick (string pageInfo, string clickType, int blockType, string clickedResultId, int subResultIndex, string immediacySourceId, string immediacyQueryString, string immediacyTitle, string immediacyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RecordPageClick(string pageInfo, string clickType, int32 blockType, string clickedResultId, int32 subResultIndex, string immediacySourceId, string immediacyQueryString, string immediacyTitle, string immediacyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Client.Search.Query.SearchExecutor.RecordPageClick(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordPageClick (pageInfo As String, clickType As String, blockType As Integer, clickedResultId As String, subResultIndex As Integer, immediacySourceId As String, immediacyQueryString As String, immediacyTitle As String, immediacyUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecordPageClick(System::String ^ pageInfo, System::String ^ clickType, int blockType, System::String ^ clickedResultId, int subResultIndex, System::String ^ immediacySourceId, System::String ^ immediacyQueryString, System::String ^ immediacyTitle, System::String ^ immediacyUrl);" />
      <MemberSignature Language="F#" Value="member this.RecordPageClick : string * string * int * string * int * string * string * string * string -&gt; unit" Usage="searchExecutor.RecordPageClick (pageInfo, clickType, blockType, clickedResultId, subResultIndex, immediacySourceId, immediacyQueryString, immediacyTitle, immediacyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Client.Search</AssemblyName>
        <AssemblyVersion>16.1.3912.1204</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageInfo" Type="System.String" />
        <Parameter Name="clickType" Type="System.String" />
        <Parameter Name="blockType" Type="System.Int32" />
        <Parameter Name="clickedResultId" Type="System.String" />
        <Parameter Name="subResultIndex" Type="System.Int32" />
        <Parameter Name="immediacySourceId" Type="System.String" />
        <Parameter Name="immediacyQueryString" Type="System.String" />
        <Parameter Name="immediacyTitle" Type="System.String" />
        <Parameter Name="immediacyUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pageInfo">To be added.</param>
        <param name="clickType">To be added.</param>
        <param name="blockType">To be added.</param>
        <param name="clickedResultId">To be added.</param>
        <param name="subResultIndex">To be added.</param>
        <param name="immediacySourceId">To be added.</param>
        <param name="immediacyQueryString">To be added.</param>
        <param name="immediacyTitle">To be added.</param>
        <param name="immediacyUrl">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>