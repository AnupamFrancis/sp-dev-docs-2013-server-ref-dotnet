<Type Name="ConversionJobStatus" FullName="Microsoft.Office.Word.Server.Conversions.ConversionJobStatus">
  <TypeSignature Language="C#" Value="public class ConversionJobStatus : Microsoft.Office.ConversionServices.Conversions.ConversionJobStatus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConversionJobStatus extends Microsoft.Office.ConversionServices.Conversions.ConversionJobStatus" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus" />
  <TypeSignature Language="VB.NET" Value="Public Class ConversionJobStatus&#xA;Inherits ConversionJobStatus" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConversionJobStatus : Microsoft::Office::ConversionServices::Conversions::ConversionJobStatus" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Office.ConversionServices.Conversions.ConversionJobStatus</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides status information for all conversion items that are in a single conversion job.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConversionJobStatus (Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy serviceApplicationProxy, Guid jobId, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy serviceApplicationProxy, valuetype System.Guid jobId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.#ctor(Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy,System.Guid,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceApplicationProxy As WordServiceApplicationProxy, jobId As Guid, subscriptionId As Nullable(Of Guid))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConversionJobStatus(Microsoft::Office::Word::Server::Service::WordServiceApplicationProxy ^ serviceApplicationProxy, Guid jobId, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceApplicationProxy" Type="Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" />
        <Parameter Name="jobId" Type="System.Guid" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxy">A <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that specifies the Word Automation Services application proxy instance that serviced the <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> specified by <paramref name="jobId" />.</param>
        <param name="jobId">A <see cref="T:System.Guid" /> structure that specifies the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of the conversion job whose status you want to retrieve.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus" /> class based on the specified <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> and <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> objects, and the partition specified by <paramref name="subscriptionId" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConversionJobStatus (Guid id, Guid jobId, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id, valuetype System.Guid jobId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.#ctor(System.Guid,System.Guid,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As Guid, jobId As Guid, subscriptionId As Nullable(Of Guid))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConversionJobStatus(Guid id, Guid jobId, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="jobId" Type="System.Guid" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="T:System.Guid" /> structure that specifies the <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that serviced the <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object specified by <paramref name="jobId" />.</param>
        <param name="jobId">A <see cref="T:System.Guid" /> structure that specifies the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of the conversion job whose status you want to retrieve.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus" /> class based on the <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object specified by <paramref name="id" />, the <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object specified by <paramref name="jobId" />, and the partition specified by <paramref name="subscriptionId" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConversionJobStatus (string name, Guid jobId, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Guid jobId, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.#ctor(System.String,System.Guid,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, jobId As Guid, subscriptionId As Nullable(Of Guid))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConversionJobStatus(System::String ^ name, Guid jobId, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="jobId" Type="System.Guid" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The user-defined friendly name of the <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that serviced the <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object specified by <paramref name="jobId" />.</param>
        <param name="jobId">A <see cref="T:System.Guid" /> structure that specifies the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of the conversion job whose status you want to retrieve.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus" /> class based on the <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object specified by <paramref name="name" />, the <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object specified by <paramref name="jobId" />, and the partition specified by <paramref name="subscriptionId" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Canceled">
      <MemberSignature Language="C#" Value="public int Canceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Canceled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.Canceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Canceled As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Canceled { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of conversions under this conversion job whose status was set to Canceled by using the <see cref="M:Microsoft.Office.Word.Server.Conversions.ConversionJob.Cancel" /> method.</summary>
        <value>Returns <see cref="T:System.Int32" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the total number of items in this conversion job.</summary>
        <value>Returns <see cref="T:System.Int32" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Failed">
      <MemberSignature Language="C#" Value="public int Failed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Failed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.Failed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Failed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Failed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of all conversions under this conversion job whose status is set to Failed.</summary>
        <value>Returns <see cref="T:System.Int32" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllActiveJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs (Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy serviceApplicationProxy, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs(class Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy serviceApplicationProxy, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllActiveJobs(Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllActiveJobs (serviceApplicationProxy As WordServiceApplicationProxy, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllActiveJobs(Microsoft::Office::Word::Server::Service::WordServiceApplicationProxy ^ serviceApplicationProxy, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxy" Type="Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxy">A <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that specifies the Word Automation Services application proxy instance that serviced the conversion jobs returned by this method.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs with one or more active conversion items (that is, conversion items whose status is <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.InProgress" /> or <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.NotStarted" />).</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each GUID corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object with active conversion items.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllActiveJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs (Guid id, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs(valuetype System.Guid id, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllActiveJobs(System.Guid,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllActiveJobs (id As Guid, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllActiveJobs(Guid id, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="T:System.Guid" /> structure that specifies the <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> instance that serviced the conversion jobs returned by this method.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs with one or more active conversion items (that is, conversion items whose status is <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.InProgress" /> or <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.NotStarted" />).</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each GUID corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object with active conversion items.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllActiveJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs (string name, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs(string name, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllActiveJobs(System.String,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllActiveJobs (name As String, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllActiveJobs(System::String ^ name, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The user-defined friendly name of the <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that serviced the conversion jobs returned by this method.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs with one or more active conversion items (that is, conversion items whose status is <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.InProgress" /> or <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.NotStarted" />).</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each GUID corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object with active conversion items.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllActiveJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs (Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy serviceApplicationProxy, Microsoft.SharePoint.SPUserToken user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs(class Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy serviceApplicationProxy, class Microsoft.SharePoint.SPUserToken user, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllActiveJobs(Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy,Microsoft.SharePoint.SPUserToken,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllActiveJobs (serviceApplicationProxy As WordServiceApplicationProxy, user As SPUserToken, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllActiveJobs(Microsoft::Office::Word::Server::Service::WordServiceApplicationProxy ^ serviceApplicationProxy, Microsoft::SharePoint::SPUserToken ^ user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxy" Type="Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" />
        <Parameter Name="user" Type="Microsoft.SharePoint.SPUserToken" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxy">A <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that specifies the Word Automation Services application proxy instance that serviced the conversion jobs returned by this method.</param>
        <param name="user">An <see cref="T:Microsoft.SharePoint.SPUserToken" /> that specifies the user credentials presented to filter the list of all active conversion jobs. NoteIf the argument for <paramref name="user" /> is a null reference (Nothing in Visual Basic), then the list of conversion jobs is not filtered and all active conversion jobs in the specified partition are returned.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs that were started by the specified user and that have one or more active conversion items (that is, conversion items whose status is <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.InProgress" /> or <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.NotStarted" />).</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each <see cref="T:System.Guid" /> corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object with active conversion items.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllActiveJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs (Guid id, Microsoft.SharePoint.SPUserToken user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs(valuetype System.Guid id, class Microsoft.SharePoint.SPUserToken user, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllActiveJobs(System.Guid,Microsoft.SharePoint.SPUserToken,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllActiveJobs (id As Guid, user As SPUserToken, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllActiveJobs(Guid id, Microsoft::SharePoint::SPUserToken ^ user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="user" Type="Microsoft.SharePoint.SPUserToken" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="T:System.Guid" /> structure that specifies the <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> instance that serviced the conversion jobs returned by this method.</param>
        <param name="user">An <see cref="T:Microsoft.SharePoint.SPUserToken" /> that specifies the user credentials that were presented to filter the list of all active conversion jobs.NoteIf the argument for <paramref name="user" /> is a null reference (Nothing in Visual Basic), then the list of conversion jobs is not filtered and all active conversion jobs in the specified partition are returned.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs that were started by the specified user and that have one or more active conversion items (that is, conversion items whose status is <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.InProgress" /> or <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.NotStarted" />).</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each <see cref="T:System.Guid" /> corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> with active conversion items. </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllActiveJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs (string name, Microsoft.SharePoint.SPUserToken user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllActiveJobs(string name, class Microsoft.SharePoint.SPUserToken user, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllActiveJobs(System.String,Microsoft.SharePoint.SPUserToken,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllActiveJobs (name As String, user As SPUserToken, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllActiveJobs(System::String ^ name, Microsoft::SharePoint::SPUserToken ^ user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="user" Type="Microsoft.SharePoint.SPUserToken" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The user-defined friendly name of the <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that serviced the conversion jobs returned by this method.</param>
        <param name="user">An <see cref="T:Microsoft.SharePoint.SPUserToken" /> that specifies the user credentials that were presented to filter the list of all active conversion jobs.NoteIf the argument for <paramref name="user" /> is a null reference (Nothing in Visual Basic), then the list of conversion jobs is not filtered and all active conversion jobs in the specified partition are returned.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs that were started by the specified user and that have  one or more active conversion items (that is, conversion items whose status is <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.InProgress" /> or <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.NotStarted" />).</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each <see cref="T:System.Guid" /> corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object with active conversion items.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs (Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy serviceApplicationProxy, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs(class Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy serviceApplicationProxy, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllJobs(Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllJobs (serviceApplicationProxy As WordServiceApplicationProxy, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllJobs(Microsoft::Office::Word::Server::Service::WordServiceApplicationProxy ^ serviceApplicationProxy, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxy" Type="Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxy">A <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that specifies the Word Automation Services application proxy instance that serviced the conversion jobs returned by this method.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs, regardless of the status of those jobs.</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each <see cref="T:System.Guid" /> corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs (Guid id, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs(valuetype System.Guid id, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllJobs(System.Guid,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllJobs (id As Guid, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllJobs(Guid id, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="T:System.Guid" /> structure that specifies the Word Automation Services application proxy instance that serviced the conversion jobs returned by this method.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs, regardless of the status of those jobs.</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each <see cref="T:System.Guid" /> corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs (string name, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs(string name, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllJobs(System.String,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllJobs (name As String, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllJobs(System::String ^ name, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The user-defined friendly name of the <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that serviced the conversion jobs returned by this method.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs, regardless of the status of those jobs.</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each <see cref="T:System.Guid" /> corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs (Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy serviceApplicationProxy, Microsoft.SharePoint.SPUserToken user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs(class Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy serviceApplicationProxy, class Microsoft.SharePoint.SPUserToken user, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllJobs(Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy,Microsoft.SharePoint.SPUserToken,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllJobs (serviceApplicationProxy As WordServiceApplicationProxy, user As SPUserToken, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllJobs(Microsoft::Office::Word::Server::Service::WordServiceApplicationProxy ^ serviceApplicationProxy, Microsoft::SharePoint::SPUserToken ^ user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxy" Type="Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" />
        <Parameter Name="user" Type="Microsoft.SharePoint.SPUserToken" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxy">A <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that specifies the Word Automation Services application proxy instance that serviced the conversion jobs returned by this method.</param>
        <param name="user">An <see cref="T:Microsoft.SharePoint.SPUserToken" /> that specifies the user credentials that were presented to filter the list of all conversion jobs.NoteIf the argument for <paramref name="user" /> is a null reference (Nothing in Visual Basic), then the list of conversion jobs is not filtered and all conversion jobs in the specified partition are returned.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs that were started by the specified user, regardless of the status of those jobs.</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each <see cref="T:System.Guid" /> corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs (Guid id, Microsoft.SharePoint.SPUserToken user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs(valuetype System.Guid id, class Microsoft.SharePoint.SPUserToken user, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllJobs(System.Guid,Microsoft.SharePoint.SPUserToken,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllJobs (id As Guid, user As SPUserToken, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllJobs(Guid id, Microsoft::SharePoint::SPUserToken ^ user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="user" Type="Microsoft.SharePoint.SPUserToken" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="id">A <see cref="T:System.Guid" /> structure that specifies the Word Automation Services application proxy instance that serviced the conversion jobs returned by this method.</param>
        <param name="user">An <see cref="T:Microsoft.SharePoint.SPUserToken" /> that specifies the user credentials that were presented to filter the list of all conversion jobs.NoteIf the argument for <paramref name="user" /> is a null reference (Nothing in Visual Basic), then the list of conversion jobs is not filtered and all conversion jobs in the specified partition are returned.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs that were started by the specified user, regardless of the status of those jobs.</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each <see cref="T:System.Guid" /> corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllJobs">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs (string name, Microsoft.SharePoint.SPUserToken user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt; GetAllJobs(string name, class Microsoft.SharePoint.SPUserToken user, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetAllJobs(System.String,Microsoft.SharePoint.SPUserToken,System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllJobs (name As String, user As SPUserToken, subscriptionId As Nullable(Of Guid)) As ReadOnlyCollection(Of ConversionJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionJobInfo ^&gt; ^ GetAllJobs(System::String ^ name, Microsoft::SharePoint::SPUserToken ^ user, Nullable&lt;Guid&gt; subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="user" Type="Microsoft.SharePoint.SPUserToken" />
        <Parameter Name="subscriptionId" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The user-defined friendly name of the <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object that serviced the conversion jobs returned by this method.</param>
        <param name="user">An <see cref="T:Microsoft.SharePoint.SPUserToken" /> that specifies the user credentials that were presented to filter the list of all conversion jobs.NoteIf the argument for <paramref name="user" /> is a null reference (Nothing in Visual Basic), then the list of conversion jobs is not filtered and all conversion jobs in the specified partition are returned.</param>
        <param name="subscriptionId">A <see cref="T:System.Nullable{System.Guid}" /> structure that specifies a tenant partition.NoteIf the SharePoint farm is not configured for multiple tenants, then pass a null reference (Nothing in Visual Basic) as the argument for this parameter.</param>
        <summary>Gets all conversion jobs that were started by the specified user, regardless of the status of those jobs.</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> object.</returns>
        <remarks>
          <para>The collection of <see cref="T:System.Guid" /> structures returned by this method is scoped to a single partition. Each <see cref="T:System.Guid" /> corresponds to the <see cref="P:Microsoft.Office.Word.Server.Conversions.ConversionJob.JobId" /> of a <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJob" /> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionItemInfo&gt; GetItems (Microsoft.Office.Word.Server.Conversions.ItemTypes types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Office.Word.Server.Conversions.ConversionItemInfo&gt; GetItems(valuetype Microsoft.Office.Word.Server.Conversions.ItemTypes types) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.GetItems(Microsoft.Office.Word.Server.Conversions.ItemTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (types As ItemTypes) As ReadOnlyCollection(Of ConversionItemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Office::Word::Server::Conversions::ConversionItemInfo ^&gt; ^ GetItems(Microsoft::Office::Word::Server::Conversions::ItemTypes types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Office.Word.Server.Conversions.ConversionItemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="Microsoft.Office.Word.Server.Conversions.ItemTypes" />
      </Parameters>
      <Docs>
        <param name="types">The category of items which should be retrieved.</param>
        <summary>Gets the list of files for any category within the conversion.</summary>
        <returns>Returns <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
        <remarks>
          <para>Possible values for the categories of items are:</para>
          <list type="bullet">
            <item>
              <description>Succeeded</description>
            </item>
            <item>
              <description>InProgress</description>
            </item>
            <item>
              <description>NotStarted</description>
            </item>
            <item>
              <description>Failed</description>
            </item>
            <item>
              <description>Canceled</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InProgress">
      <MemberSignature Language="C#" Value="public int InProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InProgress" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.InProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InProgress As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InProgress { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of conversions under this job that are in progress (that is, all those conversions whose status is set to InProgress).These conversion items have been pulled from the document queue and are currently being converted by the Word Automation Services.</summary>
        <value>Returns <see cref="T:System.Int32" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the user-defined friendly name for this conversion job.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotStarted">
      <MemberSignature Language="C#" Value="public int NotStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotStarted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.NotStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotStarted As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NotStarted { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of conversions whose status is set to NotStarted. These conversion items have not yet been pulled from the conversion queue.</summary>
        <value>Returns <see cref="T:System.Int32" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Updates the contents of the <see cref="T:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Succeeded">
      <MemberSignature Language="C#" Value="public int Succeeded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Succeeded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Word.Server.Conversions.ConversionJobStatus.Succeeded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Succeeded As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Succeeded { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of conversions whose status is set to Succeeded.</summary>
        <value>Returns <see cref="T:System.Int32" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>