<Type Name="VideoSet" FullName="Microsoft.Office.DocumentManagement.VideoSets.VideoSet">
  <TypeSignature Language="C#" Value="public class VideoSet : Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VideoSet extends Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.DocumentManagement.VideoSets.VideoSet" />
  <TypeSignature Language="VB.NET" Value="Public Class VideoSet&#xA;Inherits DocumentSet" />
  <TypeSignature Language="C++ CLI" Value="public ref class VideoSet : Microsoft::Office::DocumentManagement::DocumentSets::DocumentSet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Client.ClientCallableType(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful, ServerTypeId="999F0B44-5022-4C04-A0C3-D0705E44395F")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a folder that contains all of the information related to a video.
</summary>
    <remarks>
      <para>Information related to a video can include, for example, different renditions and thumbnail images.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VideoSet (Microsoft.SharePoint.SPFolder folder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.SPFolder folder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.VideoSets.VideoSet.#ctor(Microsoft.SharePoint.SPFolder)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (folder As SPFolder)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VideoSet(Microsoft::SharePoint::SPFolder ^ folder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="folder" Type="Microsoft.SharePoint.SPFolder" />
      </Parameters>
      <Docs>
        <param name="folder">To be added.</param>
        <summary>Initializes a new instance of a <see cref="T:Microsoft.Office.DocumentManagement.VideoSets.VideoSet" /> object.
</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VideoSet (Microsoft.SharePoint.SPFolder folder, Microsoft.SharePoint.SPListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.SPFolder folder, class Microsoft.SharePoint.SPListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.VideoSets.VideoSet.#ctor(Microsoft.SharePoint.SPFolder,Microsoft.SharePoint.SPListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (folder As SPFolder, item As SPListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VideoSet(Microsoft::SharePoint::SPFolder ^ folder, Microsoft::SharePoint::SPListItem ^ item);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="folder" Type="Microsoft.SharePoint.SPFolder" />
        <Parameter Name="item" Type="Microsoft.SharePoint.SPListItem" />
      </Parameters>
      <Docs>
        <param name="folder">To be added.</param>
        <param name="item">To be added.</param>
        <summary>Initializes a new instance of a <see cref="T:Microsoft.Office.DocumentManagement.VideoSets.VideoSet" /> object.
</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateVideo">
      <MemberSignature Language="C#" Value="public static string CreateVideo (Microsoft.SharePoint.SPFolder parentFolder, string name, Microsoft.SharePoint.SPContentTypeId ctid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateVideo(class Microsoft.SharePoint.SPFolder parentFolder, string name, valuetype Microsoft.SharePoint.SPContentTypeId ctid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.VideoSets.VideoSet.CreateVideo(Microsoft.SharePoint.SPFolder,System.String,Microsoft.SharePoint.SPContentTypeId)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateVideo (parentFolder As SPFolder, name As String, ctid As SPContentTypeId) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateVideo(Microsoft::SharePoint::SPFolder ^ parentFolder, System::String ^ name, Microsoft::SharePoint::SPContentTypeId ctid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableExceptionConstraint(Condition="Cannot create video set because another file or folder with this name already exists.", ErrorType=typeof(System.InvalidOperationException), FixedId="InvalidOperationException")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableMethod(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentFolder" Type="Microsoft.SharePoint.SPFolder">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="name" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotEmpty)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="ctid" Type="Microsoft.SharePoint.SPContentTypeId">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parentFolder">The folder in which to create the new <b>VideoSet</b> object. </param>
        <param name="name">The name of the new <b>VideoSet</b> object.</param>
        <param name="ctid">The ID of the content type to be used for the new <b>VideoSet</b> object to be created. The ID must be for a content type that inherits from the base <b>Video</b> content type.
</param>
        <summary>Creates a new <see cref="T:Microsoft.Office.DocumentManagement.VideoSets.VideoSet" /> object. </summary>
        <returns>The URL to the new <b>VideoSet</b> object.</returns>
        <remarks>
          <para>This method creates an empty video set container object. It is used for embed code and for external link.</para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="parentFolder" /> parameter is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">A folder with the name already exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEmbedCode">
      <MemberSignature Language="C#" Value="public static string GetEmbedCode (string videoPath, Microsoft.Office.DocumentManagement.VideoSets.EmbedCodeConfiguration properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEmbedCode(string videoPath, class Microsoft.Office.DocumentManagement.VideoSets.EmbedCodeConfiguration properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.VideoSets.VideoSet.GetEmbedCode(System.String,Microsoft.Office.DocumentManagement.VideoSets.EmbedCodeConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEmbedCode (videoPath As String, properties As EmbedCodeConfiguration) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEmbedCode(System::String ^ videoPath, Microsoft::Office::DocumentManagement::VideoSets::EmbedCodeConfiguration ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableExceptionConstraint(Condition="Video cannot be found for a blank or null path.", ErrorType=typeof(System.ArgumentNullException), FixedId="ArgumentNullException")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableExceptionConstraint(Condition="Video cannot be found at the specified path.", ErrorType=typeof(System.ArgumentException), FixedId="ArgumentException")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableMethod(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful, OperationType=Microsoft.SharePoint.Client.OperationType.Read)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="videoPath" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotEmpty)</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="properties" Type="Microsoft.Office.DocumentManagement.VideoSets.EmbedCodeConfiguration">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableParameter</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="videoPath">Absolute or Relative URL for the video item or player page.</param>
        <param name="properties">Optional properties to be used in configuring the embed code.</param>
        <summary>Retrieves the embed code for the video at the specified path.</summary>
        <returns>String containing IFrame embed code for the video at the specified path.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateVideo">
      <MemberSignature Language="C#" Value="public static Microsoft.SharePoint.SPListItem MigrateVideo (Microsoft.SharePoint.SPFile videoFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.SharePoint.SPListItem MigrateVideo(class Microsoft.SharePoint.SPFile videoFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.VideoSets.VideoSet.MigrateVideo(Microsoft.SharePoint.SPFile)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MigrateVideo (videoFile As SPFile) As SPListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::SharePoint::SPListItem ^ MigrateVideo(Microsoft::SharePoint::SPFile ^ videoFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableExceptionConstraint(Condition="Video file parent hierarchy cannot be established.", ErrorType=typeof(System.ArgumentNullException), FixedId="ArgumentNullException")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableExceptionConstraint(Condition="Video file cannot be found.", ErrorType=typeof(System.IO.FileNotFoundException), FixedId="FileNotFoundException")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableMethod(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.SPListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="videoFile" Type="Microsoft.SharePoint.SPFile">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="videoFile">Standalone video file with a known file extension to be migrated.</param>
        <summary>For a document library containing the video content type, this method attempts to migrate specified standalone video files into the representation required by video content type.</summary>
        <returns>The list item corresponding to the migrated video or to the original specified file if migration could not complete for reasons specified in remarks.</returns>
        <remarks>
          <para>For migration to be attempted, the specified file must be in a document library that contains the video content type. It must also be on the list of file extensions specified by <b>web.config SharePoint/MediaAssets</b> node attribute <b>mediaFileExtensions</b> and not appear on the <b>html5AudioFileExtensions</b> attribute value.
Otherwise, the specified file will not be modified.</para>
          <para />
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Video file cannot be found.</exception>
        <exception cref="T:System.ArgumentNullException">Video file parent hierarchy cannot be established.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadVideo">
      <MemberSignature Language="C#" Value="public static string UploadVideo (Microsoft.SharePoint.SPList list, string fileName, System.IO.Stream file, bool overwriteIfExists, string parentFolderPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UploadVideo(class Microsoft.SharePoint.SPList list, string fileName, class System.IO.Stream file, bool overwriteIfExists, string parentFolderPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.VideoSets.VideoSet.UploadVideo(Microsoft.SharePoint.SPList,System.String,System.IO.Stream,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UploadVideo (list As SPList, fileName As String, file As Stream, overwriteIfExists As Boolean, parentFolderPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UploadVideo(Microsoft::SharePoint::SPList ^ list, System::String ^ fileName, System::IO::Stream ^ file, bool overwriteIfExists, System::String ^ parentFolderPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableExceptionConstraint(Condition="Cannot upload video because another file or folder with this name already exists.", ErrorType=typeof(System.InvalidOperationException), FixedId="InvalidOperationException")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableMethod(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Microsoft.SharePoint.SPList">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="fileName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotEmpty)</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="file" Type="System.IO.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="overwriteIfExists" Type="System.Boolean" />
        <Parameter Name="parentFolderPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="list">List to upload the file to.</param>
        <param name="fileName">Name of the file, including the extension.</param>
        <param name="file">File stream to be uploaded.</param>
        <param name="overwriteIfExists">Overwrites the existing file, if true. If false, the existing file will not be updated.</param>
        <param name="parentFolderPath">Optional server-relative folder URL for the folder within the list to upload the file to. If null, file will be uploaded to the root folder.</param>
        <summary>Uploads the video file with the specified file name to the specified list.</summary>
        <returns>Absolute URL of the uploaded video file.</returns>
        <remarks>
          <para>In order to get the full video experience, the video file should be uploaded to the document library that contains the video content type.</para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentNullException">Video cannot be found at the specified path.</exception>
      </Docs>
    </Member>
    <Member MemberName="WelcomePageUrl">
      <MemberSignature Language="C#" Value="public override string WelcomePageUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WelcomePageUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.VideoSets.VideoSet.WelcomePageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WelcomePageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WelcomePageUrl { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the relative URL of the welcome page for this <see cref="T:Microsoft.Office.DocumentManagement.VideoSets.VideoSet" /> object.</summary>
        <value>String representation of the welcome page URL for this <b>VideoSet</b> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>