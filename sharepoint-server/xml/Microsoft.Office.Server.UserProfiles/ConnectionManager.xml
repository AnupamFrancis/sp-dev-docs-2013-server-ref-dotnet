<Type Name="ConnectionManager" FullName="Microsoft.Office.Server.UserProfiles.ConnectionManager">
  <TypeSignature Language="C#" Value="public class ConnectionManager : System.Collections.Generic.IEnumerable&lt;Microsoft.Office.Server.UserProfiles.Connection&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConnectionManager extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Office.Server.UserProfiles.Connection&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Server.UserProfiles.ConnectionManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConnectionManager&#xA;Implements IEnumerable(Of Connection)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionManager : System::Collections::Generic::IEnumerable&lt;Microsoft::Office::Server::UserProfiles::Connection ^&gt;" />
  <TypeSignature Language="F#" Value="type ConnectionManager = class&#xA;    interface seq&lt;Connection&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Office.Server.UserProfiles.Connection&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Manages all data source connections for the current service context.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddActiveDirectoryConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection AddActiveDirectoryConnection (Microsoft.Office.Server.UserProfiles.ConnectionType type, string displayName, string server, bool useSSL, string accountDomain, string accountUsername, System.Security.SecureString accountPassword, System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt; namingContexts, string spsClaimProviderTypeValue, string spsClaimProviderIdValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection AddActiveDirectoryConnection(valuetype Microsoft.Office.Server.UserProfiles.ConnectionType type, string displayName, string server, bool useSSL, string accountDomain, string accountUsername, class System.Security.SecureString accountPassword, class System.Collections.Generic.List`1&lt;class Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt; namingContexts, string spsClaimProviderTypeValue, string spsClaimProviderIdValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.UserProfiles.ConnectionManager.AddActiveDirectoryConnection(Microsoft.Office.Server.UserProfiles.ConnectionType,System.String,System.String,System.Boolean,System.String,System.String,System.Security.SecureString,System.Collections.Generic.List{Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddActiveDirectoryConnection (type As ConnectionType, displayName As String, server As String, useSSL As Boolean, accountDomain As String, accountUsername As String, accountPassword As SecureString, namingContexts As List(Of DirectoryServiceNamingContext), spsClaimProviderTypeValue As String, spsClaimProviderIdValue As String) As DirectoryServiceConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Server::UserProfiles::DirectoryServiceConnection ^ AddActiveDirectoryConnection(Microsoft::Office::Server::UserProfiles::ConnectionType type, System::String ^ displayName, System::String ^ server, bool useSSL, System::String ^ accountDomain, System::String ^ accountUsername, System::Security::SecureString ^ accountPassword, System::Collections::Generic::List&lt;Microsoft::Office::Server::UserProfiles::DirectoryServiceNamingContext ^&gt; ^ namingContexts, System::String ^ spsClaimProviderTypeValue, System::String ^ spsClaimProviderIdValue);" />
      <MemberSignature Language="F#" Value="member this.AddActiveDirectoryConnection : Microsoft.Office.Server.UserProfiles.ConnectionType * string * string * bool * string * string * System.Security.SecureString * System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt; * string * string -&gt; Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection" Usage="connectionManager.AddActiveDirectoryConnection (type, displayName, server, useSSL, accountDomain, accountUsername, accountPassword, namingContexts, spsClaimProviderTypeValue, spsClaimProviderIdValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.Office.Server.UserProfiles.ConnectionType" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="useSSL" Type="System.Boolean" />
        <Parameter Name="accountDomain" Type="System.String" />
        <Parameter Name="accountUsername" Type="System.String" />
        <Parameter Name="accountPassword" Type="System.Security.SecureString" />
        <Parameter Name="namingContexts" Type="System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt;" />
        <Parameter Name="spsClaimProviderTypeValue" Type="System.String" />
        <Parameter Name="spsClaimProviderIdValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="displayName">To be added.</param>
        <param name="server">To be added.</param>
        <param name="useSSL">To be added.</param>
        <param name="accountDomain">To be added.</param>
        <param name="accountUsername">To be added.</param>
        <param name="accountPassword">To be added.</param>
        <param name="namingContexts">To be added.</param>
        <param name="spsClaimProviderTypeValue">To be added.</param>
        <param name="spsClaimProviderIdValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddActiveDirectoryConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection AddActiveDirectoryConnection (Microsoft.Office.Server.UserProfiles.ConnectionType type, string displayName, string server, bool useSSL, string accountDomain, string accountUsername, System.Security.SecureString accountPassword, System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt; namingContexts, string spsClaimProviderTypeValue, string spsClaimProviderIdValue, string adClaimIDMapAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection AddActiveDirectoryConnection(valuetype Microsoft.Office.Server.UserProfiles.ConnectionType type, string displayName, string server, bool useSSL, string accountDomain, string accountUsername, class System.Security.SecureString accountPassword, class System.Collections.Generic.List`1&lt;class Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt; namingContexts, string spsClaimProviderTypeValue, string spsClaimProviderIdValue, string adClaimIDMapAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.UserProfiles.ConnectionManager.AddActiveDirectoryConnection(Microsoft.Office.Server.UserProfiles.ConnectionType,System.String,System.String,System.Boolean,System.String,System.String,System.Security.SecureString,System.Collections.Generic.List{Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddActiveDirectoryConnection (type As ConnectionType, displayName As String, server As String, useSSL As Boolean, accountDomain As String, accountUsername As String, accountPassword As SecureString, namingContexts As List(Of DirectoryServiceNamingContext), spsClaimProviderTypeValue As String, spsClaimProviderIdValue As String, adClaimIDMapAttribute As String) As DirectoryServiceConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Server::UserProfiles::DirectoryServiceConnection ^ AddActiveDirectoryConnection(Microsoft::Office::Server::UserProfiles::ConnectionType type, System::String ^ displayName, System::String ^ server, bool useSSL, System::String ^ accountDomain, System::String ^ accountUsername, System::Security::SecureString ^ accountPassword, System::Collections::Generic::List&lt;Microsoft::Office::Server::UserProfiles::DirectoryServiceNamingContext ^&gt; ^ namingContexts, System::String ^ spsClaimProviderTypeValue, System::String ^ spsClaimProviderIdValue, System::String ^ adClaimIDMapAttribute);" />
      <MemberSignature Language="F#" Value="member this.AddActiveDirectoryConnection : Microsoft.Office.Server.UserProfiles.ConnectionType * string * string * bool * string * string * System.Security.SecureString * System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt; * string * string * string -&gt; Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection" Usage="connectionManager.AddActiveDirectoryConnection (type, displayName, server, useSSL, accountDomain, accountUsername, accountPassword, namingContexts, spsClaimProviderTypeValue, spsClaimProviderIdValue, adClaimIDMapAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.Office.Server.UserProfiles.ConnectionType" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="useSSL" Type="System.Boolean" />
        <Parameter Name="accountDomain" Type="System.String" />
        <Parameter Name="accountUsername" Type="System.String" />
        <Parameter Name="accountPassword" Type="System.Security.SecureString" />
        <Parameter Name="namingContexts" Type="System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt;" />
        <Parameter Name="spsClaimProviderTypeValue" Type="System.String" />
        <Parameter Name="spsClaimProviderIdValue" Type="System.String" />
        <Parameter Name="adClaimIDMapAttribute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">An enumeration value that specifies the connection type.</param>
        <param name="displayName">The display name of the connection.</param>
        <param name="server">The server associated with the connection.</param>
        <param name="useSSL">
          <b>true</b> to use SSL encryption for the connection; otherwise, <b>false</b>.</param>
        <param name="accountDomain">The domain name associated with the connection credentials.</param>
        <param name="accountUsername">The user name associated with the connection credentials.</param>
        <param name="accountPassword">The user password associated with the connection credentials.</param>
        <param name="namingContexts">The directory service naming contexts associated with the connection.</param>
        <param name="spsClaimProviderTypeValue">The type for the claims provider definition.</param>
        <param name="spsClaimProviderIdValue">The ID of the claims provider for SharePoint Server.</param>
        <param name="adClaimIDMapAttribute">The claim ID map attribute for Active Directory. </param>
        <summary>Adds an Active Directory connection for the current service context.</summary>
        <returns>The Active Directory connection for the current service context.</returns>
        <remarks>
          <para>This method adds an Active Directory connection for the current service context. See <a href="http://technet.microsoft.com/en-us/library/hh227257.aspx">User profile property data types</a><a href="http://technet.microsoft.com/en-us/library/hh227258.aspx">Connection filter data types and operators</a></para>
          <para />
        </remarks>
        <exception cref="T:Microsoft.Office.Server.UserProfiles.DuplicateEntryException">The service context already has a connection with the same name as <paramref name="displayName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddBusinessDataCatalogConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Server.UserProfiles.BusinessDataCatalogConnection AddBusinessDataCatalogConnection (string displayName, string systemName, string entityName, string entityNamespace, string profilePropertyName, string filterName, string mappedPropertyAttributeName, System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.Synchronization.DSMLAttribute&gt; attributeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.Server.UserProfiles.BusinessDataCatalogConnection AddBusinessDataCatalogConnection(string displayName, string systemName, string entityName, string entityNamespace, string profilePropertyName, string filterName, string mappedPropertyAttributeName, class System.Collections.Generic.List`1&lt;class Microsoft.Office.Server.UserProfiles.Synchronization.DSMLAttribute&gt; attributeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.UserProfiles.ConnectionManager.AddBusinessDataCatalogConnection(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{Microsoft.Office.Server.UserProfiles.Synchronization.DSMLAttribute})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddBusinessDataCatalogConnection (displayName As String, systemName As String, entityName As String, entityNamespace As String, profilePropertyName As String, filterName As String, mappedPropertyAttributeName As String, attributeList As List(Of DSMLAttribute)) As BusinessDataCatalogConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Server::UserProfiles::BusinessDataCatalogConnection ^ AddBusinessDataCatalogConnection(System::String ^ displayName, System::String ^ systemName, System::String ^ entityName, System::String ^ entityNamespace, System::String ^ profilePropertyName, System::String ^ filterName, System::String ^ mappedPropertyAttributeName, System::Collections::Generic::List&lt;Microsoft::Office::Server::UserProfiles::Synchronization::DSMLAttribute ^&gt; ^ attributeList);" />
      <MemberSignature Language="F#" Value="member this.AddBusinessDataCatalogConnection : string * string * string * string * string * string * string * System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.Synchronization.DSMLAttribute&gt; -&gt; Microsoft.Office.Server.UserProfiles.BusinessDataCatalogConnection" Usage="connectionManager.AddBusinessDataCatalogConnection (displayName, systemName, entityName, entityNamespace, profilePropertyName, filterName, mappedPropertyAttributeName, attributeList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Server.UserProfiles.BusinessDataCatalogConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="systemName" Type="System.String" />
        <Parameter Name="entityName" Type="System.String" />
        <Parameter Name="entityNamespace" Type="System.String" />
        <Parameter Name="profilePropertyName" Type="System.String" />
        <Parameter Name="filterName" Type="System.String" />
        <Parameter Name="mappedPropertyAttributeName" Type="System.String" />
        <Parameter Name="attributeList" Type="System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.Synchronization.DSMLAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="displayName">To be added.</param>
        <param name="systemName">To be added.</param>
        <param name="entityName">To be added.</param>
        <param name="entityNamespace">To be added.</param>
        <param name="profilePropertyName">To be added.</param>
        <param name="filterName">To be added.</param>
        <param name="mappedPropertyAttributeName">To be added.</param>
        <param name="attributeList">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLdapConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection AddLdapConnection (Microsoft.Office.Server.UserProfiles.ConnectionType type, string displayName, string server, int port, bool useSSL, string accountUsername, System.Security.SecureString accountPassword, string userIDAttribute, string providerName, System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt; namingContexts, string spsClaimProviderTypeValue, string spsClaimProviderIdValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection AddLdapConnection(valuetype Microsoft.Office.Server.UserProfiles.ConnectionType type, string displayName, string server, int32 port, bool useSSL, string accountUsername, class System.Security.SecureString accountPassword, string userIDAttribute, string providerName, class System.Collections.Generic.List`1&lt;class Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt; namingContexts, string spsClaimProviderTypeValue, string spsClaimProviderIdValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.UserProfiles.ConnectionManager.AddLdapConnection(Microsoft.Office.Server.UserProfiles.ConnectionType,System.String,System.String,System.Int32,System.Boolean,System.String,System.Security.SecureString,System.String,System.String,System.Collections.Generic.List{Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLdapConnection (type As ConnectionType, displayName As String, server As String, port As Integer, useSSL As Boolean, accountUsername As String, accountPassword As SecureString, userIDAttribute As String, providerName As String, namingContexts As List(Of DirectoryServiceNamingContext), spsClaimProviderTypeValue As String, spsClaimProviderIdValue As String) As DirectoryServiceConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Server::UserProfiles::DirectoryServiceConnection ^ AddLdapConnection(Microsoft::Office::Server::UserProfiles::ConnectionType type, System::String ^ displayName, System::String ^ server, int port, bool useSSL, System::String ^ accountUsername, System::Security::SecureString ^ accountPassword, System::String ^ userIDAttribute, System::String ^ providerName, System::Collections::Generic::List&lt;Microsoft::Office::Server::UserProfiles::DirectoryServiceNamingContext ^&gt; ^ namingContexts, System::String ^ spsClaimProviderTypeValue, System::String ^ spsClaimProviderIdValue);" />
      <MemberSignature Language="F#" Value="member this.AddLdapConnection : Microsoft.Office.Server.UserProfiles.ConnectionType * string * string * int * bool * string * System.Security.SecureString * string * string * System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt; * string * string -&gt; Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection" Usage="connectionManager.AddLdapConnection (type, displayName, server, port, useSSL, accountUsername, accountPassword, userIDAttribute, providerName, namingContexts, spsClaimProviderTypeValue, spsClaimProviderIdValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Server.UserProfiles.DirectoryServiceConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.Office.Server.UserProfiles.ConnectionType" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="useSSL" Type="System.Boolean" />
        <Parameter Name="accountUsername" Type="System.String" />
        <Parameter Name="accountPassword" Type="System.Security.SecureString" />
        <Parameter Name="userIDAttribute" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="namingContexts" Type="System.Collections.Generic.List&lt;Microsoft.Office.Server.UserProfiles.DirectoryServiceNamingContext&gt;" />
        <Parameter Name="spsClaimProviderTypeValue" Type="System.String" />
        <Parameter Name="spsClaimProviderIdValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="displayName">To be added.</param>
        <param name="server">To be added.</param>
        <param name="port">To be added.</param>
        <param name="useSSL">To be added.</param>
        <param name="accountUsername">To be added.</param>
        <param name="accountPassword">To be added.</param>
        <param name="userIDAttribute">To be added.</param>
        <param name="providerName">To be added.</param>
        <param name="namingContexts">To be added.</param>
        <param name="spsClaimProviderTypeValue">To be added.</param>
        <param name="spsClaimProviderIdValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.UserProfiles.ConnectionManager.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (displayName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="connectionManager.Contains displayName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">To be added.</param>
        <summary>Determines whether a data source connection with the specified display name exists.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Server.UserProfiles.ConnectionManager.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Office.Server.UserProfiles.ConnectionManager.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a count of all existing data source connections.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Microsoft.Office.Server.UserProfiles.Connection&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Microsoft.Office.Server.UserProfiles.Connection&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.UserProfiles.ConnectionManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Connection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;Microsoft::Office::Server::UserProfiles::Connection ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.Office.Server.UserProfiles.Connection&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.Office.Server.UserProfiles.Connection&gt;" Usage="connectionManager.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.Office.Server.UserProfiles.Connection&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves an object that can iterate through each data source connection in the current service context.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Server.UserProfiles.Connection this[string displayName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Server.UserProfiles.Connection Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Server.UserProfiles.ConnectionManager.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(displayName As String) As Connection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Server::UserProfiles::Connection ^ default[System::String ^] { Microsoft::Office::Server::UserProfiles::Connection ^ get(System::String ^ displayName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : Microsoft.Office.Server.UserProfiles.Connection" Usage="Microsoft.Office.Server.UserProfiles.ConnectionManager.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Server.UserProfiles.Connection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">To be added.</param>
        <summary>Retrieves a <see cref="T:Microsoft.Office.Server.UserProfiles.Connection" /> object with the specified display name.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.UserProfiles.ConnectionManager.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>