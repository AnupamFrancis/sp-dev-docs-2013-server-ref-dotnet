<Type Name="QuickLink" FullName="Microsoft.Office.Server.UserProfiles.QuickLink">
  <TypeSignature Language="C#" Value="public class QuickLink : Microsoft.Office.Server.UserProfiles.PrivacyItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuickLink extends Microsoft.Office.Server.UserProfiles.PrivacyItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Server.UserProfiles.QuickLink" />
  <TypeSignature Language="VB.NET" Value="Public Class QuickLink&#xA;Inherits PrivacyItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class QuickLink : Microsoft::Office::Server::UserProfiles::PrivacyItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Office.Server.UserProfiles.PrivacyItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a quick link.</summary>
    <remarks>To be added.</remarks>
    <example>
      <para>The following code example shows the use of the <see cref="T:Microsoft.Office.Server.UserProfiles.QuickLink" /> class.</para>
      <para>[Visual Basic]</para>
      <code>      Public Sub QuickLinkSample() 
         'Get portal site context from topology.          Dim strUrl As String = "http://SampleName"          Dim tm As New TopologyManager()          Dim ps As PortalSite = tm.PortalSites(New Uri(strUrl))          Dim pc As PortalContext = PortalApplication.GetContext(ps)           'Initialize user profile config manager object.          Dim upm As New UserProfileManager(pc)          Dim sAccount As String = "mydomain\myalias"          Dim u As UserProfile = upm.GetUserProfile(sAccount)          Dim qlm As QuickLinkManager = u.QuickLinks          Dim strTitle As String = "mylink"          Dim sLinkUrl As String = "http://my"          Dim strGroup As String = "my group"          Dim ql As QuickLink = qlm.Create(strTitle, sLinkUrl, QuickLinkGroupType.UserSpecified, strGroup, Privacy.Public)          Dim iLinkID As Integer = ql.LinkID           'Edit quick link.          Dim qedit As QuickLink = qlm(iLinkID)          qedit.Group = "new group"          qedit.Commit()           'Remove quick link.          qlm.Delete(iLinkID)           'Add another quick link to a person          Dim strTitle2 As String = "mycontact"          Dim sContactAcc As String = "mydomain\mycontact"          Dim ucon As UserProfile = upm.GetUserProfile(sContactAcc)          Dim userguid As Guid = ucon.ID          qlm.AddPerson(strTitle2, userguid, strGroup, False)       End Sub 'QuickLinkSample</code>
      <para>[C#]</para>
      <code>public void QuickLinkSample() 
{ // Get portal site context from topology. string strUrl = "http://SampleName"; TopologyManager tm = new TopologyManager(); PortalSite ps = tm.PortalSites[new Uri(strUrl)]; PortalContext pc = PortalApplication.GetContext(ps);  // Initialize user profile config manager object. UserProfileManager upm = new UserProfileManager(pc); string sAccount = "mydomain\\myalias"; UserProfile u = upm.GetUserProfile(sAccount); QuickLinkManager qlm = u.QuickLinks; string strTitle = "mylink"; string sLinkUrl = "http://my"; string strGroup = "my group"; QuickLink ql = qlm.Create(strTitle, sLinkUrl, QuickLinkGroupType.UserSpecified, strGroup, Privacy.Public);  // Edit quick link. QuickLink qedit = qlm[iLinkID]; qedit.Group = "new group"; qedit.Commit();  // Remove quick link. qlm.Delete(iLinkID);  // Add another quick link to a person. string strTitle2 = "mycontact"; string sContactAcc = "mydomain\\mycontact"; UserProfile ucon = upm.GetUserProfile(sContactAcc); Guid userguid = ucon.ID; qlm.AddPerson(strTitle2, userguid, strGroup, false);</code>
      <para>}</para>
    </example>
  </Docs>
  <Members>
    <Member MemberName="AddCustomCommitFields">
      <MemberSignature Language="C#" Value="protected internal override void AddCustomCommitFields (System.Data.SqlClient.SqlCommand cmd);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void AddCustomCommitFields(class System.Data.SqlClient.SqlCommand cmd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.UserProfiles.QuickLink.AddCustomCommitFields(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub AddCustomCommitFields (cmd As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void AddCustomCommitFields(System::Data::SqlClient::SqlCommand ^ cmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cmd" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="cmd">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.UserProfiles.QuickLink.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Saves the changes made to a quick link to the user profile data store.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentClass">
      <MemberSignature Language="C#" Value="public string ContentClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentClass" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Server.UserProfiles.QuickLink.ContentClass" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the icon that is displayed.</summary>
        <value>
          <b>String</b>. The type of content source to which the quick link refers.</value>
        <remarks>
          <para>If the value of this property is blank, then the file extension determines the icon that is displayed.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Server.UserProfiles.QuickLinkGroupType GroupType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Server.UserProfiles.QuickLinkGroupType GroupType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Server.UserProfiles.QuickLink.GroupType" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupType As QuickLinkGroupType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Server::UserProfiles::QuickLinkGroupType GroupType { Microsoft::Office::Server::UserProfiles::QuickLinkGroupType get(); void set(Microsoft::Office::Server::UserProfiles::QuickLinkGroupType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Server.UserProfiles.QuickLinkGroupType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the group name by which a link is organized.</summary>
        <value>
          <b>String.</b> The group name by which a link is organized.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBestBet">
      <MemberSignature Language="C#" Value="public bool IsBestBet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBestBet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Server.UserProfiles.QuickLink.IsBestBet" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBestBet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBestBet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Gets whether or not this link is a Best Bet (set using "GroupType" property).             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTitleEditable">
      <MemberSignature Language="C#" Value="public override bool IsTitleEditable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTitleEditable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Server.UserProfiles.QuickLink.IsTitleEditable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsTitleEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTitleEditable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUrlEditable">
      <MemberSignature Language="C#" Value="public override bool IsUrlEditable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUrlEditable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Server.UserProfiles.QuickLink.IsUrlEditable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsUrlEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsUrlEditable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the URL property of a specified link is editable.</summary>
        <value>true if the URL property of a specified link is editable; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public override Microsoft.Office.Server.UserProfiles.PrivacyPolicyItem Policy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Server.UserProfiles.PrivacyPolicyItem Policy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Server.UserProfiles.QuickLink.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Policy As PrivacyPolicyItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Office::Server::UserProfiles::PrivacyPolicyItem ^ Policy { Microsoft::Office::Server::UserProfiles::PrivacyPolicyItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Server.UserProfiles.PrivacyPolicyItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="protected override void SetPropertyValues (System.Data.SqlClient.SqlDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetPropertyValues(class System.Data.SqlClient.SqlDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.UserProfiles.QuickLink.SetPropertyValues(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetPropertyValues (dataReader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetPropertyValues(System::Data::SqlClient::SqlDataReader ^ dataReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataReader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="dataReader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidGroupEnumType">
      <MemberSignature Language="C#" Value="protected internal override Type ValidGroupEnumType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValidGroupEnumType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Server.UserProfiles.QuickLink.ValidGroupEnumType" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property ValidGroupEnumType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property Type ^ ValidGroupEnumType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>