<Type Name="TranslationJob" FullName="Microsoft.Office.TranslationServices.TranslationJob">
  <TypeSignature Language="C#" Value="public class TranslationJob : Microsoft.Office.ConversionServices.Conversions.ConversionJob" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TranslationJob extends Microsoft.Office.ConversionServices.Conversions.ConversionJob" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.TranslationServices.TranslationJob" />
  <TypeSignature Language="VB.NET" Value="Public Class TranslationJob&#xA;Inherits ConversionJob" />
  <TypeSignature Language="C++ CLI" Value="public ref class TranslationJob : Microsoft::Office::ConversionServices::Conversions::ConversionJob" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Office.ConversionServices.Conversions.ConversionJob</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Client.ClientCallableType(SampleUrl="{apiroot}/TranslationJob({targetLanguage})", ServerTypeId="C85774BE-554A-4C27-9B0C-A34AB1C86B0D")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the main translation services object model class that  is used to create, package, start, and cancel translation jobs.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TranslationJob (Microsoft.SharePoint.SPServiceContext context, System.Globalization.CultureInfo targetLanguage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.SPServiceContext context, class System.Globalization.CultureInfo targetLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.#ctor(Microsoft.SharePoint.SPServiceContext,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As SPServiceContext, targetLanguage As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TranslationJob(Microsoft::SharePoint::SPServiceContext ^ context, System::Globalization::CultureInfo ^ targetLanguage);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
        <Parameter Name="targetLanguage" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="context">The <b>SPServiceContext</b> associated with the translation request.</param>
        <param name="targetLanguage">
          <b>CultureInfo</b> representing the language to which the documents in the job will be translated. Must be a <b>CultureInfo</b> enumerated by the <see cref="M:Microsoft.Office.TranslationServices.TranslationJob.EnumerateSupportedLanguages(Microsoft.SharePoint.SPServiceContext)" /> method or a child of one of the enumerated <b>CultureInfo</b> objects.</param>
        <summary>Initializes a new instance of  a <see cref="T:Microsoft.Office.TranslationServices.TranslationJob" /> object. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFile">
      <MemberSignature Language="C#" Value="public void AddFile (string inputFile, string outputFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFile(string inputFile, string outputFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.AddFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFile (inputFile As String, outputFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFile(System::String ^ inputFile, System::String ^ outputFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFile" Type="System.String" />
        <Parameter Name="outputFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputFile">To be added.</param>
        <param name="outputFile">To be added.</param>
        <summary>Adds the <paramref name="inputFile" /> (string) to the list of files to translate.</summary>
        <remarks>
          <para>After translating the file,
 store it as the <paramref name="outputFile" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFolder">
      <MemberSignature Language="C#" Value="public bool AddFolder (Microsoft.SharePoint.SPFolder inputFolder, Microsoft.SharePoint.SPFolder outputFolder, bool recursion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AddFolder(class Microsoft.SharePoint.SPFolder inputFolder, class Microsoft.SharePoint.SPFolder outputFolder, bool recursion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.AddFolder(Microsoft.SharePoint.SPFolder,Microsoft.SharePoint.SPFolder,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFolder (inputFolder As SPFolder, outputFolder As SPFolder, recursion As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool AddFolder(Microsoft::SharePoint::SPFolder ^ inputFolder, Microsoft::SharePoint::SPFolder ^ outputFolder, bool recursion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFolder" Type="Microsoft.SharePoint.SPFolder" />
        <Parameter Name="outputFolder" Type="Microsoft.SharePoint.SPFolder" />
        <Parameter Name="recursion" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputFolder">To be added.</param>
        <param name="outputFolder">To be added.</param>
        <param name="recursion">To be added.</param>
        <summary>Adds all files in a website folder (<paramref name="inputFolder" />) to the list of files to translate.</summary>
        <returns>
          <b>true</b> if at least one file in the folder is added to the job; otherwise, <b>false</b>.</returns>
        <remarks>
          <para>After translating the files, place all resulting files in <paramref name="outputFolder" />. If <paramref name="recursion" /> is <b>true</b>, then all subdirectories of <paramref name="inputFolder" /> are traversed, and the directory structure of the crawl is replicated under the <paramref name="outputFolder" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLibrary">
      <MemberSignature Language="C#" Value="public bool AddLibrary (Microsoft.SharePoint.SPList inputList, Microsoft.SharePoint.SPList outputList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AddLibrary(class Microsoft.SharePoint.SPList inputList, class Microsoft.SharePoint.SPList outputList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.AddLibrary(Microsoft.SharePoint.SPList,Microsoft.SharePoint.SPList)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLibrary (inputList As SPList, outputList As SPList) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool AddLibrary(Microsoft::SharePoint::SPList ^ inputList, Microsoft::SharePoint::SPList ^ outputList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputList" Type="Microsoft.SharePoint.SPList" />
        <Parameter Name="outputList" Type="Microsoft.SharePoint.SPList" />
      </Parameters>
      <Docs>
        <param name="inputList">To be added.</param>
        <param name="outputList">To be added.</param>
        <summary>Adds all files in the <paramref name="inputList" /> to the list of files to translate. </summary>
        <returns>
          <b>true</b> if at least one file in the library is added to the job; otherwise, <b>false</b>.</returns>
        <remarks>
          <para>After translating the files, place all resulting files in <paramref name="outputList" />. If <paramref name="recursion" /> is <b>true</b>, then all subdirectories of <paramref name="inputList" /> are traversed, and the directory structure of the crawl is replicated under the <paramref name="outputList" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels a translation job in progress.</summary>
        <remarks>
          <para>Any items that are <b>NotStarted</b> or <b>InProgress</b> are marked as 
<b>Canceled</b>. However, <b>InProgress</b> items still translating on a backend server will not continue executing as normal.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Canceled">
      <MemberSignature Language="C#" Value="public bool Canceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Canceled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.TranslationServices.TranslationJob.Canceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Canceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Canceled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that indicates if the translation job is canceled.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelJob">
      <MemberSignature Language="C#" Value="public static void CancelJob (Microsoft.SharePoint.SPServiceContext context, Guid jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelJob(class Microsoft.SharePoint.SPServiceContext context, valuetype System.Guid jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.CancelJob(Microsoft.SharePoint.SPServiceContext,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CancelJob (context As SPServiceContext, jobId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CancelJob(Microsoft::SharePoint::SPServiceContext ^ context, Guid jobId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
        <Parameter Name="jobId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="context">The <b>SPServiceContext</b> associated with the job.</param>
        <param name="jobId">Job ID.</param>
        <summary>Cancels the translation job identified by <paramref name="jobId" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; EnumerateItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; EnumerateItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.EnumerateItems" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateItems () As IEnumerable(Of KeyValuePair(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ EnumerateItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enumerates items added to the job as key/value pairs.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The key is the input document's URL and the value is the output document's URL.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateSupportedFileExtensions">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; EnumerateSupportedFileExtensions (Microsoft.SharePoint.SPServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; EnumerateSupportedFileExtensions(class Microsoft.SharePoint.SPServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.EnumerateSupportedFileExtensions(Microsoft.SharePoint.SPServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumerateSupportedFileExtensions (context As SPServiceContext) As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ EnumerateSupportedFileExtensions(Microsoft::SharePoint::SPServiceContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
      </Parameters>
      <Docs>
        <param name="context">The <b>SPServiceContext</b> associated with the request.</param>
        <summary>Enumerates file extensions for file types supported by the translation service.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>File extensions do not include the initial period character.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateSupportedLanguages">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Globalization.CultureInfo&gt; EnumerateSupportedLanguages (Microsoft.SharePoint.SPServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Globalization.CultureInfo&gt; EnumerateSupportedLanguages(class Microsoft.SharePoint.SPServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.EnumerateSupportedLanguages(Microsoft.SharePoint.SPServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumerateSupportedLanguages (context As SPServiceContext) As IEnumerable(Of CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Globalization::CultureInfo ^&gt; ^ EnumerateSupportedLanguages(Microsoft::SharePoint::SPServiceContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Globalization.CultureInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
      </Parameters>
      <Docs>
        <param name="context">The <b>SPServiceContext</b> associated with the request.</param>
        <summary>Enumerates <see cref="T:System.Globalization.CultureInfo" /> objects that represent languages supported by the translation service.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>All child cultures of the enumerated <b>CultureInfo</b> objects are also supported.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaximumFileSize">
      <MemberSignature Language="C#" Value="public static int GetMaximumFileSize (Microsoft.SharePoint.SPServiceContext context, string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaximumFileSize(class Microsoft.SharePoint.SPServiceContext context, string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.GetMaximumFileSize(Microsoft.SharePoint.SPServiceContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaximumFileSize (context As SPServiceContext, extension As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaximumFileSize(Microsoft::SharePoint::SPServiceContext ^ context, System::String ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The <b>SPServiceContext</b> associated with the request.</param>
        <param name="extension">The file extension for which to get the maximum file size. The value should not include the initial period character.</param>
        <summary>Returns the maximum file size, in bytes, allowed by the translation service for files with the given file extension.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileExtensionSupported">
      <MemberSignature Language="C#" Value="public static bool IsFileExtensionSupported (Microsoft.SharePoint.SPServiceContext context, string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFileExtensionSupported(class Microsoft.SharePoint.SPServiceContext context, string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.IsFileExtensionSupported(Microsoft.SharePoint.SPServiceContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFileExtensionSupported (context As SPServiceContext, extension As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFileExtensionSupported(Microsoft::SharePoint::SPServiceContext ^ context, System::String ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The <b>SPServiceContext</b> associated with the request.</param>
        <param name="extension">The file extension to test. The value should not include the initial period character.</param>
        <summary>Reports whether the file type indicated by the given file extension is supported by the translation service.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLanguageSupported">
      <MemberSignature Language="C#" Value="public static bool IsLanguageSupported (Microsoft.SharePoint.SPServiceContext context, System.Globalization.CultureInfo language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLanguageSupported(class Microsoft.SharePoint.SPServiceContext context, class System.Globalization.CultureInfo language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.IsLanguageSupported(Microsoft.SharePoint.SPServiceContext,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLanguageSupported (context As SPServiceContext, language As CultureInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLanguageSupported(Microsoft::SharePoint::SPServiceContext ^ context, System::Globalization::CultureInfo ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
        <Parameter Name="language" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="context">The <b>SPServiceContext</b> associated with the request.</param>
        <param name="language">A <b>CultureInfo</b> object that represents the language to test.</param>
        <summary>Reports whether a language is supported by the translation service.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServiceEnabled">
      <MemberSignature Language="C#" Value="public static bool IsServiceEnabled (Microsoft.SharePoint.SPServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsServiceEnabled(class Microsoft.SharePoint.SPServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.IsServiceEnabled(Microsoft.SharePoint.SPServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsServiceEnabled (context As SPServiceContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsServiceEnabled(Microsoft::SharePoint::SPServiceContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.SPServiceContext" />
      </Parameters>
      <Docs>
        <param name="context">The <b>SPServiceContext</b> for which to check availability of the service.</param>
        <summary>Determines if the translation service is enabled in the given service context.</summary>
        <returns>
          <b>true</b> if the service can be used; otherwise, <b>false</b>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JobId">
      <MemberSignature Language="C#" Value="public Guid JobId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid JobId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.TranslationServices.TranslationJob.JobId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid JobId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unique ID of the translation job.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.TranslationServices.TranslationJob.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the translation job.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputSaveBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.TranslationServices.SaveBehavior OutputSaveBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.TranslationServices.SaveBehavior OutputSaveBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.TranslationServices.TranslationJob.OutputSaveBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputSaveBehavior As SaveBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::TranslationServices::SaveBehavior OutputSaveBehavior { Microsoft::Office::TranslationServices::SaveBehavior get(); void set(Microsoft::Office::TranslationServices::SaveBehavior value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.TranslationServices.SaveBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the save behavior that should be applied to files that already exist.</summary>
        <value>A <see cref="T:Microsoft.Office.TranslationServices.SaveBehavior" /> value.</value>
        <remarks>
          <para>The default value for the setting is <b>AppendIfPossible</b>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationJob.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts the processing of a translation job.</summary>
        <remarks>
          <para>Until the method is called, none of the translations are pushed into the queue.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public bool Started { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Started" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.TranslationServices.TranslationJob.Started" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Started As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Started { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that specifies whether the translation job has been committed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetLanguage">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo TargetLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo TargetLanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.TranslationServices.TranslationJob.TargetLanguage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetLanguage As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ TargetLanguage { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Globalization.CultureInfo" /> object that represents the language into which documents in the job are translated.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserToken">
      <MemberSignature Language="C#" Value="public byte[] UserToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] UserToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.TranslationServices.TranslationJob.UserToken" />
      <MemberSignature Language="VB.NET" Value="Public Property UserToken As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ UserToken { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a serialized open authorization (OAuth) token that is used to upload and download the items in the translation job.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Set to null to use the credentials of the currently logged-in user. The following code shows how to get the OAuth token and setting from the <b>Translationjob.UserToken</b> property.</para>
          <code>SPUserToken oToken = oUser.UserToken;

using (new SPServiceContextScope(serviceContext))
{
   SPIdentityContext identityCtx = SPIdentityContext.Create(oToken);
   SPIdentityContextSerializer serializer = new SPIdentityContextSerializer(new         UserProfileIdentityClaimsResolver());

   job.UserToken = serializer.GetBytes(identityCtx);
}</code>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>