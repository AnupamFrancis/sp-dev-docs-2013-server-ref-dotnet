<Type Name="TranslationServiceProxy" FullName="Microsoft.Office.TranslationServices.TranslationServiceProxy">
  <TypeSignature Language="C#" Value="public sealed class TranslationServiceProxy : Microsoft.SharePoint.Administration.SPIisWebServiceProxy, Microsoft.SharePoint.Administration.IServiceProxyAdministration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TranslationServiceProxy extends Microsoft.SharePoint.Administration.SPIisWebServiceProxy implements class Microsoft.SharePoint.Administration.IServiceProxyAdministration" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.TranslationServices.TranslationServiceProxy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TranslationServiceProxy&#xA;Inherits SPIisWebServiceProxy&#xA;Implements IServiceProxyAdministration" />
  <TypeSignature Language="C++ CLI" Value="public ref class TranslationServiceProxy sealed : Microsoft::SharePoint::Administration::SPIisWebServiceProxy, Microsoft::SharePoint::Administration::IServiceProxyAdministration" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Administration.SPIisWebServiceProxy</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SharePoint.Administration.IServiceProxyAdministration</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Administration.SupportedServiceApplication("ad07fa8a-d276-4218-a962-33cad610561f", "1.0.0.0", typeof(Microsoft.Office.TranslationServices.TranslationServiceApplicationProxy))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("96dedecf-e812-45cf-9073-065ea1027624")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a proxy for the translation service.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TranslationServiceProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationServiceProxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TranslationServiceProxy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Reserved for internal use. Allows class to be deserialized.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProxy">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPServiceApplicationProxy CreateProxy (Type serviceApplicationProxyType, string name, Uri serviceApplicationUri, Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPServiceApplicationProxy CreateProxy(class System.Type serviceApplicationProxyType, string name, class System.Uri serviceApplicationUri, class Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationServiceProxy.CreateProxy(System.Type,System.String,System.Uri,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProxy (serviceApplicationProxyType As Type, name As String, serviceApplicationUri As Uri, provisioningContext As SPServiceProvisioningContext) As SPServiceApplicationProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPServiceApplicationProxy ^ CreateProxy(Type ^ serviceApplicationProxyType, System::String ^ name, Uri ^ serviceApplicationUri, Microsoft::SharePoint::Administration::SPServiceProvisioningContext ^ provisioningContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceProxyAdministration.CreateProxy(System.Type,System.String,System.Uri,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPServiceApplicationProxy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceApplicationUri" Type="System.Uri" />
        <Parameter Name="provisioningContext" Type="Microsoft.SharePoint.Administration.SPServiceProvisioningContext" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxyType">The type of the service application proxy.</param>
        <param name="name">The name of the service application proxy.</param>
        <param name="serviceApplicationUri">The address of the service application.</param>
        <param name="provisioningContext">Default provisioning parameters for the service application proxy.</param>
        <summary>Creates a service application proxy.</summary>
        <returns>The <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" /> object.</returns>
        <remarks>
          <para>The method is re-entrant so if the service application proxy already exists, the existing <b>WordServiceApplicationProxy</b> object is returned.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindProxy">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.TranslationServices.TranslationServiceApplicationProxy FindProxy (Microsoft.SharePoint.Administration.SPFarm farm, Guid proxyId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.TranslationServices.TranslationServiceApplicationProxy FindProxy(class Microsoft.SharePoint.Administration.SPFarm farm, valuetype System.Guid proxyId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationServiceProxy.FindProxy(Microsoft.SharePoint.Administration.SPFarm,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProxy (farm As SPFarm, proxyId As Guid) As TranslationServiceApplicationProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Office::TranslationServices::TranslationServiceApplicationProxy ^ FindProxy(Microsoft::SharePoint::Administration::SPFarm ^ farm, Guid proxyId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.TranslationServices.TranslationServiceApplicationProxy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farm" Type="Microsoft.SharePoint.Administration.SPFarm" />
        <Parameter Name="proxyId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="farm">Farm the proxy belongs to.</param>
        <param name="proxyId">ID of the service application proxy.</param>
        <summary>Finds a service application proxy in the specified farm with the referenced ID.</summary>
        <returns>A <see cref="T:Microsoft.Office.TranslationServices.TranslationServiceApplicationProxy" /> object if found or a null reference (Nothing in Visual Basic) if not found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindProxy">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.TranslationServices.TranslationServiceApplicationProxy FindProxy (Microsoft.SharePoint.Administration.SPFarm farm, string proxyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.TranslationServices.TranslationServiceApplicationProxy FindProxy(class Microsoft.SharePoint.Administration.SPFarm farm, string proxyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationServiceProxy.FindProxy(Microsoft.SharePoint.Administration.SPFarm,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProxy (farm As SPFarm, proxyName As String) As TranslationServiceApplicationProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Office::TranslationServices::TranslationServiceApplicationProxy ^ FindProxy(Microsoft::SharePoint::Administration::SPFarm ^ farm, System::String ^ proxyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.TranslationServices.TranslationServiceApplicationProxy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farm" Type="Microsoft.SharePoint.Administration.SPFarm" />
        <Parameter Name="proxyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="farm">Farm the proxy belongs to.</param>
        <param name="proxyName">Name of the service application proxy.</param>
        <summary>Find a service application proxy in the specified farm with the referenced name.</summary>
        <returns>A <see cref="T:Microsoft.Office.TranslationServices.TranslationServiceApplicationProxy" /> object if found or a null reference (Nothing in Visual Basic) if not found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyTypeDescription">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPPersistedTypeDescription GetProxyTypeDescription (Type serviceApplicationProxyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPPersistedTypeDescription GetProxyTypeDescription(class System.Type serviceApplicationProxyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationServiceProxy.GetProxyTypeDescription(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxyTypeDescription (serviceApplicationProxyType As Type) As SPPersistedTypeDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPPersistedTypeDescription ^ GetProxyTypeDescription(Type ^ serviceApplicationProxyType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceProxyAdministration.GetProxyTypeDescription(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPPersistedTypeDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxyType">The type of the service application proxy.</param>
        <summary>Gets a description of the specified service application proxy type.</summary>
        <returns>The <see cref="T:Microsoft.SharePoint.Administration.SPPersistedTypeDescription" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyTypes">
      <MemberSignature Language="C#" Value="public Type[] GetProxyTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetProxyTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.TranslationServices.TranslationServiceProxy.GetProxyTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxyTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetProxyTypes();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceProxyAdministration.GetProxyTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an array of the service application proxy types supported by the service proxy.</summary>
        <returns>An array containing the <see cref="T:System.Type" /> of <see cref="T:Microsoft.Office.TranslationServices.TranslationServiceApplicationProxy" /> objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.TranslationServices.TranslationServiceProxy.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.TranslationServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the user-friendly name that is used to describe the object type in the administration user interface.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>