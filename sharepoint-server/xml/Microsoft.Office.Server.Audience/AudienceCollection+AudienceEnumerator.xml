<Type Name="AudienceCollection+AudienceEnumerator" FullName="Microsoft.Office.Server.Audience.AudienceCollection+AudienceEnumerator">
  <TypeSignature Language="C#" Value="public class AudienceCollection.AudienceEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit AudienceCollection/AudienceEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class AudienceCollection.AudienceEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public: ref class AudienceCollection::AudienceEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type AudienceCollection.AudienceEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents the enumerator for <see cref="T:Microsoft.Office.Server.Audience.Audience" /> objects in the <see cref="T:Microsoft.Office.Server.Audience.AudienceCollection" /> object.</summary>
    <remarks>
      <para>An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated, and the next call to <see cref="M:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.MoveNext" /> or <see cref="M:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.Reset" /> throws an InvalidOperationException. If the collection is modified between <b>MoveNext</b> and <see cref="P:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.Current" />, <b>Current</b> returns the element to which it is set, even if the enumerator is already invalidated.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current element in the collection.</summary>
        <value>An object that represents the current element in the collection.</value>
        <remarks>
          <para>After an enumerator is created or after a <see cref="M:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.Reset" />, <see cref="M:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.MoveNext" /> must be called to advance the enumerator to the first element of the collection before reading the value of <b>Current</b>; otherwise, <b>Current</b> is undefined. <b>Current</b> also throws an exception if the last call to <b>MoveNext</b> returned <b>false</b>, which indicates the end of the collection. <b>Current</b> does not move the position of the enumerator, and consecutive calls to <b>Current</b> return the same object until either <b>MoveNext</b> or <b>Reset</b> is called. </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="audienceEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Advances the enumerator to the next element of this collection.</summary>
        <returns>
          <b>true</b> if the enumerator is successfully advanced to the next element; <b>false</b> if the enumerator is passed the end of the collection.</returns>
        <remarks>
          <para>After an enumerator is created or after a call to <see cref="M:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.Reset" />, an enumerator is positioned before the first element of the collection, and the first call to <b>MoveNext</b> moves the enumerator over the first element of the collection. After the end of the collection is passed, subsequent calls to <b>MoveNext</b> return <b>false</b> until <b>Reset</b> is called. </para>
          <para>An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated, and the next call to <b>MoveNext</b> or <b>Reset</b> throws an exception.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="audienceEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Server.UserProfiles</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
        <remarks>
          <para>The enumerator remains valid as long as this collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated, and the next call to <see cref="M:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.MoveNext" /> or <see cref="M:Microsoft.Office.Server.Audience.AudienceCollection.AudienceEnumerator.Reset" /> throws an exception.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>