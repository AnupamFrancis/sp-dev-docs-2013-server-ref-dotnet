<Type Name="ElementCollectionBase&lt;ElementCollectionType,ElementType&gt;" FullName="Microsoft.PerformancePoint.Scorecards.ElementCollectionBase&lt;ElementCollectionType,ElementType&gt;">
  <TypeSignature Language="C#" Value="public abstract class ElementCollectionBase&lt;ElementCollectionType,ElementType&gt; : System.Collections.ObjectModel.KeyedCollection&lt;Guid,ElementType&gt;, ICloneable, Microsoft.PerformancePoint.Scorecards.IDiffable where ElementCollectionType : ElementCollectionBase&lt;ElementCollectionType,ElementType&gt;new() where ElementType : Element, IEquatable&lt;ElementType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ElementCollectionBase`2&lt;.ctor (class Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2&lt;!ElementCollectionType, !ElementType&gt;) ElementCollectionType, (class Microsoft.PerformancePoint.Scorecards.Element, class System.IEquatable`1&lt;!ElementType&gt;) ElementType&gt; extends System.Collections.ObjectModel.KeyedCollection`2&lt;valuetype System.Guid, !ElementType&gt; implements class Microsoft.PerformancePoint.Scorecards.IDiffable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ElementCollectionBase(Of ElementCollectionType, ElementType)&#xA;Inherits KeyedCollection(Of Guid, ElementType)&#xA;Implements ICloneable, IDiffable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename ElementCollectionType, typename ElementType&gt;&#xA; where ElementCollectionType : ElementCollectionBase&lt;ElementCollectionType, ElementType&gt;gcnew() where ElementType : Element, IEquatable&lt;ElementType&gt;public ref class ElementCollectionBase abstract : System::Collections::ObjectModel::KeyedCollection&lt;Guid, ElementType&gt;, ICloneable, Microsoft::PerformancePoint::Scorecards::IDiffable" />
  <TypeSignature Language="F#" Value="type ElementCollectionBase&lt;'ElementCollectionType, 'ElementType (requires 'ElementCollectionType :&gt; ElementCollectionBase&lt;'ElementCollectionType, 'ElementType&gt; and 'ElementCollectionType : (new : unit -&gt; 'ElementCollectionType) and 'ElementType :&gt; Element and 'ElementType :&gt; IEquatable&lt;'ElementType&gt;)&gt; = class&#xA;    inherit KeyedCollection&lt;Guid, 'ElementType (requires 'ElementType :&gt; Element and 'ElementType :&gt; IEquatable&lt;'ElementType&gt;)&gt;&#xA;    interface ICloneable&#xA;    interface IDiffable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="ElementCollectionType">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.PerformancePoint.Scorecards.ElementCollectionBase&lt;ElementCollectionType,ElementType&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="ElementType">
      <Constraints>
        <BaseTypeName>Microsoft.PerformancePoint.Scorecards.Element</BaseTypeName>
        <InterfaceName>System.IEquatable&lt;ElementType&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.KeyedCollection&lt;System.Guid,ElementType&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Guid</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">ElementType</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.PerformancePoint.Scorecards.IDiffable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="ElementCollectionType">To be added.</typeparam>
    <typeparam name="ElementType">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ElementCollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ElementCollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.ICollection&lt;ElementType&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Generic.ICollection`1&lt;!ElementType&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.AddRange(System.Collections.Generic.ICollection{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (collection As ICollection(Of ElementType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Generic::ICollection&lt;ElementType&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Collections.Generic.ICollection&lt;'ElementType (requires 'ElementType :&gt; Microsoft.PerformancePoint.Scorecards.Element and 'ElementType :&gt; IEquatable&lt;'ElementType&gt;)&gt; -&gt; unit" Usage="elementCollectionBase.AddRange collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.ICollection&lt;ElementType&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual ElementCollectionType Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !ElementCollectionType Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ElementCollectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual ElementCollectionType Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; 'ElementCollectionType&#xA;override this.Clone : unit -&gt; 'ElementCollectionType" Usage="elementCollectionBase.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ElementCollectionType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diff">
      <MemberSignature Language="C#" Value="public Microsoft.PerformancePoint.Scorecards.DiffCollection Diff (ElementCollectionType oldCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.PerformancePoint.Scorecards.DiffCollection Diff(!ElementCollectionType oldCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.Diff(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Diff (oldCollection As ElementCollectionType) As DiffCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::PerformancePoint::Scorecards::DiffCollection ^ Diff(ElementCollectionType oldCollection);" />
      <MemberSignature Language="F#" Value="member this.Diff : 'ElementCollectionType -&gt; Microsoft.PerformancePoint.Scorecards.DiffCollection" Usage="elementCollectionBase.Diff oldCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PerformancePoint.Scorecards.DiffCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldCollection" Type="ElementCollectionType" />
      </Parameters>
      <Docs>
        <param name="oldCollection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (Predicate&lt;ElementType&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.Predicate`1&lt;!ElementType&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.Exists(System.Predicate{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (match As Predicate(Of ElementType)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(Predicate&lt;ElementType&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Exists : Predicate&lt;'ElementType (requires 'ElementType :&gt; Microsoft.PerformancePoint.Scorecards.Element and 'ElementType :&gt; IEquatable&lt;'ElementType&gt;)&gt; -&gt; bool" Usage="elementCollectionBase.Exists match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;ElementType&gt;" />
      </Parameters>
      <Docs>
        <param name="match">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public void ForEach (Action&lt;ElementType&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach(class System.Action`1&lt;!ElementType&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.ForEach(System.Action{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForEach (action As Action(Of ElementType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForEach(Action&lt;ElementType&gt; ^ action);" />
      <MemberSignature Language="F#" Value="member this.ForEach : Action&lt;'ElementType (requires 'ElementType :&gt; Microsoft.PerformancePoint.Scorecards.Element and 'ElementType :&gt; IEquatable&lt;'ElementType&gt;)&gt; -&gt; unit" Usage="elementCollectionBase.ForEach action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;ElementType&gt;" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementEnumerable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.PerformancePoint.Scorecards.Element&gt; GetElementEnumerable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.PerformancePoint.Scorecards.Element&gt; GetElementEnumerable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.GetElementEnumerable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementEnumerable () As IEnumerable(Of Element)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::PerformancePoint::Scorecards::Element ^&gt; ^ GetElementEnumerable();" />
      <MemberSignature Language="F#" Value="member this.GetElementEnumerable : unit -&gt; seq&lt;Microsoft.PerformancePoint.Scorecards.Element&gt;" Usage="elementCollectionBase.GetElementEnumerable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.PerformancePoint.Scorecards.Element&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected override Guid GetKeyForItem (ElementType item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Guid GetKeyForItem(!ElementType item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetKeyForItem (item As ElementType) As Guid" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Guid GetKeyForItem(ElementType item);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyForItem : 'ElementType -&gt; Guid&#xA;override this.GetKeyForItem : 'ElementType -&gt; Guid" Usage="elementCollectionBase.GetKeyForItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="ElementType" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfGuid">
      <MemberSignature Language="C#" Value="public int IndexOfGuid (Guid guid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfGuid(valuetype System.Guid guid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.IndexOfGuid(System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfGuid(Guid guid);" />
      <MemberSignature Language="F#" Value="member this.IndexOfGuid : Guid -&gt; int" Usage="elementCollectionBase.IndexOfGuid guid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="guid">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfGuidSafe">
      <MemberSignature Language="C#" Value="public ElementType IndexOfGuidSafe (Guid guid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !ElementType IndexOfGuidSafe(valuetype System.Guid guid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.IndexOfGuidSafe(System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ElementType IndexOfGuidSafe(Guid guid);" />
      <MemberSignature Language="F#" Value="member this.IndexOfGuidSafe : Guid -&gt; 'ElementType" Usage="elementCollectionBase.IndexOfGuidSafe guid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ElementType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="guid">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfName">
      <MemberSignature Language="C#" Value="public int IndexOfName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.IndexOfName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfName (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.IndexOfName : string -&gt; int" Usage="elementCollectionBase.IndexOfName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfNameSafe">
      <MemberSignature Language="C#" Value="public ElementType IndexOfNameSafe (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !ElementType IndexOfNameSafe(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.IndexOfNameSafe(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfNameSafe (name As String) As ElementType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ElementType IndexOfNameSafe(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.IndexOfNameSafe : string -&gt; 'ElementType" Usage="elementCollectionBase.IndexOfNameSafe name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ElementType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, ElementType item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !ElementType item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As ElementType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, ElementType item);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : int * 'ElementType -&gt; unit&#xA;override this.InsertItem : int * 'ElementType -&gt; unit" Usage="elementCollectionBase.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="ElementType" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public ElementType this[Guid key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !ElementType Item(valuetype System.Guid)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.Item(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As Guid) As ElementType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ElementType default[Guid] { ElementType get(Guid key); void set(Guid key, ElementType value); };" />
      <MemberSignature Language="F#" Value="member this.Item(Guid) : 'ElementType with get, set" Usage="Microsoft.PerformancePoint.Scorecards.ElementCollectionBase&lt;'ElementCollectionType, 'ElementType (requires 'ElementCollectionType :&gt; Microsoft.PerformancePoint.Scorecards.ElementCollectionBase&lt;'ElementCollectionType, 'ElementType&gt; and 'ElementCollectionType : (new : unit -&gt; 'ElementCollectionType) and 'ElementType :&gt; Microsoft.PerformancePoint.Scorecards.Element and 'ElementType :&gt; System.IEquatable&lt;'ElementType&gt;)&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ElementType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.PerformancePoint.Scorecards.IDiffable.Diff">
      <MemberSignature Language="C#" Value="Microsoft.PerformancePoint.Scorecards.DiffCollection IDiffable.Diff (object oldValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.PerformancePoint.Scorecards.DiffCollection Microsoft.PerformancePoint.Scorecards.IDiffable.Diff(object oldValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.Microsoft#PerformancePoint#Scorecards#IDiffable#Diff(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Diff (oldValue As Object) As DiffCollection Implements IDiffable.Diff" />
      <MemberSignature Language="C++ CLI" Value=" virtual Microsoft::PerformancePoint::Scorecards::DiffCollection ^ Microsoft.PerformancePoint.Scorecards.IDiffable.Diff(System::Object ^ oldValue) = Microsoft::PerformancePoint::Scorecards::IDiffable::Diff;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.PerformancePoint.Scorecards.IDiffable.Diff(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PerformancePoint.Scorecards.DiffCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, ElementType item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !ElementType item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As ElementType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, ElementType item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'ElementType -&gt; unit&#xA;override this.SetItem : int * 'ElementType -&gt; unit" Usage="elementCollectionBase.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="ElementType" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="elementCollectionBase.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.IComparer -&gt; unit" Usage="elementCollectionBase.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.ElementCollectionBase`2.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate();" />
      <MemberSignature Language="F#" Value="member this.Validate : unit -&gt; unit" Usage="elementCollectionBase.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>