<Type Name="AbstractVarianceAlgorithm" FullName="Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm">
  <TypeSignature Language="C#" Value="public abstract class AbstractVarianceAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AbstractVarianceAlgorithm extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AbstractVarianceAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class AbstractVarianceAlgorithm abstract" />
  <TypeSignature Language="F#" Value="type AbstractVarianceAlgorithm = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractVarianceAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AbstractVarianceAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateBasicVarianceFromTarget">
      <MemberSignature Language="C#" Value="protected abstract decimal CalculateBasicVarianceFromTarget (decimal target, decimal actual, bool shouldForcePositive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Decimal CalculateBasicVarianceFromTarget(valuetype System.Decimal target, valuetype System.Decimal actual, bool shouldForcePositive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.CalculateBasicVarianceFromTarget(System.Decimal,System.Decimal,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CalculateBasicVarianceFromTarget (target As Decimal, actual As Decimal, shouldForcePositive As Boolean) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Decimal CalculateBasicVarianceFromTarget(System::Decimal target, System::Decimal actual, bool shouldForcePositive);" />
      <MemberSignature Language="F#" Value="abstract member CalculateBasicVarianceFromTarget : decimal * decimal * bool -&gt; decimal" Usage="abstractVarianceAlgorithm.CalculateBasicVarianceFromTarget (target, actual, shouldForcePositive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Decimal" />
        <Parameter Name="actual" Type="System.Decimal" />
        <Parameter Name="shouldForcePositive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="shouldForcePositive">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateInfinityVariance">
      <MemberSignature Language="C#" Value="protected abstract void CalculateInfinityVariance (Microsoft.PerformancePoint.Scorecards.KpiMeasureValue actual, Microsoft.PerformancePoint.Scorecards.KpiMeasureValue target, Microsoft.PerformancePoint.Scorecards.Variance variance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CalculateInfinityVariance(class Microsoft.PerformancePoint.Scorecards.KpiMeasureValue actual, class Microsoft.PerformancePoint.Scorecards.KpiMeasureValue target, class Microsoft.PerformancePoint.Scorecards.Variance variance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.CalculateInfinityVariance(Microsoft.PerformancePoint.Scorecards.KpiMeasureValue,Microsoft.PerformancePoint.Scorecards.KpiMeasureValue,Microsoft.PerformancePoint.Scorecards.Variance)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void CalculateInfinityVariance(Microsoft::PerformancePoint::Scorecards::KpiMeasureValue ^ actual, Microsoft::PerformancePoint::Scorecards::KpiMeasureValue ^ target, Microsoft::PerformancePoint::Scorecards::Variance ^ variance);" />
      <MemberSignature Language="F#" Value="abstract member CalculateInfinityVariance : Microsoft.PerformancePoint.Scorecards.KpiMeasureValue * Microsoft.PerformancePoint.Scorecards.KpiMeasureValue * Microsoft.PerformancePoint.Scorecards.Variance -&gt; unit" Usage="abstractVarianceAlgorithm.CalculateInfinityVariance (actual, target, variance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actual" Type="Microsoft.PerformancePoint.Scorecards.KpiMeasureValue" />
        <Parameter Name="target" Type="Microsoft.PerformancePoint.Scorecards.KpiMeasureValue" />
        <Parameter Name="variance" Type="Microsoft.PerformancePoint.Scorecards.Variance" />
      </Parameters>
      <Docs>
        <param name="actual">To be added.</param>
        <param name="target">To be added.</param>
        <param name="variance">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateVarianceFromBestThreshold">
      <MemberSignature Language="C#" Value="protected virtual decimal CalculateVarianceFromBestThreshold (Microsoft.PerformancePoint.Scorecards.TargetValue targetValue, Microsoft.PerformancePoint.Scorecards.VarianceDisplayType displayType, Microsoft.PerformancePoint.Scorecards.VarianceType varianceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Decimal CalculateVarianceFromBestThreshold(class Microsoft.PerformancePoint.Scorecards.TargetValue targetValue, valuetype Microsoft.PerformancePoint.Scorecards.VarianceDisplayType displayType, valuetype Microsoft.PerformancePoint.Scorecards.VarianceType varianceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.CalculateVarianceFromBestThreshold(Microsoft.PerformancePoint.Scorecards.TargetValue,Microsoft.PerformancePoint.Scorecards.VarianceDisplayType,Microsoft.PerformancePoint.Scorecards.VarianceType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Decimal CalculateVarianceFromBestThreshold(Microsoft::PerformancePoint::Scorecards::TargetValue ^ targetValue, Microsoft::PerformancePoint::Scorecards::VarianceDisplayType displayType, Microsoft::PerformancePoint::Scorecards::VarianceType varianceType);" />
      <MemberSignature Language="F#" Value="abstract member CalculateVarianceFromBestThreshold : Microsoft.PerformancePoint.Scorecards.TargetValue * Microsoft.PerformancePoint.Scorecards.VarianceDisplayType * Microsoft.PerformancePoint.Scorecards.VarianceType -&gt; decimal&#xA;override this.CalculateVarianceFromBestThreshold : Microsoft.PerformancePoint.Scorecards.TargetValue * Microsoft.PerformancePoint.Scorecards.VarianceDisplayType * Microsoft.PerformancePoint.Scorecards.VarianceType -&gt; decimal" Usage="abstractVarianceAlgorithm.CalculateVarianceFromBestThreshold (targetValue, displayType, varianceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetValue" Type="Microsoft.PerformancePoint.Scorecards.TargetValue" />
        <Parameter Name="displayType" Type="Microsoft.PerformancePoint.Scorecards.VarianceDisplayType" />
        <Parameter Name="varianceType" Type="Microsoft.PerformancePoint.Scorecards.VarianceType" />
      </Parameters>
      <Docs>
        <param name="targetValue">To be added.</param>
        <param name="displayType">To be added.</param>
        <param name="varianceType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateVarianceFromTarget">
      <MemberSignature Language="C#" Value="protected virtual decimal CalculateVarianceFromTarget (Microsoft.PerformancePoint.Scorecards.TargetValue targetValue, Microsoft.PerformancePoint.Scorecards.VarianceDisplayType varianceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Decimal CalculateVarianceFromTarget(class Microsoft.PerformancePoint.Scorecards.TargetValue targetValue, valuetype Microsoft.PerformancePoint.Scorecards.VarianceDisplayType varianceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.CalculateVarianceFromTarget(Microsoft.PerformancePoint.Scorecards.TargetValue,Microsoft.PerformancePoint.Scorecards.VarianceDisplayType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Decimal CalculateVarianceFromTarget(Microsoft::PerformancePoint::Scorecards::TargetValue ^ targetValue, Microsoft::PerformancePoint::Scorecards::VarianceDisplayType varianceType);" />
      <MemberSignature Language="F#" Value="abstract member CalculateVarianceFromTarget : Microsoft.PerformancePoint.Scorecards.TargetValue * Microsoft.PerformancePoint.Scorecards.VarianceDisplayType -&gt; decimal&#xA;override this.CalculateVarianceFromTarget : Microsoft.PerformancePoint.Scorecards.TargetValue * Microsoft.PerformancePoint.Scorecards.VarianceDisplayType -&gt; decimal" Usage="abstractVarianceAlgorithm.CalculateVarianceFromTarget (targetValue, varianceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetValue" Type="Microsoft.PerformancePoint.Scorecards.TargetValue" />
        <Parameter Name="varianceType" Type="Microsoft.PerformancePoint.Scorecards.VarianceDisplayType" />
      </Parameters>
      <Docs>
        <param name="targetValue">To be added.</param>
        <param name="varianceType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateVarianceWhenTargetIsZero">
      <MemberSignature Language="C#" Value="protected abstract decimal CalculateVarianceWhenTargetIsZero (decimal actual);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Decimal CalculateVarianceWhenTargetIsZero(valuetype System.Decimal actual) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.CalculateVarianceWhenTargetIsZero(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CalculateVarianceWhenTargetIsZero (actual As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Decimal CalculateVarianceWhenTargetIsZero(System::Decimal actual);" />
      <MemberSignature Language="F#" Value="abstract member CalculateVarianceWhenTargetIsZero : decimal -&gt; decimal" Usage="abstractVarianceAlgorithm.CalculateVarianceWhenTargetIsZero actual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actual" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="actual">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeVariance">
      <MemberSignature Language="C#" Value="public Microsoft.PerformancePoint.Scorecards.Variance ComputeVariance (Microsoft.PerformancePoint.Scorecards.TargetValue targetValue, Microsoft.PerformancePoint.Scorecards.GridVarianceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.PerformancePoint.Scorecards.Variance ComputeVariance(class Microsoft.PerformancePoint.Scorecards.TargetValue targetValue, class Microsoft.PerformancePoint.Scorecards.GridVarianceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.ComputeVariance(Microsoft.PerformancePoint.Scorecards.TargetValue,Microsoft.PerformancePoint.Scorecards.GridVarianceSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::PerformancePoint::Scorecards::Variance ^ ComputeVariance(Microsoft::PerformancePoint::Scorecards::TargetValue ^ targetValue, Microsoft::PerformancePoint::Scorecards::GridVarianceSettings ^ settings);" />
      <MemberSignature Language="F#" Value="member this.ComputeVariance : Microsoft.PerformancePoint.Scorecards.TargetValue * Microsoft.PerformancePoint.Scorecards.GridVarianceSettings -&gt; Microsoft.PerformancePoint.Scorecards.Variance" Usage="abstractVarianceAlgorithm.ComputeVariance (targetValue, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PerformancePoint.Scorecards.Variance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetValue" Type="Microsoft.PerformancePoint.Scorecards.TargetValue" />
        <Parameter Name="settings" Type="Microsoft.PerformancePoint.Scorecards.GridVarianceSettings" />
      </Parameters>
      <Docs>
        <param name="targetValue">To be added.</param>
        <param name="settings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBandingThreshold">
      <MemberSignature Language="C#" Value="protected abstract decimal GetBandingThreshold (Microsoft.PerformancePoint.Scorecards.TargetValue targetValue, out bool shouldForcePositive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Decimal GetBandingThreshold(class Microsoft.PerformancePoint.Scorecards.TargetValue targetValue, [out] bool&amp; shouldForcePositive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.GetBandingThreshold(Microsoft.PerformancePoint.Scorecards.TargetValue,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Decimal GetBandingThreshold(Microsoft::PerformancePoint::Scorecards::TargetValue ^ targetValue, [Runtime::InteropServices::Out] bool % shouldForcePositive);" />
      <MemberSignature Language="F#" Value="abstract member GetBandingThreshold : Microsoft.PerformancePoint.Scorecards.TargetValue *  -&gt; decimal" Usage="abstractVarianceAlgorithm.GetBandingThreshold (targetValue, shouldForcePositive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetValue" Type="Microsoft.PerformancePoint.Scorecards.TargetValue" />
        <Parameter Name="shouldForcePositive" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targetValue">To be added.</param>
        <param name="shouldForcePositive">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTheInvert">
      <MemberSignature Language="C#" Value="protected abstract decimal GetTheInvert (decimal target, decimal actual, decimal variance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Decimal GetTheInvert(valuetype System.Decimal target, valuetype System.Decimal actual, valuetype System.Decimal variance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.GetTheInvert(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetTheInvert (target As Decimal, actual As Decimal, variance As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Decimal GetTheInvert(System::Decimal target, System::Decimal actual, System::Decimal variance);" />
      <MemberSignature Language="F#" Value="abstract member GetTheInvert : decimal * decimal * decimal -&gt; decimal" Usage="abstractVarianceAlgorithm.GetTheInvert (target, actual, variance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Decimal" />
        <Parameter Name="actual" Type="System.Decimal" />
        <Parameter Name="variance" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="variance">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOfInfinity">
      <MemberSignature Language="C#" Value="protected static int SignOfInfinity (int infinity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 SignOfInfinity(int32 infinity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.SignOfInfinity(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function SignOfInfinity (infinity As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int SignOfInfinity(int infinity);" />
      <MemberSignature Language="F#" Value="static member SignOfInfinity : int -&gt; int" Usage="Microsoft.PerformancePoint.Scorecards.AbstractVarianceAlgorithm.SignOfInfinity infinity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infinity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="infinity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>