<Type Name="IListOfTExtensions" FullName="Microsoft.PerformancePoint.IListOfTExtensions">
  <TypeSignature Language="C#" Value="public static class IListOfTExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IListOfTExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PerformancePoint.IListOfTExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module IListOfTExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class IListOfTExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type IListOfTExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PerformancePoint.Scorecards.Common</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRange&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static void AddRange&lt;TSource&gt; (this System.Collections.Generic.IList&lt;TSource&gt; list, System.Collections.Generic.IList&lt;TSource&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddRange&lt;TSource&gt;(class System.Collections.Generic.IList`1&lt;!!TSource&gt; list, class System.Collections.Generic.IList`1&lt;!!TSource&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.IListOfTExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddRange(Of TSource) (list As IList(Of TSource), items As IList(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddRange(System::Collections::Generic::IList&lt;TSource&gt; ^ list, System::Collections::Generic::IList&lt;TSource&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member AddRange : System.Collections.Generic.IList&lt;'Source&gt; * System.Collections.Generic.IList&lt;'Source&gt; -&gt; unit" Usage="Microsoft.PerformancePoint.IListOfTExtensions.AddRange (list, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Common</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;TSource&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="list">To be added.</param>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static void Replace&lt;TSource&gt; (this System.Collections.Generic.IList&lt;TSource&gt; list, System.Collections.Generic.IList&lt;TSource&gt; newList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Replace&lt;TSource&gt;(class System.Collections.Generic.IList`1&lt;!!TSource&gt; list, class System.Collections.Generic.IList`1&lt;!!TSource&gt; newList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PerformancePoint.IListOfTExtensions.Replace``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Replace(Of TSource) (list As IList(Of TSource), newList As IList(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Replace(System::Collections::Generic::IList&lt;TSource&gt; ^ list, System::Collections::Generic::IList&lt;TSource&gt; ^ newList);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Collections.Generic.IList&lt;'Source&gt; * System.Collections.Generic.IList&lt;'Source&gt; -&gt; unit" Usage="Microsoft.PerformancePoint.IListOfTExtensions.Replace (list, newList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PerformancePoint.Scorecards.Common</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;TSource&gt;" RefType="this" />
        <Parameter Name="newList" Type="System.Collections.Generic.IList&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="list">To be added.</param>
        <param name="newList">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>