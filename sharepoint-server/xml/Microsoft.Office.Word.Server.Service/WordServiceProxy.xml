<Type Name="WordServiceProxy" FullName="Microsoft.Office.Word.Server.Service.WordServiceProxy">
  <TypeSignature Language="C#" Value="public sealed class WordServiceProxy : Microsoft.SharePoint.Administration.SPIisWebServiceProxy, IFormattable, Microsoft.SharePoint.Administration.IServiceProxyAdministration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WordServiceProxy extends Microsoft.SharePoint.Administration.SPIisWebServiceProxy implements class Microsoft.SharePoint.Administration.IServiceProxyAdministration, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Word.Server.Service.WordServiceProxy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WordServiceProxy&#xA;Inherits SPIisWebServiceProxy&#xA;Implements IFormattable, IServiceProxyAdministration" />
  <TypeSignature Language="C++ CLI" Value="public ref class WordServiceProxy sealed : Microsoft::SharePoint::Administration::SPIisWebServiceProxy, IFormattable, Microsoft::SharePoint::Administration::IServiceProxyAdministration" />
  <TypeSignature Language="F#" Value="type WordServiceProxy = class&#xA;    inherit SPIisWebServiceProxy&#xA;    interface IServiceProxyAdministration&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Administration.SPIisWebServiceProxy</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SharePoint.Administration.IServiceProxyAdministration</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Administration.SupportedServiceApplication("A6F8A2FD-E074-4D54-A5AB-70CD9791B22D", "1.0.0.0", typeof(Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("C089088D-9820-4D03-83EF-12C77CEEBC7D")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines a proxy to the Word Automation Services and is directly derived from the <see cref="T:Microsoft.SharePoint.Administration.SPIisWebServiceProxy" /> class.</summary>
    <remarks>
      <para>There is exactly one <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceProxy" /> object installed in the farm; it represents the Word Automation Services client that is installed in the farm.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WordServiceProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordServiceProxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WordServiceProxy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Reserved for internal use.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProxy">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPServiceApplicationProxy CreateProxy (Type serviceApplicationProxyType, string name, Uri serviceApplicationUri, Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPServiceApplicationProxy CreateProxy(class System.Type serviceApplicationProxyType, string name, class System.Uri serviceApplicationUri, class Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordServiceProxy.CreateProxy(System.Type,System.String,System.Uri,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProxy (serviceApplicationProxyType As Type, name As String, serviceApplicationUri As Uri, provisioningContext As SPServiceProvisioningContext) As SPServiceApplicationProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPServiceApplicationProxy ^ CreateProxy(Type ^ serviceApplicationProxyType, System::String ^ name, Uri ^ serviceApplicationUri, Microsoft::SharePoint::Administration::SPServiceProvisioningContext ^ provisioningContext);" />
      <MemberSignature Language="F#" Value="abstract member CreateProxy : Type * string * Uri * Microsoft.SharePoint.Administration.SPServiceProvisioningContext -&gt; Microsoft.SharePoint.Administration.SPServiceApplicationProxy&#xA;override this.CreateProxy : Type * string * Uri * Microsoft.SharePoint.Administration.SPServiceProvisioningContext -&gt; Microsoft.SharePoint.Administration.SPServiceApplicationProxy" Usage="wordServiceProxy.CreateProxy (serviceApplicationProxyType, name, serviceApplicationUri, provisioningContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceProxyAdministration.CreateProxy(System.Type,System.String,System.Uri,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPServiceApplicationProxy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceApplicationUri" Type="System.Uri" />
        <Parameter Name="provisioningContext" Type="Microsoft.SharePoint.Administration.SPServiceProvisioningContext" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxyType">A <see cref="System.Type" /> that specifies the type of the service application proxy.</param>
        <param name="name">A string that specifies the name of the service application proxy.</param>
        <param name="serviceApplicationUri">A <see cref="System.Uri" /> that specifies the address of the service application proxy.</param>
        <param name="provisioningContext">A <see cref="T:Microsoft.SharePoint.Administration.SPServiceProvisioningContext" /> that specifies the default provisioning parameters for the service application proxy.</param>
        <summary>Creates a new service application proxy.</summary>
        <returns>Returns <see cref="T:Microsoft.SharePoint.Administration.SPServiceApplicationProxy" />.</returns>
        <remarks>
          <para>If the service application proxy already exists, this method returns the existing <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateProxyLink">
      <MemberSignature Language="C#" Value="public override Microsoft.SharePoint.Administration.SPAdministrationLink GetCreateProxyLink (Type serviceApplicationProxyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.SharePoint.Administration.SPAdministrationLink GetCreateProxyLink(class System.Type serviceApplicationProxyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordServiceProxy.GetCreateProxyLink(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateProxyLink (serviceApplicationProxyType As Type) As SPAdministrationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::SharePoint::Administration::SPAdministrationLink ^ GetCreateProxyLink(Type ^ serviceApplicationProxyType);" />
      <MemberSignature Language="F#" Value="override this.GetCreateProxyLink : Type -&gt; Microsoft.SharePoint.Administration.SPAdministrationLink" Usage="wordServiceProxy.GetCreateProxyLink serviceApplicationProxyType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceProxyAdministration.GetCreateProxyLink(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPAdministrationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxyType">A <see cref="System.Type" /> that specifies the type of the service application proxy.</param>
        <summary>Overrides <see cref="M:Microsoft.SharePoint.Administration.SPServiceProxy.GetCreateProxyLink(System.Type)" />.</summary>
        <returns>Returns <see cref="T:Microsoft.SharePoint.Administration.SPAdministrationLink" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyTypeDescription">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPPersistedTypeDescription GetProxyTypeDescription (Type serviceApplicationProxyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPPersistedTypeDescription GetProxyTypeDescription(class System.Type serviceApplicationProxyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordServiceProxy.GetProxyTypeDescription(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxyTypeDescription (serviceApplicationProxyType As Type) As SPPersistedTypeDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPPersistedTypeDescription ^ GetProxyTypeDescription(Type ^ serviceApplicationProxyType);" />
      <MemberSignature Language="F#" Value="abstract member GetProxyTypeDescription : Type -&gt; Microsoft.SharePoint.Administration.SPPersistedTypeDescription&#xA;override this.GetProxyTypeDescription : Type -&gt; Microsoft.SharePoint.Administration.SPPersistedTypeDescription" Usage="wordServiceProxy.GetProxyTypeDescription serviceApplicationProxyType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceProxyAdministration.GetProxyTypeDescription(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPPersistedTypeDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationProxyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationProxyType">A <see cref="System.Type" /> that specifies the type of the service application proxy.</param>
        <summary>Returns a description of the specified service application proxy type.</summary>
        <returns>Returns <see cref="T:Microsoft.SharePoint.Administration.SPPersistedTypeDescription" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyTypes">
      <MemberSignature Language="C#" Value="public Type[] GetProxyTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetProxyTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordServiceProxy.GetProxyTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxyTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetProxyTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetProxyTypes : unit -&gt; Type[]&#xA;override this.GetProxyTypes : unit -&gt; Type[]" Usage="wordServiceProxy.GetProxyTypes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceProxyAdministration.GetProxyTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the service application proxy types supported by the service.</summary>
        <returns>Returns <see cref="T:System.Type" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordServiceProxy.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="wordServiceProxy.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="System.String" /> that specifies the format to use. If a null reference (Nothing in Visual Basic), the default format defined for the type of the <see cref="System.IFormattable" /> implementation is used.</param>
        <param name="formatProvider">The <see cref="System.IFormatProvider" /> to use to format the value. If a null reference (Nothing in Visual Basic), the numeric format information from the current locale setting of the operating system is used.</param>
        <summary>Formats the value of the current instance using the specified format.</summary>
        <returns>Returns <see cref="T:System.String" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Word.Server.Service.WordServiceProxy.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="Microsoft.Office.Word.Server.Service.WordServiceProxy.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies the type name of the object.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>