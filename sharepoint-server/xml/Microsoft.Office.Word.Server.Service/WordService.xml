<Type Name="WordService" FullName="Microsoft.Office.Word.Server.Service.WordService">
  <TypeSignature Language="C#" Value="public sealed class WordService : Microsoft.SharePoint.Administration.SPIisWebService, IFormattable, Microsoft.SharePoint.Administration.IServiceAdministration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WordService extends Microsoft.SharePoint.Administration.SPIisWebService implements class Microsoft.SharePoint.Administration.IServiceAdministration, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Word.Server.Service.WordService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WordService&#xA;Inherits SPIisWebService&#xA;Implements IFormattable, IServiceAdministration" />
  <TypeSignature Language="C++ CLI" Value="public ref class WordService sealed : Microsoft::SharePoint::Administration::SPIisWebService, IFormattable, Microsoft::SharePoint::Administration::IServiceAdministration" />
  <TypeSignature Language="F#" Value="type WordService = class&#xA;    inherit SPIisWebService&#xA;    interface IServiceAdministration&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Administration.SPIisWebService</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SharePoint.Administration.IServiceAdministration</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("04724CFC-FD2B-4FAE-B23F-A2EB1F45B986")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines the Word Automation Services globally and is directly derived from the <see cref="T:Microsoft.SharePoint.Administration.SPIisWebService" /> class.</summary>
    <remarks>
      <para>There is exactly one <see cref="T:Microsoft.Office.Word.Server.Service.WordService" /> object in the configuration database; it represents the Word Automation Services that is installed in the farm.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WordService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WordService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Reserved for internal use.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WordService (string name, Microsoft.SharePoint.Administration.SPFarm farm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.SharePoint.Administration.SPFarm farm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordService.#ctor(System.String,Microsoft.SharePoint.Administration.SPFarm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, farm As SPFarm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WordService(System::String ^ name, Microsoft::SharePoint::Administration::SPFarm ^ farm);" />
      <MemberSignature Language="F#" Value="new Microsoft.Office.Word.Server.Service.WordService : string * Microsoft.SharePoint.Administration.SPFarm -&gt; Microsoft.Office.Word.Server.Service.WordService" Usage="new Microsoft.Office.Word.Server.Service.WordService (name, farm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="farm" Type="Microsoft.SharePoint.Administration.SPFarm" />
      </Parameters>
      <Docs>
        <param name="name">Not used.</param>
        <param name="farm">An <see cref="T:Microsoft.SharePoint.Administration.SPFarm" /> that specifies the SharePoint Server 2010 farm where the service is created.</param>
        <summary>Creates a new instance of <see cref="M:Microsoft.Office.Word.Server.Service.WordService.#ctor(System.String,Microsoft.SharePoint.Administration.SPFarm)" /> on the specified SharePoint Server 2010 farm.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateApplication">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPServiceApplication CreateApplication (string name, Type serviceApplicationType, Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPServiceApplication CreateApplication(string name, class System.Type serviceApplicationType, class Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordService.CreateApplication(System.String,System.Type,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateApplication (name As String, serviceApplicationType As Type, provisioningContext As SPServiceProvisioningContext) As SPServiceApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPServiceApplication ^ CreateApplication(System::String ^ name, Type ^ serviceApplicationType, Microsoft::SharePoint::Administration::SPServiceProvisioningContext ^ provisioningContext);" />
      <MemberSignature Language="F#" Value="abstract member CreateApplication : string * Type * Microsoft.SharePoint.Administration.SPServiceProvisioningContext -&gt; Microsoft.SharePoint.Administration.SPServiceApplication&#xA;override this.CreateApplication : string * Type * Microsoft.SharePoint.Administration.SPServiceProvisioningContext -&gt; Microsoft.SharePoint.Administration.SPServiceApplication" Usage="wordService.CreateApplication (name, serviceApplicationType, provisioningContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceAdministration.CreateApplication(System.String,System.Type,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPServiceApplication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceApplicationType" Type="System.Type" />
        <Parameter Name="provisioningContext" Type="Microsoft.SharePoint.Administration.SPServiceProvisioningContext" />
      </Parameters>
      <Docs>
        <param name="name">A <see cref="System.String" /> that specifies the name of the new service application.</param>
        <param name="serviceApplicationType">A <see cref="System.Type" /> that specifies the type of the new service application.</param>
        <param name="provisioningContext">A <see cref="T:Microsoft.SharePoint.Administration.SPServiceProvisioningContext" /> that specifies the default provisioning parameters for the new service application.</param>
        <summary>Creates a new service application.</summary>
        <returns>Returns <see cref="T:Microsoft.SharePoint.Administration.SPServiceApplication" />.</returns>
        <remarks>
          <para>If the service application already exists, this method returns the existing <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplication" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProxy">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPServiceApplicationProxy CreateProxy (string name, Microsoft.SharePoint.Administration.SPServiceApplication serviceApplication, Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPServiceApplicationProxy CreateProxy(string name, class Microsoft.SharePoint.Administration.SPServiceApplication serviceApplication, class Microsoft.SharePoint.Administration.SPServiceProvisioningContext provisioningContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordService.CreateProxy(System.String,Microsoft.SharePoint.Administration.SPServiceApplication,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProxy (name As String, serviceApplication As SPServiceApplication, provisioningContext As SPServiceProvisioningContext) As SPServiceApplicationProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPServiceApplicationProxy ^ CreateProxy(System::String ^ name, Microsoft::SharePoint::Administration::SPServiceApplication ^ serviceApplication, Microsoft::SharePoint::Administration::SPServiceProvisioningContext ^ provisioningContext);" />
      <MemberSignature Language="F#" Value="abstract member CreateProxy : string * Microsoft.SharePoint.Administration.SPServiceApplication * Microsoft.SharePoint.Administration.SPServiceProvisioningContext -&gt; Microsoft.SharePoint.Administration.SPServiceApplicationProxy&#xA;override this.CreateProxy : string * Microsoft.SharePoint.Administration.SPServiceApplication * Microsoft.SharePoint.Administration.SPServiceProvisioningContext -&gt; Microsoft.SharePoint.Administration.SPServiceApplicationProxy" Usage="wordService.CreateProxy (name, serviceApplication, provisioningContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceAdministration.CreateProxy(System.String,Microsoft.SharePoint.Administration.SPServiceApplication,Microsoft.SharePoint.Administration.SPServiceProvisioningContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPServiceApplicationProxy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceApplication" Type="Microsoft.SharePoint.Administration.SPServiceApplication" />
        <Parameter Name="provisioningContext" Type="Microsoft.SharePoint.Administration.SPServiceProvisioningContext" />
      </Parameters>
      <Docs>
        <param name="name">A <see cref="System.String" /> that specifies the name of the new service application proxy.</param>
        <param name="serviceApplication">The <see cref="T:Microsoft.SharePoint.Administration.SPServiceApplication" /> to which the service application proxy is added.</param>
        <param name="provisioningContext">A <see cref="T:Microsoft.SharePoint.Administration.SPServiceProvisioningContext" /> that specifies the default provisioning parameters for the new service application proxy.</param>
        <summary>Creates a new service application proxy.</summary>
        <returns>Returns <see cref="T:Microsoft.SharePoint.Administration.SPServiceApplicationProxy" />.</returns>
        <remarks>
          <para>If the service application proxy already exists, this method returns the existing <see cref="T:Microsoft.Office.Word.Server.Service.WordServiceApplicationProxy" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTypeDescription">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Administration.SPPersistedTypeDescription GetApplicationTypeDescription (Type serviceApplicationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.SharePoint.Administration.SPPersistedTypeDescription GetApplicationTypeDescription(class System.Type serviceApplicationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordService.GetApplicationTypeDescription(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationTypeDescription (serviceApplicationType As Type) As SPPersistedTypeDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::SharePoint::Administration::SPPersistedTypeDescription ^ GetApplicationTypeDescription(Type ^ serviceApplicationType);" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationTypeDescription : Type -&gt; Microsoft.SharePoint.Administration.SPPersistedTypeDescription&#xA;override this.GetApplicationTypeDescription : Type -&gt; Microsoft.SharePoint.Administration.SPPersistedTypeDescription" Usage="wordService.GetApplicationTypeDescription serviceApplicationType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceAdministration.GetApplicationTypeDescription(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPPersistedTypeDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationType">A <see cref="System.Type" /> that specifies the service application type.</param>
        <summary>Returns the description of the specified service application type.</summary>
        <returns>Returns <see cref="T:Microsoft.SharePoint.Administration.SPPersistedTypeDescription" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationTypes">
      <MemberSignature Language="C#" Value="public Type[] GetApplicationTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetApplicationTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordService.GetApplicationTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplicationTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetApplicationTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationTypes : unit -&gt; Type[]&#xA;override this.GetApplicationTypes : unit -&gt; Type[]" Usage="wordService.GetApplicationTypes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceAdministration.GetApplicationTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the service application types supported by the service.</summary>
        <returns>Returns <see cref="T:System.Type" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateApplicationLink">
      <MemberSignature Language="C#" Value="public override Microsoft.SharePoint.Administration.SPAdministrationLink GetCreateApplicationLink (Type serviceApplicationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.SharePoint.Administration.SPAdministrationLink GetCreateApplicationLink(class System.Type serviceApplicationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordService.GetCreateApplicationLink(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateApplicationLink (serviceApplicationType As Type) As SPAdministrationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::SharePoint::Administration::SPAdministrationLink ^ GetCreateApplicationLink(Type ^ serviceApplicationType);" />
      <MemberSignature Language="F#" Value="override this.GetCreateApplicationLink : Type -&gt; Microsoft.SharePoint.Administration.SPAdministrationLink" Usage="wordService.GetCreateApplicationLink serviceApplicationType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.IServiceAdministration.GetCreateApplicationLink(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Administration.SPAdministrationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceApplicationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceApplicationType">A <see cref="System.Type" /> that specifies the type of the service application.</param>
        <summary>Returns the uniform resource locator (URL) for the administrative Web site that you use to create a new service application.</summary>
        <returns>Returns <see cref="T:Microsoft.SharePoint.Administration.SPAdministrationLink" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Word.Server.Service.WordService.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="wordService.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="System.String" /> that specifies the format to use. If a null reference (Nothing in Visual Basic), the default format defined for the type of the <see cref="System.IFormattable" /> implementation is used.</param>
        <param name="formatProvider">The <see cref="System.IFormatProvider" /> to use to format the value. If a null reference (Nothing in Visual Basic), the numeric format information from the current locale setting of the operating system is used.</param>
        <summary>Formats the value of the current instance using the specified format.</summary>
        <returns>Returns <see cref="T:System.String" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Word.Server.Service.WordService.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="Microsoft.Office.Word.Server.Service.WordService.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Word.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies the type name of the object.</summary>
        <value>Returns <see cref="T:System.String" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>