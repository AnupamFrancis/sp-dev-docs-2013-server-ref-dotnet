<Type Name="TaxonomyNavigationContext" FullName="Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext">
  <TypeSignature Language="C#" Value="public sealed class TaxonomyNavigationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TaxonomyNavigationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TaxonomyNavigationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaxonomyNavigationContext sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reports information about processing the <see cref="T:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigation" /> feature during the current HTTP request.</summary>
    <remarks>
      <para>This class has a global instance (the <see cref="P:Microsoft.SharePoint.PublishingNavigation.TaxonomyNavigationContext.Current" /> property for each thread of an HTTP request that is similar to the <see cref="P:Microsoft.SharePoint.SPContext.Current" /> property. It exposes information about whether the current HTTP request involved a friendly URL or a catalog friendly URL, and which <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.NavigtionTerm" /> property was used to define it.</para>
      <para>The <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.Current" /> property is registered in the <see cref="T:System.Web.HttpContext" /> table.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaxonomyNavigationContext (System.Web.HttpContext ownerHttpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpContext ownerHttpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.#ctor(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerHttpContext As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaxonomyNavigationContext(System::Web::HttpContext ^ ownerHttpContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerHttpContext" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="ownerHttpContext">To be added.</param>
        <summary>Initializes a new instance of a <see cref="T:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext" /> object to be associated with a specific <see cref="T:System.Web.HttpContext" /> object.</summary>
        <remarks>
          <para>This constructor is rarely used. Normally, a <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.Current" /> static property is a more convenient way to get the context.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogUrlSegments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; CatalogUrlSegments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; CatalogUrlSegments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.CatalogUrlSegments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogUrlSegments As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ CatalogUrlSegments { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns additional URL segments that define the catalog key.</summary>
        <value>Additional URL segments that define a catalog key if the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.FriendlyUrlTerm" /> property is not null and the current page is a catalog URL; otherwise, a null reference (Nothing in Visual Basic).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As TaxonomyNavigationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SharePoint::Publishing::Navigation::TaxonomyNavigationContext ^ Current { Microsoft::SharePoint::Publishing::Navigation::TaxonomyNavigationContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an instance of a <see cref="T:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext" /> object that is associated with the current HTTP request that is based on the <see cref="P:System.Web.HttpContext.Current" /> property.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FriendlyUrlTerm">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Publishing.Navigation.NavigationTerm FriendlyUrlTerm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.Publishing.Navigation.NavigationTerm FriendlyUrlTerm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.FriendlyUrlTerm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FriendlyUrlTerm As NavigationTerm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::Publishing::Navigation::NavigationTerm ^ FriendlyUrlTerm { Microsoft::SharePoint::Publishing::Navigation::NavigationTerm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Publishing.Navigation.NavigationTerm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:Microsoft.SharePoint.Publishing.Navigation.NavigationTerm" /> object if one exists and is set to <b>FriendlyUrl</b>.</summary>
        <value>If a <b>NavigationTerm</b> object exists and is of type <b>NavigationLinkType.FriendlyUrl</b>, then <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.FriendlyUrlTerm" /> returns it; otherwise, a null reference (Nothing in Visual Basic).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCatalogUrl">
      <MemberSignature Language="C#" Value="public bool HasCatalogUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasCatalogUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.HasCatalogUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasCatalogUrl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasCatalogUrl { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the context <see cref="T:Microsoft.SharePoint.Publishing.Navigation.NavigationTerm" /> object has a catalog friendly URL.</summary>
        <value>
          <b>true</b> if the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.FriendlyUrlTerm" /> property exists and is not null, and the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.CatalogUrlSegments" /> property contains one or more items (i.e., the URL is a catalog-friendly URL); otherwise, <b>false</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFriendlyUrl">
      <MemberSignature Language="C#" Value="public bool HasFriendlyUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFriendlyUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.HasFriendlyUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFriendlyUrl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFriendlyUrl { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that indicates whether the taxonomy navigation context has a friendly URL.</summary>
        <value>
          <b>true</b> if the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.FriendlyUrlTerm" /> property exists and the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.CatalogUrlSegments" /> property is empty, that is, if the active URL is a friendly URL; otherwise, <b>false</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNavigationContext">
      <MemberSignature Language="C#" Value="public bool HasNavigationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNavigationContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.HasNavigationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasNavigationContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasNavigationContext { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the current T:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext object  has a navigation term. </summary>
        <value>
          <b>true</b> if the current <see cref="T:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNabvigationContext" /> object has a P:Microsoft.SharePoint.Publishing.Navigation.NavigationContext.NavigationTerm property that does not return a null reference (Nothing in Visual Basic); otherwise, <b>false</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationTerm">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Publishing.Navigation.NavigationTerm NavigationTerm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.Publishing.Navigation.NavigationTerm NavigationTerm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.NavigationTerm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationTerm As NavigationTerm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::Publishing::Navigation::NavigationTerm ^ NavigationTerm { Microsoft::SharePoint::Publishing::Navigation::NavigationTerm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Publishing.Navigation.NavigationTerm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the context navigation term for the current HTTP request.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Typically, this property is assigned automatically when the managed navigation feature rewrites a friendly URL or a catalog-friendly URL. If the current request URL is not a friendly URL, the context T:Microsoft.SharePoint.Publishing.Navigation.NavigationTerm object can be specified via the URL query parameters <b>TermStoreId</b>, <b>TermSetId</b>, and <b>TermId</b>. Server-side code can also specify the context <b>NavigationTerm</b> by calling the <see cref="M:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.SetNavigationTerm(Microsoft.SharePoint.Publishing.Navigation.NavigationTerm,System.String[])" /> method.</para>
          <para>
            <b>Note</b>: Although the context NavigationTerm object is typically a friendly URL, it is valid for it to be a <see cref="F:Microsoft.SharePoint.Publishing.Navigation.NavigationLinkType.SimpleLink" /> instead. Use the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.FriendlyUrlTerm" /> property to ignore such terms.</para>
          <para>Once a context <b>NavigationTerm</b> is assigned, it cannot be changed for the duration of the HTTP request, which ensures that the page rendering is deterministic. Because of this behavior, care should be taken to ensure that controls are initialized in a predictable order.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedDisplayUrl">
      <MemberSignature Language="C#" Value="public string ResolvedDisplayUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedDisplayUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.ResolvedDisplayUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedDisplayUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResolvedDisplayUrl { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the friendly URL or catalog friendly URL for the current request in server-relative format without URL query parameters.</summary>
        <value>If the context <see cref="T:Microsoft.SharePoint.Publishing.Navigation.NavigationTerm" />object represents a friendly URL, then the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.ResolvedDisplayUrl" /> property returns the same value as the <see cref="M:Microsoft.SharePoint.Publishing.Navigation.NavigationTermSetItem.GetResolvedDisplayUrl(System.String)" /> method. If it represents a catalog friendly URL, then the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.CatalogUrlSegments" /> property is appended to construct a complete catalog friendly URL. In all other cases, the return value is an empty string.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RewrittenCatalogUrlSegments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; RewrittenCatalogUrlSegments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; RewrittenCatalogUrlSegments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.RewrittenCatalogUrlSegments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RewrittenCatalogUrlSegments As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ RewrittenCatalogUrlSegments { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets catalog friendly URL segments that were assigned as part of a URL rewriting operation for a catalog-friendly URL.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This property returns catalog-friendly URL segments that were assigned as part of a URL rewriting operation for a catalog-friendly URL. If the context was specified some other way—such as with the <see cref="M:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.SetNavigationTerm(Microsoft.SharePoint.Publishing.Navigation.NavigationTerm,System.String[])" /> method, then this list will be empty, even though the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.CatalogUrlSegments" /> property may not be empty.</para>
          <para>This property is intended for advanced scenarios. When in doubt, use the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.CatalogUrlSegments" /> property instead.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RewrittenNavigationTerm">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Publishing.Navigation.NavigationTerm RewrittenNavigationTerm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.Publishing.Navigation.NavigationTerm RewrittenNavigationTerm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.RewrittenNavigationTerm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RewrittenNavigationTerm As NavigationTerm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::Publishing::Navigation::NavigationTerm ^ RewrittenNavigationTerm { Microsoft::SharePoint::Publishing::Navigation::NavigationTerm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Publishing.Navigation.NavigationTerm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:Microsoft.SharePoint.Publishing.Navigation.NavigationTerm" /> object  that was assigned as part of a URL rewriting operation for a friendly URL or a catalog-friendly URL.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If the context term was specified some other way—such as by using the <see cref="M:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.SetNavigationTerm(Microsoft.SharePoint.Publishing.Navigation.NavigationTerm,System.String[])" /> method), then the property is null even though the <b>NavigationTerm</b> would not be null.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNavigationTerm">
      <MemberSignature Language="C#" Value="public void SetNavigationTerm (Microsoft.SharePoint.Publishing.Navigation.NavigationTerm term, string[] catalogUrlSegments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNavigationTerm(class Microsoft.SharePoint.Publishing.Navigation.NavigationTerm term, string[] catalogUrlSegments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.SetNavigationTerm(Microsoft.SharePoint.Publishing.Navigation.NavigationTerm,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNavigationTerm (term As NavigationTerm, catalogUrlSegments As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNavigationTerm(Microsoft::SharePoint::Publishing::Navigation::NavigationTerm ^ term, cli::array &lt;System::String ^&gt; ^ catalogUrlSegments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="term" Type="Microsoft.SharePoint.Publishing.Navigation.NavigationTerm" />
        <Parameter Name="catalogUrlSegments" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="term">The <see cref="T:Microsoft.SharePoint.Publishing.Navigation.NavigationTerm" /> object to set.</param>
        <param name="catalogUrlSegments">To be added.</param>
        <summary>Assigns explicitly the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.NavigationTerm" /> property and the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext.CatalogUrlSegments" /> property when the current request URL is not a friendly URL. </summary>
        <remarks>
          <para>This method is intended for use in advanced scenarios, such as with an administration dialog box that does not have a friendly URL, but needs to render Web Part controls that normally expect a context NavigationTerm object to be specified via the <see cref="T:Microsoft.SharePoint.Publishing.Navigation.TaxonomyNavigationContext" /> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>