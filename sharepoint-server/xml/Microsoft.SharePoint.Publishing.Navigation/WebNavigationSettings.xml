<Type Name="WebNavigationSettings" FullName="Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings">
  <TypeSignature Language="C#" Value="public sealed class WebNavigationSettings : Microsoft.SharePoint.Publishing.FreezableObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebNavigationSettings extends Microsoft.SharePoint.Publishing.FreezableObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebNavigationSettings&#xA;Inherits FreezableObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebNavigationSettings sealed : Microsoft::SharePoint::Publishing::FreezableObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Publishing.FreezableObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Client.ClientCallableType(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful, ServerTypeId="00AC02AA-86E2-4D48-AA73-341ED7962374")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Manages the navigation settings for a publishing site. </summary>
    <remarks>
      <para>The <see cref="T:Microsoft.SharePoint.Publishing.Navigation.SiteNavigationSettings" /> class manages navigation settings that are specific to the <see cref="T:Microsoft.SharePoint.Publishing.Navigation.PortalSiteMapProvider" /> objects that are stored with the <see cref="T:Microsoft.SharePoint.SPSite" /> object for a publishing site. The <see cref="T:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings" /> class provides additional settings that are stored with the <see cref="T:Microsoft.SharePoint.SPWeb" /> object. These additional settings expand the navigation model to support switching between a <b>PortalSiteMapProvider</b> (“structured navigation”) and a <see cref="T:Microsoft.SharePoint.Publishing.Navigation.TaxonomySiteMapProvider" /> (“managed navigation”).</para>
      <para />
    </remarks>
    <example>
      <para>The following example demonstrates creating a sample term set and then configuring a SharePoint web site to use Taxonomy navigation with the sample term set.</para>
      <code>using System;
using Microsoft.SharePoint;
using Microsoft.SharePoint.Taxonomy;
using Microsoft.SharePoint.Publishing.Navigation;

namespace NavigationDemos
{
    public class Class1
    {
        public static readonly Guid NavTermSetId = new Guid("&amp;lt;GUID&amp;gt;");
        public static readonly Guid TaggingTermSetId = new Guid("&amp;lt;GUID&amp;gt;");

        //Creates the sample term set. If it exists, it will be deleted
        public static NavigationTermSet RecreateSampleNavTermSet(TaxonomySession taxonomySession, SPWeb web)
        {
            // Use the first TermStore in the list
            if (taxonomySession.TermStores.Count == 0)
                throw new InvalidOperationException("The Taxonomy Service is offline or missing");

            TermStore termStore = taxonomySession.TermStores[0];

            // Does the TermSet already exist?
            TermSet existingTermSet = termStore.GetTermSet(NavTermSetId);

            if (existingTermSet != null)
            {
                //If the TermSet exists, delete it.
                existingTermSet.Delete();
                termStore.CommitAll();
            }

            // Create a new TermSet
            Group siteCollectionGroup = termStore.GetSiteCollectionGroup(web.Site);
            TermSet termSet = siteCollectionGroup.CreateTermSet("Navigation Demo", NavTermSetId);
            NavigationTermSet navTermSet = NavigationTermSet.GetAsResolvedByWeb(termSet, web,
                StandardNavigationProviderNames.GlobalNavigationTaxonomyProvider);
            navTermSet.IsNavigationTermSet = true;
            navTermSet.TargetUrlForChildTerms.Value = "~site/Pages/Topics/Topic.aspx";
            NavigationTerm term1 = navTermSet.CreateTerm("Term 1", NavigationLinkType.SimpleLink);
            term1.SimpleLinkUrl = "http://www.bing.com/";
            NavigationTerm term2 = navTermSet.CreateTerm("Term 2", NavigationLinkType.FriendlyUrl);
            NavigationTerm term2a = term2.CreateTerm("Term 2 A", NavigationLinkType.FriendlyUrl);
            NavigationTerm term2b = term2.CreateTerm("Term 2 B", NavigationLinkType.FriendlyUrl);
            NavigationTerm term3 = navTermSet.CreateTerm("Term 3", NavigationLinkType.FriendlyUrl);
            termStore.CommitAll();

            return navTermSet;
        }

        //Configures the web site to use Taxonomy navigation with the sample term set.
        public static NavigationTermSet SetUpSampleNavTermSet(TaxonomySession taxonomySession, SPWeb web)
        {
            NavigationTermSet termSet = RecreateSampleNavTermSet(taxonomySession, web);

            // Clear out any old settings
            WebNavigationSettings webNavigationSettings = new WebNavigationSettings(web);
            webNavigationSettings.ResetToDefaults();
            webNavigationSettings.GlobalNavigation.Source = StandardNavigationSource.TaxonomyProvider;
            webNavigationSettings.GlobalNavigation.TermStoreId = termSet.TermStoreId;
            webNavigationSettings.GlobalNavigation.TermSetId = termSet.Id;
            webNavigationSettings.CurrentNavigation.Source = StandardNavigationSource.TaxonomyProvider;
            webNavigationSettings.CurrentNavigation.TermStoreId = termSet.TermStoreId;
            webNavigationSettings.CurrentNavigation.TermSetId = termSet.Id;
            webNavigationSettings.Update(taxonomySession);
            TaxonomyNavigation.FlushSiteFromCache(web.Site);

            return termSet;
        }
    }
}</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebNavigationSettings (Microsoft.SharePoint.SPWeb web);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.SPWeb web) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.#ctor(Microsoft.SharePoint.SPWeb)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (web As SPWeb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebNavigationSettings(Microsoft::SharePoint::SPWeb ^ web);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="web" Type="Microsoft.SharePoint.SPWeb" />
      </Parameters>
      <Docs>
        <param name="web">The <see cref="T:Microsoft.SharePoint.SPWeb" /> object for which the <b>WebNavigationSettings</b> object is initialized.</param>
        <summary>Initializes an instance of the <see cref="T:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings" /> object for the purpose of saving changes to the navigation settings..</summary>
        <remarks>
          <para>This constructor should only be used to create an instance of the <b>WebNavigationSettings</b> class for the purpose of modifying the settings. If read-only access is needed, it is better to use the <see cref="M:Microsoft.SharePoint.Publishing.Navigation.GetWebNavigationSettings(Microsoft.SharePoint.SPWeb)" /> method. <b>GetWebNavigationSettings(Microsoft.SharePoint.SPWeb)</b> fetches a read-only object from the taxonomy navigation cache, avoiding the overhead of querying the SQL database and parsing the XML string.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNewPagesToNavigation">
      <MemberSignature Language="C#" Value="public bool AddNewPagesToNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AddNewPagesToNavigation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.AddNewPagesToNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property AddNewPagesToNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AddNewPagesToNavigation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the New Page ribbon command will automatically create a navigation item for the newly created page.</summary>
        <value>
          <b>true</b> if a navigation item will be created; otherwise, <b>false</b>.</value>
        <remarks>
          <para>This property is only used with managed navigation—that is, when the  <see cref="P:Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSettings.GlobalNavigation" /> property or the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSettings.CurrentNavigation" /> property are configured for the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSource.TaxonomyProvider" />.</para>
          <para>Normally, any user with <b>AddListItem</b> permissions can edit the navigation term set. However, if both the <b>AddNewPagesToNavigation</b> property value and the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.CreateFriendlyUrlsForNewPages" /> property value are <b>false</b>, then the navigation term set can only be edited by users with <b>ManageLists</b> permissions.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFriendlyUrlsForNewPages">
      <MemberSignature Language="C#" Value="public bool CreateFriendlyUrlsForNewPages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateFriendlyUrlsForNewPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.CreateFriendlyUrlsForNewPages" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateFriendlyUrlsForNewPages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateFriendlyUrlsForNewPages { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the New Page ribbon command will automatically create a friendly URL for the newly created page.</summary>
        <value>
          <b>true</b> if a friendly URL will be created automatically for the newly created page; otherwise, <b>false</b>.</value>
        <remarks>
          <para>This property is only used with managed navigation—that is, when the  <see cref="P:Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSettings.GlobalNavigation" /> property or the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSettings.CurrentNavigation" /> property are configured for the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSource.TaxonomyProvider" />.</para>
          <para>Normally, any user with <b>AddListItem</b> permissions can edit the navigation term set. However, if both the <b>AddNewPagesToNavigation</b> property value and the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.CreateFriendlyUrlsForNewPages" /> property value are <b>false</b>, then the navigation term set can only be edited by users with <b>ManageLists</b> permissions.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentNavigation">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSettings CurrentNavigation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSettings CurrentNavigation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.CurrentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentNavigation As StandardNavigationSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::Publishing::Navigation::StandardNavigationSettings ^ CurrentNavigation { Microsoft::SharePoint::Publishing::Navigation::StandardNavigationSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that manages the settings for current navigation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalNavigation">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSettings GlobalNavigation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSettings GlobalNavigation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.GlobalNavigation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalNavigation As StandardNavigationSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::Publishing::Navigation::StandardNavigationSettings ^ GlobalNavigation { Microsoft::SharePoint::Publishing::Navigation::StandardNavigationSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Publishing.Navigation.StandardNavigationSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that manages the settings for global navigation.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetToDefaults">
      <MemberSignature Language="C#" Value="public void ResetToDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetToDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.ResetToDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetToDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetToDefaults();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets a <see cref="T:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings" /> object to its default state.</summary>
        <remarks>
          <para>The default state depends on whether the underlying <see cref="T:Microsoft.SharePoint.SPWeb" /> is the root web for its <see cref="T:Microsoft.SharePoint.SPSite" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Updates the <see cref="T:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (Microsoft.SharePoint.Taxonomy.TaxonomySession taxonomySession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(class Microsoft.SharePoint.Taxonomy.TaxonomySession taxonomySession) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.Update(Microsoft.SharePoint.Taxonomy.TaxonomySession)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update(Microsoft::SharePoint::Taxonomy::TaxonomySession ^ taxonomySession);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.SharePoint.Publishing</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallable(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taxonomySession" Type="Microsoft.SharePoint.Taxonomy.TaxonomySession" />
      </Parameters>
      <Docs>
        <param name="taxonomySession">To be added.</param>
        <summary>Writes new navigation settings to the <see cref="T:Microsoft.SharePoint.SPWeb" /> object that was passed to the <see cref="M:Microsoft.SharePoint.Publishing.Navigation.WebNavigationSettings.#ctor(Microsoft.SharePoint.SPWeb)" />constructor, possibly also updating any associated <see cref="T:Microsoft.SharePoint.Publishing.Navigation.NavigationTermSet" /> objects.
</summary>
        <remarks>
          <para>If managed navigation is being enabled or disabled, or a different <b>NavigationTermSet</b> object has been specified, then the affected <see cref="T:Microsoft.SharePoint.Taxonomy.TermSet" /> objects are also updated to indicate whether they are attached to the referencing <see cref="T:Microsoft.SharePoint.SPWeb" /> object. For newly selected term sets, the <see cref="P:Microsoft.SharePoint.Publishing.Navigation.NavigationTermSet.IsNavigationTermSet" /> flag will be set to <b>true</b>, and the <see cref="P:Microsoft.SharePoint.Taxonomy.TermSet.AvailableForTagging" /> flag will be set to <b>false</b>.</para>
          <para />
          <para>If the optional <see cref="T:Microsoft.SharePoint.Taxonomy.TaxonomySession" /> parameter is omitted, then a new <b>TaxonomySession</b> object is automatically constructed. Automatically constructing the <b>TaxonomySession</b> object may increase the likelihood of save conflict errors; for example, if other <b>TaxonomySession</b> objects are simultaneously accessing the same <b>TermSet</b>. </para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>